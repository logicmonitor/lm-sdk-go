---
swagger: "2.0"
info:
  description: "LogicMonitor is a SaaS-based performance monitoring platform that\
    \ provides full visibility into complex, hybrid infrastructures, offering granular\
    \ performance monitoring and actionable data and insights. logicmonitor_sdk enables\
    \ you to manage your LogicMonitor account programmatically."
  version: "1.0.0"
  title: "logicmonitor_sdk"
  contact:
    name: "SDK Support"
    url: "https://www.logicmonitor.com/support/rest-api-developers-guide/"
    email: "sdk@logicmonitor.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/santaba/rest"
schemes:
- "https"
- "http"
paths:
  /device/devices/{deviceId}/devicedatasources:
    get:
      summary: "get device datasource list "
      description: ""
      operationId: "getDeviceDatasourceList"
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceId"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceDatasourcePaginationResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/groups/{id}/devices:
    get:
      summary: "get immediate devices under group"
      description: ""
      operationId: "getImmediateDeviceListByDeviceGroupId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DevicePaginationResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/devices/{deviceId}/devicedatasources/{hdsId}/instances/{instanceId}/config:
    get:
      summary: "get device configSource instance config list"
      description: ""
      operationId: "getDeviceConfigSourceConfigList"
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceId"
      - name: "hdsId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "HdsId"
      - name: "instanceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "InstanceId"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceDatasourceInstanceConfigPaginationResponse"
      security:
      - LMv1: []
      - Basic: []
  /dashboard/groups/{id}/clone:
    post:
      operationId: "clone"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/DashboardGroup"
        x-exportParamName: "Body"
      - name: "recursive"
        in: "query"
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "Recursive"
        x-optionalDataType: "Bool"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Response"
          headers: {}
      security:
      - LMv1: []
      - Basic: []
  /service/groups/{id}:
    get:
      summary: "get service group"
      description: ""
      operationId: "getServiceGroupById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ServiceGroupResponse"
      security:
      - LMv1: []
      - Basic: []
    put:
      summary: "update service group"
      description: ""
      operationId: "updateServiceGroupById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ServiceGroup"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ServiceGroupResponse"
      security:
      - LMv1: []
      - Basic: []
    delete:
      summary: "delete service group"
      description: ""
      operationId: "deleteServiceGroupById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "deleteChildren"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "DeleteChildren"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NullObjectResponse"
      security:
      - LMv1: []
      - Basic: []
    patch:
      summary: "patch service group"
      description: ""
      operationId: "patchServiceGroupById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ServiceGroup"
        x-exportParamName: "Body"
      - name: "opType"
        in: "query"
        required: false
        type: "string"
        default: "refresh"
        x-exportParamName: "OpType"
        x-optionalDataType: "String"
      - name: "patchFields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "PatchFields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ServiceGroupResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/devices:
    get:
      summary: "get device list"
      description: ""
      operationId: "getDeviceList"
      produces:
      - "application/json"
      parameters:
      - name: "start"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Start"
        x-optionalDataType: "Int64"
      - name: "end"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "End"
        x-optionalDataType: "Int64"
      - name: "netflowFilter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "NetflowFilter"
        x-optionalDataType: "String"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DevicePaginationResponse"
      security:
      - LMv1: []
      - Basic: []
    post:
      summary: "add a new device"
      description: ""
      operationId: "addDevice"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "start"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Start"
        x-optionalDataType: "Int64"
      - name: "end"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "End"
        x-optionalDataType: "Int64"
      - name: "netflowFilter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "NetflowFilter"
        x-optionalDataType: "String"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Device"
        x-exportParamName: "Body"
      - name: "addFromWizard"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "AddFromWizard"
        x-optionalDataType: "Bool"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceResponse"
      security:
      - LMv1: []
      - Basic: []
  /alert/alerts/{id}:
    get:
      summary: "get alert"
      description: ""
      operationId: "getAlertById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "needMessage"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "NeedMessage"
        x-optionalDataType: "Bool"
      - name: "customColumns"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CustomColumns"
        x-optionalDataType: "String"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AlertResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/devices/{id}/alerts:
    get:
      summary: "get alerts"
      description: ""
      operationId: "getAlertListByDeviceId"
      produces:
      - "application/json"
      parameters:
      - name: "start"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Start"
        x-optionalDataType: "Int64"
      - name: "end"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "End"
        x-optionalDataType: "Int64"
      - name: "netflowFilter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "NetflowFilter"
        x-optionalDataType: "String"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "needMessage"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "NeedMessage"
        x-optionalDataType: "Bool"
      - name: "customColumns"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CustomColumns"
        x-optionalDataType: "String"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "searchId"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "SearchId"
        x-optionalDataType: "String"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AlertPaginationResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/devices/{id}/scheduleAutoDiscovery:
    post:
      summary: "schedule auto discovery for a host"
      description: ""
      operationId: "scheduleAutoDiscoveryByDeviceId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "start"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Start"
        x-optionalDataType: "Int64"
      - name: "end"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "End"
        x-optionalDataType: "Int64"
      - name: "netflowFilter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "NetflowFilter"
        x-optionalDataType: "String"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/StringResponse"
      security:
      - LMv1: []
      - Basic: []
  /alert/alerts:
    get:
      summary: "get alert list"
      description: ""
      operationId: "getAlertList"
      produces:
      - "application/json"
      parameters:
      - name: "needMessage"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "NeedMessage"
        x-optionalDataType: "Bool"
      - name: "customColumns"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CustomColumns"
        x-optionalDataType: "String"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "searchId"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "SearchId"
        x-optionalDataType: "String"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AlertPaginationResponse"
      security:
      - LMv1: []
      - Basic: []
  /setting/opsnotes:
    get:
      summary: "get opsnote list"
      description: ""
      operationId: "getOpsNoteList"
      produces:
      - "application/json"
      parameters:
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OpsNotePaginationResponse"
      security:
      - LMv1: []
      - Basic: []
    post:
      summary: "add opsnote"
      description: ""
      operationId: "addOpsNote"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/RestOpsNoteV1"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OpsNoteResponse"
      security:
      - LMv1: []
      - Basic: []
  /dashboard/groups/autocomplete:
    get:
      summary: "get dashboard group list using for autocomplete"
      description: ""
      operationId: "getDashboardGroupListForAutocomplete"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DashboardGroupPaginationResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/devices/{deviceId}/devicedatasources/{hdsId}/instances/{instanceId}/config/{id}:
    get:
      summary: "get device configSource instance config by id "
      description: ""
      operationId: "getDeviceConfigSourceConfigById"
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceId"
      - name: "hdsId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "HdsId"
      - name: "instanceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "InstanceId"
      - name: "id"
        in: "path"
        required: true
        type: "string"
        pattern: "[-_a-zA-Z0-9]+"
        x-exportParamName: "Id"
      - name: "format"
        in: "query"
        required: false
        type: "string"
        default: "json"
        x-exportParamName: "Format"
        x-optionalDataType: "String"
      - name: "startEpoch"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "StartEpoch"
        x-optionalDataType: "Int64"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceDatasourceInstanceConfigResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/groups/{deviceGroupId}/datasources:
    get:
      summary: "get device group datasource list"
      description: ""
      operationId: "getDeviceGroupDatasourceList"
      produces:
      - "application/json"
      parameters:
      - name: "deviceGroupId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceGroupId"
      - name: "includeDisabledDataSourceWithoutInstance"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "IncludeDisabledDataSourceWithoutInstance"
        x-optionalDataType: "Bool"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceGroupDatasourceResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/devices/{deviceId}/devicedatasources/{deviceDsId}/groups:
    post:
      summary: "add device datasource instance group "
      description: ""
      operationId: "addDeviceDatasourceInstanceGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceId"
      - name: "deviceDsId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceDsId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/DeviceDataSourceInstanceGroup"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceDatasourceInstanceGroupResponse"
      security:
      - LMv1: []
      - Basic: []
  /service/services/{serviceId}/checkpoints/{checkpointId}/graphs/{graphName}/data:
    get:
      summary: "get service graph data"
      description: ""
      operationId: "getServiceGraphData"
      produces:
      - "application/json"
      parameters:
      - name: "serviceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "ServiceId"
      - name: "checkpointId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "CheckpointId"
      - name: "start"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Start"
        x-optionalDataType: "Int64"
      - name: "end"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "End"
        x-optionalDataType: "Int64"
      - name: "graphName"
        in: "path"
        required: true
        type: "string"
        pattern: ".+"
        x-exportParamName: "GraphName"
      - name: "format"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Format"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/GraphPlotResponse"
      security:
      - LMv1: []
      - Basic: []
  /setting/alert/chains:
    get:
      summary: "get escalation chain list"
      description: ""
      operationId: "getEscalationChainList"
      produces:
      - "application/json"
      parameters:
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/EscalationChainPaginationResponse"
      security:
      - LMv1: []
      - Basic: []
    post:
      summary: "add escalation chain"
      description: ""
      operationId: "addEscalationChain"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/EscalatingChain"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/EscalationChainResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/groups/{gid}/properties:
    get:
      summary: "get device group properties"
      description: ""
      operationId: "getDeviceGroupProperties"
      produces:
      - "application/json"
      parameters:
      - name: "gid"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Gid"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PropertyPaginationResponse"
      security:
      - LMv1: []
      - Basic: []
    post:
      summary: "add device group property"
      description: ""
      operationId: "addDeviceGroupProperty"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "gid"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Gid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/EntityProperty"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PropertyResponse"
      security:
      - LMv1: []
      - Basic: []
  /report/reports:
    get:
      summary: "get report list"
      description: ""
      operationId: "getReportList"
      produces:
      - "application/json"
      parameters:
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ReportPaginationResponse"
      security:
      - LMv1: []
      - Basic: []
    post:
      summary: "add report"
      description: ""
      operationId: "addReport"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ReportBase"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ReportResponse"
      security:
      - LMv1: []
      - Basic: []
  /dashboard/groups/{id}/token/{tokenname}/values:
    get:
      operationId: "getValuesOfToken"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "tokenname"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Tokenname"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Response"
          headers: {}
      security:
      - LMv1: []
      - Basic: []
  /setting/collectors/{id}:
    get:
      summary: "get collector"
      description: ""
      operationId: "getCollectorById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CollectorResponse"
      security:
      - LMv1: []
      - Basic: []
    put:
      summary: "update collector"
      description: ""
      operationId: "updateCollectorById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Collector"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CollectorResponse"
      security:
      - LMv1: []
      - Basic: []
    delete:
      summary: "delete collector"
      description: ""
      operationId: "deleteCollectorById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CollectorResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/devices/{id}:
    get:
      summary: "get device by id"
      description: ""
      operationId: "getDeviceById"
      produces:
      - "application/json"
      parameters:
      - name: "start"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Start"
        x-optionalDataType: "Int64"
      - name: "end"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "End"
        x-optionalDataType: "Int64"
      - name: "netflowFilter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "NetflowFilter"
        x-optionalDataType: "String"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceResponse"
      security:
      - LMv1: []
      - Basic: []
    put:
      summary: "update a device"
      description: ""
      operationId: "updateDevice"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "start"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Start"
        x-optionalDataType: "Int64"
      - name: "end"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "End"
        x-optionalDataType: "Int64"
      - name: "netflowFilter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "NetflowFilter"
        x-optionalDataType: "String"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Device"
        x-exportParamName: "Body"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "opType"
        in: "query"
        required: false
        type: "string"
        default: "refresh"
        x-exportParamName: "OpType"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceResponse"
      security:
      - LMv1: []
      - Basic: []
    delete:
      summary: "delete a device"
      description: ""
      operationId: "deleteDevice"
      produces:
      - "application/json"
      parameters:
      - name: "start"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Start"
        x-optionalDataType: "Int64"
      - name: "end"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "End"
        x-optionalDataType: "Int64"
      - name: "netflowFilter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "NetflowFilter"
        x-optionalDataType: "String"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "deleteHard"
        in: "query"
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "DeleteHard"
        x-optionalDataType: "Bool"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NullObjectResponse"
      security:
      - LMv1: []
      - Basic: []
    patch:
      summary: "patch a device"
      description: ""
      operationId: "patchDeviceById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "start"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Start"
        x-optionalDataType: "Int64"
      - name: "end"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "End"
        x-optionalDataType: "Int64"
      - name: "netflowFilter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "NetflowFilter"
        x-optionalDataType: "String"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Device"
        x-exportParamName: "Body"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "opType"
        in: "query"
        required: false
        type: "string"
        default: "refresh"
        x-exportParamName: "OpType"
        x-optionalDataType: "String"
      - name: "patchFields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "PatchFields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/devices/{deviceId}/devicedatasources/{hdsId}/instances/{id}/graphs/{graphId}/data:
    get:
      summary: "get device instance graph data "
      description: ""
      operationId: "getDeviceDatasourceInstanceGraphData"
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceId"
      - name: "hdsId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "HdsId"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "start"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Start"
        x-optionalDataType: "Int64"
      - name: "end"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "End"
        x-optionalDataType: "Int64"
      - name: "graphId"
        in: "path"
        required: true
        type: "integer"
        pattern: "-?\\d+"
        format: "int32"
        x-exportParamName: "GraphId"
      - name: "format"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Format"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/GraphPlotResponse"
      security:
      - LMv1: []
      - Basic: []
  /setting/admins/timezone/{id}/timezoneInUsing:
    put:
      operationId: "editTimezoneInUsing"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "timezoneInUsing"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "TimezoneInUsing"
        x-optionalDataType: "String"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Response"
          headers: {}
      security:
      - LMv1: []
      - Basic: []
  /device/devices/{id}/flows:
    get:
      operationId: "getFlows"
      produces:
      - "application/json"
      parameters:
      - name: "start"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Start"
        x-optionalDataType: "Int64"
      - name: "end"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "End"
        x-optionalDataType: "Int64"
      - name: "netflowFilter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "NetflowFilter"
        x-optionalDataType: "String"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Response"
          headers: {}
      security:
      - LMv1: []
      - Basic: []
  /dashboard/groups/asyncclone/{jobId}:
    get:
      operationId: "queryCloneStatus"
      produces:
      - "application/json"
      parameters:
      - name: "jobId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "JobId"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Response"
          headers: {}
      security:
      - LMv1: []
      - Basic: []
  /service/groups:
    get:
      summary: "get service group list"
      description: ""
      operationId: "getServiceGroupList"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ServiceGroupPaginationResponse"
      security:
      - LMv1: []
      - Basic: []
    post:
      summary: "add service group"
      description: ""
      operationId: "addServiceGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ServiceGroup"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ServiceGroupResponse"
      security:
      - LMv1: []
      - Basic: []
  /setting/admins/{id}/finishwizard:
    post:
      operationId: "finishWizard"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Response"
          headers: {}
      security:
      - LMv1: []
      - Basic: []
  /setting/roles/{id}:
    get:
      summary: "get role by id"
      description: ""
      operationId: "getRoleById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/RoleResponse"
      security:
      - LMv1: []
      - Basic: []
    put:
      summary: "update role"
      description: ""
      operationId: "updateRoleById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Role"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/RoleResponse"
      security:
      - LMv1: []
      - Basic: []
    delete:
      summary: "delete role"
      description: ""
      operationId: "deleteRoleById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/RoleResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/groups/{id}:
    get:
      summary: "get device group"
      description: ""
      operationId: "getDeviceGroupById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceGroupResponse"
      security:
      - LMv1: []
      - Basic: []
    put:
      summary: "update device group"
      description: ""
      operationId: "updateDeviceGroupById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/DeviceGroup"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceGroupResponse"
      security:
      - LMv1: []
      - Basic: []
    delete:
      summary: "delete device group"
      description: ""
      operationId: "deleteDeviceGroupById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "deleteChildren"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "DeleteChildren"
        x-optionalDataType: "Bool"
      - name: "deleteHard"
        in: "query"
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "DeleteHard"
        x-optionalDataType: "Bool"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NullObjectResponse"
      security:
      - LMv1: []
      - Basic: []
    patch:
      summary: "patch device group"
      description: ""
      operationId: "patchDeviceGroupById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "opType"
        in: "query"
        required: false
        type: "string"
        default: "refresh"
        x-exportParamName: "OpType"
        x-optionalDataType: "String"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/DeviceGroup"
        x-exportParamName: "Body"
      - name: "patchFields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "PatchFields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceGroupResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/devices/{deviceId}/devicedatasources/{hdsId}/instances:
    post:
      summary: "add device instance "
      description: ""
      operationId: "addDeviceDatasourceInstance"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceId"
      - name: "hdsId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "HdsId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/DeviceDataSourceInstance"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceDatasourceInstanceResponse"
      security:
      - LMv1: []
      - Basic: []
  /setting/collectors:
    get:
      summary: "get collector list"
      description: ""
      operationId: "getCollectorList"
      produces:
      - "application/json"
      parameters:
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CollectorPaginationResponse"
      security:
      - LMv1: []
      - Basic: []
    post:
      summary: "add collector"
      description: ""
      operationId: "addCollector"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Collector"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CollectorResponse"
      security:
      - LMv1: []
      - Basic: []
  /dashboard/widgets/{id}:
    get:
      summary: "get widget by id"
      description: ""
      operationId: "getWidgetById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/WidgetResponse"
      security:
      - LMv1: []
      - Basic: []
    put:
      summary: "update widget by id"
      description: ""
      operationId: "updateWidgetById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/WidgetBaseVersion1"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/WidgetResponse"
      security:
      - LMv1: []
      - Basic: []
    delete:
      summary: "delete widget by id"
      description: ""
      operationId: "deleteWidgetById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NullObjectResponse"
      security:
      - LMv1: []
      - Basic: []
  /service/services/{id}/alerts:
    get:
      summary: "get service alert list by id"
      description: ""
      operationId: "getServiceAlertListByServiceId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "needMessage"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "NeedMessage"
        x-optionalDataType: "Bool"
      - name: "customColumns"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CustomColumns"
        x-optionalDataType: "String"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AlertPaginationResponse"
      security:
      - LMv1: []
      - Basic: []
  /setting/admins/{adminId}/apitokens:
    get:
      summary: "get apiToken by admin"
      description: ""
      operationId: "getApiTokenListByAdminId"
      produces:
      - "application/json"
      parameters:
      - name: "adminId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "AdminId"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ApiTokenPaginationResponse"
      security:
      - LMv1: []
      - Basic: []
    post:
      summary: "add apiToken by admin"
      description: ""
      operationId: "addApiTokenByAdminId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "adminId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "AdminId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/DeviceDatasourceInstanceConfigPaginationResponse"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ApiTokenResponse"
      security:
      - LMv1: []
      - Basic: []
  /dashboard/groups/token/{tokenname}:
    delete:
      operationId: "deleteToken"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "tokenname"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Tokenname"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/WidgetTokenValue"
        x-exportParamName: "Body"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Response"
          headers: {}
      security:
      - LMv1: []
      - Basic: []
  /report/reports/{id}/tasks/{taskId}:
    get:
      operationId: "fetchReport"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "taskId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\d+"
        x-exportParamName: "TaskId"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Response"
          headers: {}
      security:
      - LMv1: []
      - Basic: []
  /sdt/sdts:
    get:
      summary: "get SDT list"
      description: ""
      operationId: "getSDTList"
      produces:
      - "application/json"
      parameters:
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SDTPaginationResponse"
      security:
      - LMv1: []
      - Basic: []
    post:
      summary: "add SDT"
      description: ""
      operationId: "addSDT"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/SDTBase"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SDTResponse"
      security:
      - LMv1: []
      - Basic: []
  /dashboard/widgets:
    get:
      summary: "get widget list"
      description: ""
      operationId: "getWidgetList"
      produces:
      - "application/json"
      parameters:
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/WidgetPaginationResponse"
      security:
      - LMv1: []
      - Basic: []
    post:
      summary: "add widget"
      description: ""
      operationId: "addWidget"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/WidgetBaseVersion1"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/WidgetResponse"
      security:
      - LMv1: []
      - Basic: []
  /alert/alerts/{id}/ack:
    post:
      summary: "ack alert by id"
      description: ""
      operationId: "ackAlertById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/AlertAck"
        x-exportParamName: "Body"
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NullObjectResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/devices/{id}/sdts:
    get:
      summary: "get all device related SDTs by id"
      description: ""
      operationId: "getAllSDTListByDeviceId"
      produces:
      - "application/json"
      parameters:
      - name: "start"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Start"
        x-optionalDataType: "Int64"
      - name: "end"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "End"
        x-optionalDataType: "Int64"
      - name: "netflowFilter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "NetflowFilter"
        x-optionalDataType: "String"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SDTPaginationResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/unmonitoreddevices:
    get:
      summary: "get unmonitored device list"
      description: ""
      operationId: "getUnmonitoredDeviceList"
      produces:
      - "application/json"
      parameters:
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/UnmonitoredDevicePaginationResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/devices/{deviceId}/devicedatasources/{deviceDsId}/groups/{id}:
    get:
      summary: "get device datasource instance group "
      description: ""
      operationId: "getDeviceDatasourceInstanceGroupById"
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceId"
      - name: "deviceDsId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceDsId"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceDatasourceInstanceGroupResponse"
      security:
      - LMv1: []
      - Basic: []
    put:
      summary: "update device datasource instance group "
      description: ""
      operationId: "updateDeviceDatasourceInstanceGroupById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceId"
      - name: "deviceDsId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceDsId"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/DeviceDataSourceInstanceGroup"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceDatasourceInstanceGroupResponse"
      security:
      - LMv1: []
      - Basic: []
  /setting/datasources:
    get:
      summary: "get datasource list"
      description: ""
      operationId: "getDatasourceList"
      produces:
      - "application/json"
      parameters:
      - name: "format"
        in: "query"
        required: false
        type: "string"
        default: "json"
        x-exportParamName: "Format"
        x-optionalDataType: "String"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DatasourcePaginationResponse"
      security:
      - LMv1: []
      - Basic: []
  /dashboard/groups/{id}:
    get:
      summary: "get dashboard group"
      description: ""
      operationId: "getDashboardGroupById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "template"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Template"
        x-optionalDataType: "Bool"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DashboardGroupResponse"
      security:
      - LMv1: []
      - Basic: []
    put:
      summary: "update dashboard group"
      description: ""
      operationId: "updateDashboardGroupById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/DashboardGroup"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DashboardGroupResponse"
      security:
      - LMv1: []
      - Basic: []
    delete:
      summary: "delete dashboard group"
      description: ""
      operationId: "deleteDashboardGroupById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "allowNonEmptyGroup"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "AllowNonEmptyGroup"
        x-optionalDataType: "Bool"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NullObjectResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/groups:
    get:
      summary: "get device group list"
      description: ""
      operationId: "getDeviceGroupList"
      produces:
      - "application/json"
      parameters:
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceGroupPaginationResponse"
      security:
      - LMv1: []
      - Basic: []
    post:
      summary: "add device group"
      description: ""
      operationId: "addDeviceGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/DeviceGroup"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceGroupResponse"
      security:
      - LMv1: []
      - Basic: []
  /service/services/{id}:
    get:
      summary: "get service by id"
      description: ""
      operationId: "getServiceById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ServiceResponse"
      security:
      - LMv1: []
      - Basic: []
    put:
      summary: "update service by id"
      description: ""
      operationId: "updateServiceById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ServiceBaseVersion1"
        x-exportParamName: "Body"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ServiceResponse"
      security:
      - LMv1: []
      - Basic: []
    delete:
      summary: "delete service by id"
      description: ""
      operationId: "deleteServiceById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NullObjectResponse"
      security:
      - LMv1: []
      - Basic: []
    patch:
      summary: "patch service by id"
      description: ""
      operationId: "patchServiceById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "opType"
        in: "query"
        required: false
        type: "string"
        default: "refresh"
        x-exportParamName: "OpType"
        x-optionalDataType: "String"
      - in: "body"
        name: "body"
        description: "This is a JSON string"
        required: true
        schema:
          type: "string"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ServiceResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/devices/{deviceId}/devicedatasources/{deviceDsId}/groups/{dsigId}/graphs/{ographId}/data:
    get:
      summary: "get device instance group overview graph data "
      description: ""
      operationId: "getDeviceDatasourceInstanceGroupOverviewGraphData"
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceId"
      - name: "deviceDsId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceDsId"
      - name: "dsigId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DsigId"
      - name: "start"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Start"
        x-optionalDataType: "Int64"
      - name: "end"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "End"
        x-optionalDataType: "Int64"
      - name: "ographId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "OgraphId"
      - name: "format"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Format"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/GraphPlotResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/devices/{deviceId}/devicedatasources/{id}/data:
    get:
      summary: "get device datasource data "
      description: ""
      operationId: "getDeviceDatasourceDataById"
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceId"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "period"
        in: "query"
        required: false
        type: "number"
        default: 1.0
        format: "double"
        x-exportParamName: "Period"
        x-optionalDataType: "Float64"
      - name: "start"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "Start"
        x-optionalDataType: "Int64"
      - name: "end"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "End"
        x-optionalDataType: "Int64"
      - name: "datapoints"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Datapoints"
        x-optionalDataType: "String"
      - name: "format"
        in: "query"
        required: false
        type: "string"
        default: "json"
        x-exportParamName: "Format"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceDatasourceDataResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/devices/{deviceId}/properties/{name}:
    get:
      summary: "get device property by name"
      description: ""
      operationId: "getDevicePropertyByName"
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceId"
      - name: "name"
        in: "path"
        required: true
        type: "string"
        pattern: "[^/]+"
        x-exportParamName: "Name"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PropertyResponse"
      security:
      - LMv1: []
      - Basic: []
    put:
      summary: "update device  property"
      description: ""
      operationId: "updateDevicePropertyByName"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceId"
      - name: "name"
        in: "path"
        required: true
        type: "string"
        pattern: "[^/]+"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/EntityProperty"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PropertyResponse"
      security:
      - LMv1: []
      - Basic: []
    delete:
      summary: "delete device  property"
      description: ""
      operationId: "deleteDevicePropertyByName"
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceId"
      - name: "name"
        in: "path"
        required: true
        type: "string"
        pattern: "[^/]+"
        x-exportParamName: "Name"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NullObjectResponse"
      security:
      - LMv1: []
      - Basic: []
  /setting/admins/{id}:
    get:
      summary: "get admin"
      description: ""
      operationId: "getAdminById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AdminResponse"
      security:
      - LMv1: []
      - Basic: []
    put:
      summary: "update admin"
      description: ""
      operationId: "updateAdminById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Admin"
        x-exportParamName: "Body"
      - name: "changePassword"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "ChangePassword"
        x-optionalDataType: "Bool"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AdminResponse"
      security:
      - LMv1: []
      - Basic: []
    delete:
      summary: "delete admin"
      description: ""
      operationId: "deleteAdminById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NullObjectResponse"
      security:
      - LMv1: []
      - Basic: []
  /setting/admins/{adminId}/apitokens/{apitokenId}:
    put:
      summary: "update apiToken by admin"
      description: ""
      operationId: "updateApiTokenByAdminId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "adminId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "AdminId"
      - name: "apitokenId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "ApitokenId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/DeviceDatasourceInstanceConfigPaginationResponse"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ApiTokenResponse"
      security:
      - LMv1: []
      - Basic: []
    delete:
      summary: "delete apiToken "
      description: ""
      operationId: "deleteApiTokenById"
      produces:
      - "application/json"
      parameters:
      - name: "adminId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "AdminId"
      - name: "apitokenId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "ApitokenId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ApiTokenResponse"
      security:
      - LMv1: []
      - Basic: []
  /alert/alerts/{id}/note:
    post:
      summary: "add alert note"
      description: ""
      operationId: "addAlertNoteById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/AlertAck"
        x-exportParamName: "Body"
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NullObjectResponse"
      security:
      - LMv1: []
      - Basic: []
  /dashboard/dashboards:
    get:
      summary: "get dashboard list"
      description: ""
      operationId: "getDashboardList"
      produces:
      - "application/json"
      parameters:
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DashboardPaginationResponse"
      security:
      - LMv1: []
      - Basic: []
    post:
      summary: "add dashboard"
      description: ""
      operationId: "addDashboard"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Dashboard"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DashboardResponse"
      security:
      - LMv1: []
      - Basic: []
  /setting/admins/apitokens:
    post:
      operationId: "add"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/DeviceDatasourceInstanceConfigPaginationResponse"
        x-exportParamName: "Body"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Response"
          headers: {}
      security:
      - LMv1: []
      - Basic: []
  /service/services/{srvId}/checkpoints/{checkId}/data:
    get:
      summary: "get service checkpoint data by id"
      description: ""
      operationId: "getServiceCheckpointDataById"
      produces:
      - "application/json"
      parameters:
      - name: "srvId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "SrvId"
      - name: "checkId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "CheckId"
      - name: "period"
        in: "query"
        required: false
        type: "number"
        default: 1.0
        format: "double"
        x-exportParamName: "Period"
        x-optionalDataType: "Float64"
      - name: "start"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "Start"
        x-optionalDataType: "Int64"
      - name: "end"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "End"
        x-optionalDataType: "Int64"
      - name: "datapoints"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Datapoints"
        x-optionalDataType: "String"
      - name: "format"
        in: "query"
        required: false
        type: "string"
        default: "json"
        x-exportParamName: "Format"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ServiceCheckpointDataResponse"
      security:
      - LMv1: []
      - Basic: []
  /setting/alert/chains/{id}:
    get:
      summary: "get escalation chain by id"
      description: ""
      operationId: "getEscalationChainById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/EscalationChainResponse"
      security:
      - LMv1: []
      - Basic: []
    put:
      summary: "update escalation chain by id"
      description: ""
      operationId: "updateEscalationChainById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/EscalatingChain"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/EscalationChainResponse"
      security:
      - LMv1: []
      - Basic: []
    delete:
      summary: "delete escalation chain by id"
      description: ""
      operationId: "deleteEscalationChainById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NullObjectResponse"
      security:
      - LMv1: []
      - Basic: []
  /setting/collectors/groups/{id}:
    get:
      summary: "get collector group"
      description: ""
      operationId: "getCollectorGroupById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CollectorGroupResponse"
      security:
      - LMv1: []
      - Basic: []
    put:
      summary: "update collector group"
      description: ""
      operationId: "updateCollectorGroupById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/CollectorGroup"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CollectorGroupResponse"
      security:
      - LMv1: []
      - Basic: []
    delete:
      summary: "delete collector group"
      description: ""
      operationId: "deleteCollectorGroupById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CollectorGroupResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/groups/{deviceGroupId}/datasources/{dsId}/alertsettings:
    get:
      summary: "get device group datasource alert setting "
      description: ""
      operationId: "getDeviceGroupDatasourceAlertSetting"
      produces:
      - "application/json"
      parameters:
      - name: "deviceGroupId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceGroupId"
      - name: "dsId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DsId"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceGroupDatasourceAlertConfigResponse"
      security:
      - LMv1: []
      - Basic: []
    put:
      summary: "update device group datasource alert setting "
      description: ""
      operationId: "updateDeviceGroupDatasourceAlertSetting"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "deviceGroupId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceGroupId"
      - name: "dsId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DsId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/DeviceGroupDataSourceAlertConfig"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceGroupDatasourceAlertConfigResponse"
      security:
      - LMv1: []
      - Basic: []
  /setting/alert/rules/{id}:
    get:
      summary: "get alert rule by id"
      description: ""
      operationId: "getAlertRuleById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AlertRuleResponse"
      security:
      - LMv1: []
      - Basic: []
    put:
      summary: "update alert rule"
      description: ""
      operationId: "updateAlertRuleById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/AlertRule"
        x-exportParamName: "Body"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AlertRuleResponse"
      security:
      - LMv1: []
      - Basic: []
    delete:
      summary: "delete alert rule"
      description: ""
      operationId: "deleteAlertRuleById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AlertRuleResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/devicedatasourceinstances/{instanceId}/graphs/{graphId}/data:
    get:
      summary: "get device instance graphData"
      description: ""
      operationId: "getDeviceInstanceGraphDataOnlyByInstanceId"
      produces:
      - "application/json"
      parameters:
      - name: "instanceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "InstanceId"
      - name: "graphId"
        in: "path"
        required: true
        type: "integer"
        pattern: "-?\\d+"
        format: "int32"
        x-exportParamName: "GraphId"
      - name: "start"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Start"
        x-optionalDataType: "Int64"
      - name: "end"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "End"
        x-optionalDataType: "Int64"
      - name: "format"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Format"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/GraphPlotResponse"
      security:
      - LMv1: []
      - Basic: []
  /setting/datasources/{id}:
    get:
      summary: "get datasource by id"
      description: ""
      operationId: "getDatasourceById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "format"
        in: "query"
        required: false
        type: "string"
        default: "json"
        x-exportParamName: "Format"
        x-optionalDataType: "String"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DatasourceResponse"
      security:
      - LMv1: []
      - Basic: []
  /service/services/{id}/properties:
    get:
      summary: "get service property list by id"
      description: ""
      operationId: "getServicePropertyListByServiceId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PropertyPaginationResponse"
      security:
      - LMv1: []
      - Basic: []
  /service/smcheckpoints:
    get:
      summary: "get site monitor checkpoint list"
      description: ""
      operationId: "getSiteMonitorCheckPointList"
      produces:
      - "application/json"
      parameters:
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SiteMonitorCheckPointPaginationResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/devices/{deviceId}/devicedatasources/{hdsId}/instances/{instanceId}/alertsettings/{id}:
    get:
      summary: "get device instance alert setting"
      description: ""
      operationId: "getDeviceDatasourceInstanceAlertSettingById"
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceId"
      - name: "hdsId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "HdsId"
      - name: "instanceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "InstanceId"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceDatasourceInstanceAlertSettingResponse"
      security:
      - LMv1: []
      - Basic: []
    put:
      summary: "update device instance alert setting"
      description: ""
      operationId: "updateDeviceDatasourceInstanceAlertSettingById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceId"
      - name: "hdsId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "HdsId"
      - name: "instanceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "InstanceId"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/DeviceDataSourceInstanceAlertSetting"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceDatasourceInstanceAlertSettingResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/devices/{id}/topTalkersGraph:
    get:
      operationId: "getBandwidthGraphData"
      produces:
      - "application/json"
      parameters:
      - name: "start"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Start"
        x-optionalDataType: "Int64"
      - name: "end"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "End"
        x-optionalDataType: "Int64"
      - name: "netflowFilter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "NetflowFilter"
        x-optionalDataType: "String"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "start"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Start"
        x-optionalDataType: "Int64"
      - name: "end"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "End"
        x-optionalDataType: "Int64"
      - name: "format"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Format"
        x-optionalDataType: "String"
      - name: "keyword"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Keyword"
        x-optionalDataType: "String"
      responses:
        default:
          description: "successful operation"
      security:
      - LMv1: []
      - Basic: []
  /device/groups/{gid}/properties/{name}:
    get:
      summary: "get device group property by name"
      description: ""
      operationId: "getDeviceGroupPropertyByName"
      produces:
      - "application/json"
      parameters:
      - name: "gid"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Gid"
      - name: "name"
        in: "path"
        required: true
        type: "string"
        pattern: "[^/]+"
        x-exportParamName: "Name"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PropertyResponse"
      security:
      - LMv1: []
      - Basic: []
    put:
      summary: "update device group property"
      description: ""
      operationId: "updateDeviceGroupPropertyByName"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "gid"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Gid"
      - name: "name"
        in: "path"
        required: true
        type: "string"
        pattern: "[^/]+"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/EntityProperty"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PropertyResponse"
      security:
      - LMv1: []
      - Basic: []
    delete:
      summary: "delete device group property"
      description: ""
      operationId: "deleteDeviceGroupPropertyByName"
      produces:
      - "application/json"
      parameters:
      - name: "gid"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Gid"
      - name: "name"
        in: "path"
        required: true
        type: "string"
        pattern: "[^/]+"
        x-exportParamName: "Name"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NullObjectResponse"
      security:
      - LMv1: []
      - Basic: []
  /dashboard/groups/{id}/asyncclone:
    post:
      operationId: "AsyncClone"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/DashboardGroup"
        x-exportParamName: "Body"
      - name: "recursive"
        in: "query"
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "Recursive"
        x-optionalDataType: "Bool"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Response"
          headers: {}
      security:
      - LMv1: []
      - Basic: []
  /device/devices/{id}/qos:
    get:
      operationId: "getQoSTable"
      produces:
      - "application/json"
      parameters:
      - name: "start"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Start"
        x-optionalDataType: "Int64"
      - name: "end"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "End"
        x-optionalDataType: "Int64"
      - name: "netflowFilter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "NetflowFilter"
        x-optionalDataType: "String"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Response"
          headers: {}
      security:
      - LMv1: []
      - Basic: []
  /sdt/sdts/{id}:
    get:
      summary: "get SDT by id"
      description: ""
      operationId: "getSDTById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SDTResponse"
      security:
      - LMv1: []
      - Basic: []
    put:
      summary: "update SDT by id"
      description: ""
      operationId: "updateSDTById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/SDTBase"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SDTResponse"
      security:
      - LMv1: []
      - Basic: []
    delete:
      summary: "delete SDT by id"
      description: ""
      operationId: "deleteSDTById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SDTResponse"
      security:
      - LMv1: []
      - Basic: []
  /dashboard/groups:
    get:
      summary: "get dashboard group list"
      description: ""
      operationId: "getDashboardGroupList"
      produces:
      - "application/json"
      parameters:
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DashboardGroupPaginationResponse"
      security:
      - LMv1: []
      - Basic: []
    post:
      summary: "add dashboard group"
      description: ""
      operationId: "addDashboardGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/DashboardGroup"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DashboardGroupResponse"
      security:
      - LMv1: []
      - Basic: []
  /setting/admins:
    get:
      summary: "get admin list"
      description: ""
      operationId: "getAdminList"
      produces:
      - "application/json"
      parameters:
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AdminPaginationResponse"
      security:
      - LMv1: []
      - Basic: []
    post:
      summary: "add admin"
      description: ""
      operationId: "addAdmin"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Admin"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AdminResponse"
      security:
      - LMv1: []
      - Basic: []
  /dashboard/dashboards/{id}/widgets:
    get:
      summary: "get widget list by DashboardId"
      description: ""
      operationId: "getWidgetListByDashboardId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/WidgetPaginationResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/devices/{id}/ports:
    get:
      operationId: "getPorts"
      produces:
      - "application/json"
      parameters:
      - name: "start"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Start"
        x-optionalDataType: "Int64"
      - name: "end"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "End"
        x-optionalDataType: "Int64"
      - name: "netflowFilter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "NetflowFilter"
        x-optionalDataType: "String"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "ip"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Ip"
        x-optionalDataType: "String"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Response"
          headers: {}
      security:
      - LMv1: []
      - Basic: []
  /service/services/{id}/sdts:
    get:
      summary: "get service SDT list by id"
      description: ""
      operationId: "getServiceSDTListByServiceId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SDTPaginationResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/groups/{deviceGroupId}/datasources/{id}:
    get:
      summary: "get device group datasource"
      description: ""
      operationId: "getDeviceGroupDatasourceById"
      produces:
      - "application/json"
      parameters:
      - name: "deviceGroupId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceGroupId"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceGroupDatasourceResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/devices/{deviceId}/devicedatasources/{hdsId}/instances/{id}/data:
    get:
      summary: "get device instance data"
      description: ""
      operationId: "getDeviceDatasourceInstanceData"
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceId"
      - name: "hdsId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "HdsId"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "period"
        in: "query"
        required: false
        type: "number"
        default: 1.0
        format: "double"
        x-exportParamName: "Period"
        x-optionalDataType: "Float64"
      - name: "start"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "Start"
        x-optionalDataType: "Int64"
      - name: "end"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "End"
        x-optionalDataType: "Int64"
      - name: "datapoints"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Datapoints"
        x-optionalDataType: "String"
      - name: "format"
        in: "query"
        required: false
        type: "string"
        default: "json"
        x-exportParamName: "Format"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceDatasourceInstanceDataResponse"
      security:
      - LMv1: []
      - Basic: []
  /setting/collectors/{collectorId}/installers/{osAndArch}:
    get:
      summary: "install collector"
      description: ""
      operationId: "installCollector"
      produces:
      - "application/json"
      parameters:
      - name: "collectorId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "CollectorId"
      - name: "osAndArch"
        in: "path"
        required: true
        type: "string"
        pattern: ".+"
        x-exportParamName: "OsAndArch"
      - name: "collectorVersion"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "CollectorVersion"
        x-optionalDataType: "Int32"
      - name: "token"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Token"
        x-optionalDataType: "String"
      - name: "monitorOthers"
        in: "query"
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "MonitorOthers"
        x-optionalDataType: "Bool"
      - name: "collectorSize"
        in: "query"
        required: false
        type: "string"
        default: "medium"
        x-exportParamName: "CollectorSize"
        x-optionalDataType: "String"
      - name: "useEA"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "UseEA"
        x-optionalDataType: "Bool"
      responses:
        200:
          schema:
            type: "file"
      security:
      - LMv1: []
      - Basic: []
  /device/groups/{id}/alerts:
    get:
      summary: "get device group alerts"
      description: ""
      operationId: "getAlertListByDeviceGroupId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "needMessage"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "NeedMessage"
        x-optionalDataType: "Bool"
      - name: "customColumns"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CustomColumns"
        x-optionalDataType: "String"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "searchId"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "SearchId"
        x-optionalDataType: "String"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AlertPaginationResponse"
      security:
      - LMv1: []
      - Basic: []
  /service/groups/{id}/services:
    get:
      summary: "get immediate service list by service group id"
      description: ""
      operationId: "getImmediateServiceListByServiceGroupId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ServicePaginationResponse"
      security:
      - LMv1: []
      - Basic: []
  /setting/collectors/groups:
    get:
      summary: "get collector group list"
      description: ""
      operationId: "getCollectorGroupList"
      produces:
      - "application/json"
      parameters:
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CollectorGroupPaginationResponse"
      security:
      - LMv1: []
      - Basic: []
    post:
      summary: "add collector group"
      description: ""
      operationId: "addCollectorGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/CollectorGroup"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CollectorGroupResponse"
      security:
      - LMv1: []
      - Basic: []
  /dashboard/widgets/{id}/data:
    get:
      summary: "get widget data"
      description: ""
      operationId: "getWidgetDataById"
      produces:
      - "application/json"
      parameters:
      - name: "start"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Start"
        x-optionalDataType: "Int64"
      - name: "end"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "End"
        x-optionalDataType: "Int64"
      - name: "format"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Format"
        x-optionalDataType: "String"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/WidgetDataResponse"
      security:
      - LMv1: []
      - Basic: []
  /service/services:
    get:
      summary: "get service list"
      description: ""
      operationId: "getServiceList"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "collectorIds"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CollectorIds"
        x-optionalDataType: "String"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ServicePaginationResponse"
      security:
      - LMv1: []
      - Basic: []
    post:
      summary: "add service"
      description: ""
      operationId: "addService"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ServiceBaseVersion1"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ServiceResponse"
      security:
      - LMv1: []
      - Basic: []
  /setting/roles:
    get:
      summary: "get role list"
      description: ""
      operationId: "getRoleList"
      produces:
      - "application/json"
      parameters:
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/RolePaginationResponse"
      security:
      - LMv1: []
      - Basic: []
    post:
      summary: "add role"
      description: ""
      operationId: "addRole"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Role"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/RoleResponse"
      security:
      - LMv1: []
      - Basic: []
  /setting/alert/rules:
    get:
      summary: "get alert rule list"
      description: ""
      operationId: "getAlertRuleList"
      produces:
      - "application/json"
      parameters:
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AlertRulePaginationResponse"
      security:
      - LMv1: []
      - Basic: []
    post:
      summary: "add alert rule"
      description: ""
      operationId: "addAlertRule"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/AlertRule"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AlertRuleResponse"
      security:
      - LMv1: []
      - Basic: []
  /service/groups/{id}/sdts:
    get:
      summary: "get all SDT list by service group id"
      description: ""
      operationId: "getAllSDTListByServiceGroupId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ServicePaginationResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/devices/{id}/endpoints:
    get:
      operationId: "getEndpoints"
      produces:
      - "application/json"
      parameters:
      - name: "start"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Start"
        x-optionalDataType: "Int64"
      - name: "end"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "End"
        x-optionalDataType: "Int64"
      - name: "netflowFilter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "NetflowFilter"
        x-optionalDataType: "String"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "port"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Port"
        x-optionalDataType: "String"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Response"
          headers: {}
      security:
      - LMv1: []
      - Basic: []
  /report/reports/auto:
    post:
      operationId: "createAutoReports"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RestCloudAutoVisualInfo"
        x-exportParamName: "Body"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Response"
          headers: {}
      security:
      - LMv1: []
      - Basic: []
  /report/reports/{id}:
    get:
      summary: "get report by id"
      description: ""
      operationId: "getReportById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ReportResponse"
      security:
      - LMv1: []
      - Basic: []
    put:
      summary: "update report by id"
      description: ""
      operationId: "updateReportById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/ReportBase"
        x-exportParamName: "Body"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ReportResponse"
      security:
      - LMv1: []
      - Basic: []
  /service/services/{id}/graphs/{graphName}/data:
    get:
      summary: "get service data by graph name"
      description: ""
      operationId: "getServiceDataByGraphName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "start"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "Start"
        x-optionalDataType: "Int64"
      - name: "end"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "End"
        x-optionalDataType: "Int64"
      - name: "graphName"
        in: "path"
        required: true
        type: "string"
        pattern: ".+"
        x-exportParamName: "GraphName"
      - name: "format"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Format"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/GraphPlotResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/devices/{id}/topTalkers:
    get:
      operationId: "getApplications"
      produces:
      - "application/json"
      parameters:
      - name: "start"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Start"
        x-optionalDataType: "Int64"
      - name: "end"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "End"
        x-optionalDataType: "Int64"
      - name: "netflowFilter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "NetflowFilter"
        x-optionalDataType: "String"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Response"
          headers: {}
      security:
      - LMv1: []
      - Basic: []
  /device/devices/{deviceId}/devicedatasources/{id}:
    get:
      summary: "get device datasource "
      description: ""
      operationId: "getDeviceDatasourceById"
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceId"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceDatasourceResponse"
      security:
      - LMv1: []
      - Basic: []
  /report/reports/{id}/executions:
    post:
      operationId: "executeReport"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RestGenerateReportFunc"
        x-exportParamName: "Body"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Response"
          headers: {}
      security:
      - LMv1: []
      - Basic: []
  /setting/datasources/importxml:
    post:
      summary: "import datasource with xml"
      description: ""
      operationId: "importDatasourceWithXML"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "file"
        in: "formData"
        required: false
        type: "file"
        x-exportParamName: "File"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/StringResponse"
      security:
      - LMv1: []
      - Basic: []
  /setting/opsnotes/{id}:
    get:
      summary: "get opsnote by id"
      description: ""
      operationId: "getOpsNoteById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        pattern: "[^/]+"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OpsNoteResponse"
      security:
      - LMv1: []
      - Basic: []
    put:
      summary: "update opsnote by id"
      description: ""
      operationId: "updateOpsNoteById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        pattern: "[^/]+"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/RestOpsNoteV1"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OpsNoteResponse"
      security:
      - LMv1: []
      - Basic: []
    delete:
      summary: "delete opsnote by id"
      description: ""
      operationId: "deleteOpsNoteById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        pattern: "[^/]+"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/StringResponse"
      security:
      - LMv1: []
      - Basic: []
  /dashboard/dashboards/{id}:
    get:
      summary: "get dashboard"
      description: ""
      operationId: "getDashboardById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DashboardResponse"
      security:
      - LMv1: []
      - Basic: []
    put:
      summary: "update dashboard"
      description: ""
      operationId: "updateDashboardById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Dashboard"
        x-exportParamName: "Body"
      - name: "overwriteGroupFields"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "OverwriteGroupFields"
        x-optionalDataType: "Bool"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DashboardResponse"
      security:
      - LMv1: []
      - Basic: []
    delete:
      summary: "delete dashboard"
      description: ""
      operationId: "deleteDashboardById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NullObjectResponse"
      security:
      - LMv1: []
      - Basic: []
  /device/devices/{deviceId}/properties:
    get:
      summary: "get device properties"
      description: ""
      operationId: "getDevicePropertiesList"
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceId"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      - name: "size"
        in: "query"
        required: false
        type: "integer"
        default: 50
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PropertyPaginationResponse"
      security:
      - LMv1: []
      - Basic: []
    post:
      summary: "add device property"
      description: ""
      operationId: "addDeviceProperty"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/EntityProperty"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PropertyResponse"
      security:
      - LMv1: []
      - Basic: []
  /setting/collectors/{id}/ackdown:
    post:
      summary: "ack collector down alert"
      description: ""
      operationId: "ackCollectorDownAlertById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/AckCollectorDown"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NullObjectResponse"
      security:
      - LMv1: []
      - Basic: []
  /setting/datasources/{id}/updatereasons:
    get:
      summary: ""
      description: ""
      operationId: "getListForDataSource"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Response"
      security:
      - LMv1: []
      - Basic: []
  /device/devices/{deviceId}/devicedatasources/{hdsId}/instances/{id}:
    get:
      summary: "get device instance "
      description: ""
      operationId: "getDeviceDatasourceInstanceById"
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceId"
      - name: "hdsId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "HdsId"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Fields"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceDatasourceInstanceResponse"
      security:
      - LMv1: []
      - Basic: []
    put:
      summary: "update device instance "
      description: ""
      operationId: "updateDeviceDatasourceInstanceById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "DeviceId"
      - name: "hdsId"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "HdsId"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        pattern: "\\d+"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/DeviceDataSourceInstance"
        x-exportParamName: "Body"
      - name: "opType"
        in: "query"
        required: false
        type: "string"
        default: "refresh"
        x-exportParamName: "OpType"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceDatasourceInstanceResponse"
      security:
      - LMv1: []
      - Basic: []
securityDefinitions:
  Basic:
    type: "basic"
  LMv1:
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  RestAwsAccountTestResult:
    type: "object"
    properties:
      noPermissionServices:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      detailLink:
        type: "string"
      nonPermissionErrors:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
    example:
      noPermissionServices:
      - "noPermissionServices"
      - "noPermissionServices"
      detailLink: "detailLink"
      nonPermissionErrors:
      - "nonPermissionErrors"
      - "nonPermissionErrors"
  OpsNoteGroupAllScopeV1:
    allOf:
    - $ref: "#/definitions/OpsNoteScopeVersion1"
    - type: "object"
      required:
      - "type"
      properties:
        groupId:
          type: "integer"
          format: "int32"
        type:
          type: "string"
  RawDataValues:
    type: "object"
    properties:
      values:
        type: "array"
        readOnly: true
        items:
          type: "array"
          items:
            type: "number"
            format: "double"
      time:
        type: "array"
        readOnly: true
        items:
          type: "integer"
          format: "int64"
      nextPageParams:
        type: "string"
        readOnly: true
    example:
      values:
      - - 0.8008281904610115
        - 0.8008281904610115
      - - 0.8008281904610115
        - 0.8008281904610115
      time:
      - 6
      - 6
      nextPageParams: "nextPageParams"
  AwsElastiCacheDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
  AutoDiscoveryFilter:
    type: "object"
    required:
    - "attribute"
    - "operation"
    properties:
      comment:
        type: "string"
      attribute:
        type: "string"
      operation:
        type: "string"
      value:
        type: "string"
    example:
      comment: "comment"
      attribute: "attribute"
      operation: "operation"
      value: "value"
  AzureResourceHealthCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "period"
      properties:
        period:
          type: "integer"
          format: "int32"
  DeviceDatasourceGraph:
    type: "object"
    properties:
      displayPrio:
        type: "integer"
        format: "int32"
        readOnly: true
      name:
        type: "string"
        readOnly: true
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      title:
        type: "string"
        readOnly: true
    example:
      displayPrio: 5
      name: "name"
      id: 2
      title: "title"
  DatasourceResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/DataSource"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        collectorAttribute:
          name: "name"
        autoDiscoveryConfig:
          persistentInstance: true
          scheduleInterval: 6
          deleteInactiveInstance: true
          method:
            name: "name"
          instanceAutoGroupMethod: "instanceAutoGroupMethod"
          instanceAutoGroupMethodParams: "instanceAutoGroupMethodParams"
          filters:
          - comment: "comment"
            attribute: "attribute"
            operation: "operation"
            value: "value"
          - comment: "comment"
            attribute: "attribute"
            operation: "operation"
            value: "value"
          disableInstance: true
        displayName: "displayName"
        description: "description"
        appliesTo: "appliesTo"
        enableAutoDiscovery: true
        technology: "technology"
        published: 1
        version: 5
        tags: "tags"
        auditVersion: 5
        hasMultiInstances: true
        collectMethod: "collectMethod"
        collectInterval: 2
        name: "name"
        dataPoints:
        - alertForNoData: 7
          maxValue: "maxValue"
          dataType: 9
          postProcessorMethod: "postProcessorMethod"
          postProcessorParam: "postProcessorParam"
          maxDigits: 3
          rawDataFieldName: "rawDataFieldName"
          description: "description"
          alertClearTransitionInterval: 2
          userParam3: "userParam3"
          userParam2: "userParam2"
          type: 4
          alertExprNote: "alertExprNote"
          dataSourceId: 7
          minValue: "minValue"
          alertBody: "alertBody"
          userParam1: "userParam1"
          name: "name"
          alertSubject: "alertSubject"
          id: 1
          alertTransitionInterval: 1
          alertExpr: "alertExpr"
        - alertForNoData: 7
          maxValue: "maxValue"
          dataType: 9
          postProcessorMethod: "postProcessorMethod"
          postProcessorParam: "postProcessorParam"
          maxDigits: 3
          rawDataFieldName: "rawDataFieldName"
          description: "description"
          alertClearTransitionInterval: 2
          userParam3: "userParam3"
          userParam2: "userParam2"
          type: 4
          alertExprNote: "alertExprNote"
          dataSourceId: 7
          minValue: "minValue"
          alertBody: "alertBody"
          userParam1: "userParam1"
          name: "name"
          alertSubject: "alertSubject"
          id: 1
          alertTransitionInterval: 1
          alertExpr: "alertExpr"
        id: 1
        group: "group"
      errmsg: "errmsg"
      status: 0
  IdAndName:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      name:
        type: "string"
      id:
        type: "integer"
        format: "int32"
  NameAndValue:
    type: "object"
    required:
    - "name"
    - "value"
    properties:
      name:
        type: "string"
      value:
        type: "string"
    example:
      name: "name"
      value: "value"
  EscalationChainPaginationResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/EscalationChainPagination"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        total: 0
        searchId: "searchId"
        items:
        - inAlerting: true
          throttlingAlerts: 6
          enableThrottling: true
          destinations:
          - period:
              weekDays:
              - 1
              - 1
              startMinutes: 5
              endMinutes: 5
            stages:
            - - method: "method"
                contact: "contact"
                type: "type"
                addr: "addr"
              - method: "method"
                contact: "contact"
                type: "type"
                addr: "addr"
            - - method: "method"
                contact: "contact"
                type: "type"
                addr: "addr"
              - method: "method"
                contact: "contact"
                type: "type"
                addr: "addr"
            type: "type"
          - period:
              weekDays:
              - 1
              - 1
              startMinutes: 5
              endMinutes: 5
            stages:
            - - method: "method"
                contact: "contact"
                type: "type"
                addr: "addr"
              - method: "method"
                contact: "contact"
                type: "type"
                addr: "addr"
            - - method: "method"
                contact: "contact"
                type: "type"
                addr: "addr"
              - method: "method"
                contact: "contact"
                type: "type"
                addr: "addr"
            type: "type"
          name: "name"
          description: "description"
          id: 2
          ccDestinations:
          - method: "method"
            contact: "contact"
            type: "type"
            addr: "addr"
          - method: "method"
            contact: "contact"
            type: "type"
            addr: "addr"
          throttlingPeriod: 7
        - inAlerting: true
          throttlingAlerts: 6
          enableThrottling: true
          destinations:
          - period:
              weekDays:
              - 1
              - 1
              startMinutes: 5
              endMinutes: 5
            stages:
            - - method: "method"
                contact: "contact"
                type: "type"
                addr: "addr"
              - method: "method"
                contact: "contact"
                type: "type"
                addr: "addr"
            - - method: "method"
                contact: "contact"
                type: "type"
                addr: "addr"
              - method: "method"
                contact: "contact"
                type: "type"
                addr: "addr"
            type: "type"
          - period:
              weekDays:
              - 1
              - 1
              startMinutes: 5
              endMinutes: 5
            stages:
            - - method: "method"
                contact: "contact"
                type: "type"
                addr: "addr"
              - method: "method"
                contact: "contact"
                type: "type"
                addr: "addr"
            - - method: "method"
                contact: "contact"
                type: "type"
                addr: "addr"
              - method: "method"
                contact: "contact"
                type: "type"
                addr: "addr"
            type: "type"
          name: "name"
          description: "description"
          id: 2
          ccDestinations:
          - method: "method"
            contact: "contact"
            type: "type"
            addr: "addr"
          - method: "method"
            contact: "contact"
            type: "type"
            addr: "addr"
          throttlingPeriod: 7
      errmsg: "errmsg"
      status: 9
  AutoDiscoveryConfiguration:
    type: "object"
    required:
    - "method"
    properties:
      persistentInstance:
        type: "boolean"
      scheduleInterval:
        type: "integer"
        format: "int32"
      deleteInactiveInstance:
        type: "boolean"
      method:
        $ref: "#/definitions/AutoDiscoveryMethod"
      instanceAutoGroupMethod:
        type: "string"
      instanceAutoGroupMethodParams:
        type: "string"
      filters:
        type: "array"
        items:
          $ref: "#/definitions/AutoDiscoveryFilter"
      disableInstance:
        type: "boolean"
    example:
      persistentInstance: true
      scheduleInterval: 6
      deleteInactiveInstance: true
      method:
        name: "name"
      instanceAutoGroupMethod: "instanceAutoGroupMethod"
      instanceAutoGroupMethodParams: "instanceAutoGroupMethodParams"
      filters:
      - comment: "comment"
        attribute: "attribute"
        operation: "operation"
        value: "value"
      - comment: "comment"
        attribute: "attribute"
        operation: "operation"
        value: "value"
      disableInstance: true
  IPMICollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "ipmiSensor"
      properties:
        ipmiSensor:
          type: "string"
    x-discriminator-value: "ipmi"
  WidgetPaginationResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/WidgetPagination"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        total: 0
        searchId: "searchId"
        items:
        - {}
        - {}
      errmsg: "errmsg"
      status: 6
  WMIAutoDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
      required:
      - "namespace"
      - "property"
      - "wmiClass"
      properties:
        linkedClasses:
          type: "array"
          items:
            $ref: "#/definitions/LinkedWmiClass"
        wmiClass:
          type: "string"
        property:
          type: "string"
        namespace:
          type: "string"
        ILP:
          type: "array"
          items:
            $ref: "#/definitions/ILP"
        enableLinkedClassILP:
          type: "boolean"
        enableWmiClassILP:
          type: "boolean"
    x-discriminator-value: "ad_wmi"
  WebPageCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "connectTimeout"
      - "followRedirect"
      - "ip"
      - "port"
      - "readTimeout"
      - "request"
      - "useSSL"
      properties:
        request:
          type: "string"
        port:
          type: "string"
        followRedirect:
          type: "boolean"
        ip:
          type: "string"
        readTimeout:
          type: "integer"
          format: "int32"
        connectTimeout:
          type: "integer"
          format: "int32"
        useSSL:
          type: "boolean"
    x-discriminator-value: "webpage"
  ServiceGroupPagination:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      searchId:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/ServiceGroup"
    example:
      total: 0
      searchId: "searchId"
      items:
      - alertStatus: "alertStatus"
        fullPath: "fullPath"
        numOfServices: 0
        stopMonitoring: true
        hasServicesDisabled: true
        userPermission: "userPermission"
        testLocation: "testLocation"
        description: "description"
        disableAlerting: true
        groupStatus: "groupStatus"
        sdtStatus: "sdtStatus"
        parentId: 6
        name: "name"
        numOfDirectSubGroups: 1
        subGroups:
        - alertStatus: "alertStatus"
          fullPath: "fullPath"
          stopMonitoring: true
          userPermission: "userPermission"
          name: "name"
          numOfDirectSubGroups: 5
          description: "description"
          disableAlerting: true
          id: 5
          alertDisableStatus: "alertDisableStatus"
          sdtStatus: "sdtStatus"
        - alertStatus: "alertStatus"
          fullPath: "fullPath"
          stopMonitoring: true
          userPermission: "userPermission"
          name: "name"
          numOfDirectSubGroups: 5
          description: "description"
          disableAlerting: true
          id: 5
          alertDisableStatus: "alertDisableStatus"
          sdtStatus: "sdtStatus"
        id: 2
        alertStatusPriority: 7
        alertDisableStatus: "alertDisableStatus"
        serviceProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        numOfDirectServices: 9
      - alertStatus: "alertStatus"
        fullPath: "fullPath"
        numOfServices: 0
        stopMonitoring: true
        hasServicesDisabled: true
        userPermission: "userPermission"
        testLocation: "testLocation"
        description: "description"
        disableAlerting: true
        groupStatus: "groupStatus"
        sdtStatus: "sdtStatus"
        parentId: 6
        name: "name"
        numOfDirectSubGroups: 1
        subGroups:
        - alertStatus: "alertStatus"
          fullPath: "fullPath"
          stopMonitoring: true
          userPermission: "userPermission"
          name: "name"
          numOfDirectSubGroups: 5
          description: "description"
          disableAlerting: true
          id: 5
          alertDisableStatus: "alertDisableStatus"
          sdtStatus: "sdtStatus"
        - alertStatus: "alertStatus"
          fullPath: "fullPath"
          stopMonitoring: true
          userPermission: "userPermission"
          name: "name"
          numOfDirectSubGroups: 5
          description: "description"
          disableAlerting: true
          id: 5
          alertDisableStatus: "alertDisableStatus"
          sdtStatus: "sdtStatus"
        id: 2
        alertStatusPriority: 7
        alertDisableStatus: "alertDisableStatus"
        serviceProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        numOfDirectServices: 9
  ServiceCheckpointRawData:
    type: "object"
    properties:
      values:
        type: "array"
        readOnly: true
        items:
          type: "array"
          items:
            type: "number"
            format: "double"
      time:
        type: "array"
        readOnly: true
        items:
          type: "integer"
          format: "int64"
      nextPageParams:
        type: "string"
        readOnly: true
    example:
      values:
      - - 0.8008281904610115
        - 0.8008281904610115
      - - 0.8008281904610115
        - 0.8008281904610115
      time:
      - 6
      - 6
      nextPageParams: "nextPageParams"
  CustomGraph:
    type: "object"
    properties:
      base1024:
        type: "boolean"
      maxValue:
        type: "number"
        format: "double"
      top10Only:
        type: "boolean"
      title:
        type: "string"
      aggregate:
        type: "boolean"
      virtualDataPoints:
        type: "array"
        items:
          $ref: "#/definitions/CustomVirtualDataPoint"
      minValue:
        type: "number"
        format: "double"
      width:
        type: "integer"
        format: "int32"
      dataPoints:
        type: "array"
        items:
          $ref: "#/definitions/CustomFlexibleVirtualDataSourceEx"
      verticalLabel:
        type: "string"
      id:
        type: "integer"
        format: "int32"
      graphLines:
        type: "array"
        items:
          $ref: "#/definitions/CustomGraphLine"
      height:
        type: "integer"
        format: "int32"
  AlertRule:
    type: "object"
    required:
    - "escalatingChainId"
    - "name"
    - "priority"
    properties:
      datapoint:
        type: "string"
      instance:
        type: "string"
      devices:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      escalatingChainId:
        type: "integer"
        format: "int32"
      priority:
        type: "integer"
        format: "int32"
      suppressAlertAckSdt:
        type: "boolean"
      datasource:
        type: "string"
      suppressAlertClear:
        type: "boolean"
      name:
        type: "string"
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      levelStr:
        type: "string"
      deviceGroups:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      escalatingChain:
        type: "string"
        description: "This is a JSON string"
        readOnly: true
      escalationInterval:
        type: "integer"
        format: "int32"
    example:
      datapoint: "datapoint"
      instance: "instance"
      devices:
      - "devices"
      - "devices"
      escalatingChainId: 0
      priority: 6
      suppressAlertAckSdt: true
      datasource: "datasource"
      suppressAlertClear: true
      name: "name"
      id: 1
      levelStr: "levelStr"
      deviceGroups:
      - "deviceGroups"
      - "deviceGroups"
      escalatingChain: "escalatingChain"
      escalationInterval: 5
  DataSourceAttribute:
    type: "object"
    required:
    - "name"
    - "value"
    properties:
      name:
        type: "string"
      comment:
        type: "string"
      value:
        type: "string"
  StatsDMetricDefinition:
    type: "object"
    properties:
      consolidateFunction:
        type: "integer"
        format: "int32"
      display:
        $ref: "#/definitions/StatsDGraphDisplay"
      name:
        type: "string"
      aggregateFunction:
        type: "string"
  RestUserFilter:
    type: "object"
    properties:
      apiOnlyUser:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      enable2fa:
        type: "string"
      roleAssignment:
        type: "string"
      email:
        type: "string"
      status:
        type: "string"
      username:
        type: "string"
  SDKScriptCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "groovyScript"
      - "sdkName"
      - "sdkVersion"
      properties:
        groovyScript:
          type: "string"
        sdkVersion:
          type: "string"
        sdkName:
          type: "string"
  AlertResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/Alert"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        resourceId: 0
        instanceName: "instanceName"
        monitorObjectId: 6
        endEpoch: 1
        rule: "rule"
        threshold: "threshold"
        type: "type"
        startEpoch: 5
        internalId: "internalId"
        ackComment: "ackComment"
        monitorObjectName: "monitorObjectName"
        dataPointName: "dataPointName"
        instanceId: 5
        dataPointId: 2
        nextRecipient: 7
        id: "id"
        detailMessage: "detailMessage"
        ruleId: 9
        alertValue: "alertValue"
        ackedBy: "ackedBy"
        severity: 3
        sdted: true
        ackedEpoch: 2
        chain: "chain"
        SDT: "SDT"
        subChainId: 4
        receivedList: "receivedList"
        customColumns: "customColumns"
        acked: true
        resourceTemplateType: "resourceTemplateType"
        clearValue: "clearValue"
        instanceDescription: "instanceDescription"
        monitorObjectGroups: "monitorObjectGroups"
        chainId: 7
        resourceTemplateId: 1
        cleared: true
        resourceTemplateName: "resourceTemplateName"
      errmsg: "errmsg"
      status: 1
  PerfmonCounter:
    type: "object"
    required:
    - "name"
    - "type"
    - "value"
    properties:
      name:
        type: "string"
      type:
        type: "string"
      value:
        type: "string"
  SDTResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/SDTBase"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        endDateTimeOnLocal: "endDateTimeOnLocal"
        sdtType: 6
        monthDay: 1
        weekOfMonth: "weekOfMonth"
        admin: "admin"
        endDateTime: 5
        type: "type"
        isEffective: true
        minute: 5
        duration: 2
        endHour: 7
        startDateTime: 9
        hour: 3
        startDateTimeOnLocal: "startDateTimeOnLocal"
        weekDay: 2
        comment: "comment"
        id: "id"
        endMinute: 4
      errmsg: "errmsg"
      status: 0
  HostInventoryMetric:
    type: "object"
    required:
    - "dataSourceId"
    properties:
      dataSourceId:
        type: "integer"
        format: "int32"
      instances:
        type: "string"
      dataSourceFullName:
        type: "string"
  CollectorPagination:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      searchId:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/RestCollectorBase"
    example:
      total: 0
      searchId: "searchId"
      items:
      - userChangeOn: 0
        confVersion: "confVersion"
        updatedOnLocal: "updatedOnLocal"
        hostname: "hostname"
        id: 6
        ea: true
        watchdogUpdatedOnLocal: "watchdogUpdatedOnLocal"
        hasFailOverDevice: true
        collectorGroupName: "collectorGroupName"
        netscanVersion: "netscanVersion"
        inSDT: true
        updatedOn: 1
        automaticUpgradeInfo:
          dayOfWeek: "dayOfWeek"
          hour: 5
          createdBy: "createdBy"
          level: "level"
          description: "description"
          occurrence: "occurrence"
          type: "type"
          version: "version"
          minute: 5
        numberOfHosts: 2
        collectorConf: "collectorConf"
        sbproxyConf: "sbproxyConf"
        lastSentNotificationOnLocal: "lastSentNotificationOnLocal"
        customProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        predefinedConfig: {}
        onetimeUpgradeInfo:
          createdBy: "createdBy"
          level: "level"
          endEpoch: 7
          description: "description"
          type: "type"
          majorVersion: 9
          minorVersion: 3
          startEpoch: 2
        wrapperConf: "wrapperConf"
        clearSent: true
        status: 4
        backupAgentId: 7
        specifiedCollectorDeviceGroupId: 1
        escalatingChainId: 1
        collectorSize: "collectorSize"
        ackedOnLocal: "ackedOnLocal"
        watchdogConf: "watchdogConf"
        description: "description"
        createdOn: 1
        platform: "platform"
        isDown: true
        userVisibleHostsNum: 6
        canDowngrade: true
        ackComment: "ackComment"
        nextUpgradeInfo:
          upgradeTime: "upgradeTime"
          stable: true
          majorVersion: 7
          minorVersion: 1
          mandatory: true
          upgradeTimeEpoch: 4
        suppressAlertClear: true
        nextRecipient: 5
        ackedOn: 9
        userChangeOnLocal: "userChangeOnLocal"
        collectorDeviceId: 9
        ackedBy: "ackedBy"
        userPermission: "userPermission"
        needAutoCreateCollectorDevice: true
        watchdogUpdatedOn: 6
        canDowngradeReason: "canDowngradeReason"
        lastSentNotificationOn: 8
        acked: true
        onetimeDowngradeInfo:
          createdBy: "createdBy"
          level: "level"
          endEpoch: 9
          description: "description"
          type: "type"
          majorVersion: 6
          minorVersion: 3
          startEpoch: 6
        upTime: 1
        build: "build"
        previousVersion: "previousVersion"
        collectorGroupId: 2
        createdOnLocal: "createdOnLocal"
        enableFailBack: true
        resendIval: 6
        arch: "arch"
        enableFailOverOnCollectorDevice: true
      - userChangeOn: 0
        confVersion: "confVersion"
        updatedOnLocal: "updatedOnLocal"
        hostname: "hostname"
        id: 6
        ea: true
        watchdogUpdatedOnLocal: "watchdogUpdatedOnLocal"
        hasFailOverDevice: true
        collectorGroupName: "collectorGroupName"
        netscanVersion: "netscanVersion"
        inSDT: true
        updatedOn: 1
        automaticUpgradeInfo:
          dayOfWeek: "dayOfWeek"
          hour: 5
          createdBy: "createdBy"
          level: "level"
          description: "description"
          occurrence: "occurrence"
          type: "type"
          version: "version"
          minute: 5
        numberOfHosts: 2
        collectorConf: "collectorConf"
        sbproxyConf: "sbproxyConf"
        lastSentNotificationOnLocal: "lastSentNotificationOnLocal"
        customProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        predefinedConfig: {}
        onetimeUpgradeInfo:
          createdBy: "createdBy"
          level: "level"
          endEpoch: 7
          description: "description"
          type: "type"
          majorVersion: 9
          minorVersion: 3
          startEpoch: 2
        wrapperConf: "wrapperConf"
        clearSent: true
        status: 4
        backupAgentId: 7
        specifiedCollectorDeviceGroupId: 1
        escalatingChainId: 1
        collectorSize: "collectorSize"
        ackedOnLocal: "ackedOnLocal"
        watchdogConf: "watchdogConf"
        description: "description"
        createdOn: 1
        platform: "platform"
        isDown: true
        userVisibleHostsNum: 6
        canDowngrade: true
        ackComment: "ackComment"
        nextUpgradeInfo:
          upgradeTime: "upgradeTime"
          stable: true
          majorVersion: 7
          minorVersion: 1
          mandatory: true
          upgradeTimeEpoch: 4
        suppressAlertClear: true
        nextRecipient: 5
        ackedOn: 9
        userChangeOnLocal: "userChangeOnLocal"
        collectorDeviceId: 9
        ackedBy: "ackedBy"
        userPermission: "userPermission"
        needAutoCreateCollectorDevice: true
        watchdogUpdatedOn: 6
        canDowngradeReason: "canDowngradeReason"
        lastSentNotificationOn: 8
        acked: true
        onetimeDowngradeInfo:
          createdBy: "createdBy"
          level: "level"
          endEpoch: 9
          description: "description"
          type: "type"
          majorVersion: 6
          minorVersion: 3
          startEpoch: 6
        upTime: 1
        build: "build"
        previousVersion: "previousVersion"
        collectorGroupId: 2
        createdOnLocal: "createdOnLocal"
        enableFailBack: true
        resendIval: 6
        arch: "arch"
        enableFailOverOnCollectorDevice: true
  HostCpuReport:
    allOf:
    - $ref: "#/definitions/ReportBase"
    - type: "object"
      required:
      - "hostsVal"
      properties:
        dateRange:
          type: "string"
        hostsVal:
          type: "string"
        top10Only:
          type: "boolean"
        displayGraphs:
          type: "boolean"
    x-discriminator-value: "host cpu"
  DataSource:
    type: "object"
    required:
    - "collectInterval"
    - "collectMethod"
    - "collectorAttribute"
    - "name"
    properties:
      collectorAttribute:
        $ref: "#/definitions/CollectorAttribute"
      autoDiscoveryConfig:
        $ref: "#/definitions/AutoDiscoveryConfiguration"
      displayName:
        type: "string"
      description:
        type: "string"
      appliesTo:
        type: "string"
      enableAutoDiscovery:
        type: "boolean"
      technology:
        type: "string"
      published:
        type: "integer"
        format: "int32"
      version:
        type: "integer"
        format: "int64"
        readOnly: true
      tags:
        type: "string"
      auditVersion:
        type: "integer"
        format: "int64"
        readOnly: true
      hasMultiInstances:
        type: "boolean"
        readOnly: true
      collectMethod:
        type: "string"
      collectInterval:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      dataPoints:
        type: "array"
        items:
          $ref: "#/definitions/DataPoint"
      id:
        type: "integer"
        format: "int32"
      group:
        type: "string"
    example:
      collectorAttribute:
        name: "name"
      autoDiscoveryConfig:
        persistentInstance: true
        scheduleInterval: 6
        deleteInactiveInstance: true
        method:
          name: "name"
        instanceAutoGroupMethod: "instanceAutoGroupMethod"
        instanceAutoGroupMethodParams: "instanceAutoGroupMethodParams"
        filters:
        - comment: "comment"
          attribute: "attribute"
          operation: "operation"
          value: "value"
        - comment: "comment"
          attribute: "attribute"
          operation: "operation"
          value: "value"
        disableInstance: true
      displayName: "displayName"
      description: "description"
      appliesTo: "appliesTo"
      enableAutoDiscovery: true
      technology: "technology"
      published: 1
      version: 5
      tags: "tags"
      auditVersion: 5
      hasMultiInstances: true
      collectMethod: "collectMethod"
      collectInterval: 2
      name: "name"
      dataPoints:
      - alertForNoData: 7
        maxValue: "maxValue"
        dataType: 9
        postProcessorMethod: "postProcessorMethod"
        postProcessorParam: "postProcessorParam"
        maxDigits: 3
        rawDataFieldName: "rawDataFieldName"
        description: "description"
        alertClearTransitionInterval: 2
        userParam3: "userParam3"
        userParam2: "userParam2"
        type: 4
        alertExprNote: "alertExprNote"
        dataSourceId: 7
        minValue: "minValue"
        alertBody: "alertBody"
        userParam1: "userParam1"
        name: "name"
        alertSubject: "alertSubject"
        id: 1
        alertTransitionInterval: 1
        alertExpr: "alertExpr"
      - alertForNoData: 7
        maxValue: "maxValue"
        dataType: 9
        postProcessorMethod: "postProcessorMethod"
        postProcessorParam: "postProcessorParam"
        maxDigits: 3
        rawDataFieldName: "rawDataFieldName"
        description: "description"
        alertClearTransitionInterval: 2
        userParam3: "userParam3"
        userParam2: "userParam2"
        type: 4
        alertExprNote: "alertExprNote"
        dataSourceId: 7
        minValue: "minValue"
        alertBody: "alertBody"
        userParam1: "userParam1"
        name: "name"
        alertSubject: "alertSubject"
        id: 1
        alertTransitionInterval: 1
        alertExpr: "alertExpr"
      id: 1
      group: "group"
  WidgetToken:
    type: "object"
    properties:
      inheritList:
        type: "array"
        items:
          $ref: "#/definitions/WidgetTokenInheritance"
      name:
        type: "string"
      type:
        type: "string"
        readOnly: true
      value:
        type: "string"
    example:
      inheritList:
      - fullpath: "fullpath"
        value: "value"
      - fullpath: "fullpath"
        value: "value"
      name: "name"
      type: "type"
      value: "value"
  AwsBillingReportDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
      required:
      - "awsBillingReportAttribute"
      properties:
        awsBillingReportAttribute:
          type: "string"
  DashboardResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/Dashboard"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        owner: "owner"
        userPermission: "userPermission"
        groupId: 6
        fullName: "fullName"
        description: "description"
        sharable: true
        widgetsOrder: "widgetsOrder"
        widgetsConfig: "widgetsConfig"
        useDynamicWidget: true
        groupName: "groupName"
        widgetTokens:
        - inheritList:
          - fullpath: "fullpath"
            value: "value"
          - fullpath: "fullpath"
            value: "value"
          name: "name"
          type: "type"
          value: "value"
        - inheritList:
          - fullpath: "fullpath"
            value: "value"
          - fullpath: "fullpath"
            value: "value"
          name: "name"
          type: "type"
          value: "value"
        name: "name"
        id: 1
        groupFullPath: "groupFullPath"
      errmsg: "errmsg"
      status: 0
  GaugeWidgetData:
    allOf:
    - $ref: "#/definitions/WidgetData"
    - type: "object"
      properties:
        maxValue:
          type: "number"
          format: "double"
          readOnly: true
        legend:
          type: "string"
          readOnly: true
        peakTime:
          type: "integer"
          format: "int64"
          readOnly: true
        historyTimestamps:
          type: "array"
          readOnly: true
          items:
            type: "integer"
            format: "int64"
        displayUnit:
          type: "string"
        type:
          type: "string"
          readOnly: true
        peakTimeOnLocal:
          type: "string"
          readOnly: true
        colorLevel:
          type: "integer"
          format: "int32"
          readOnly: true
        peakValue:
          type: "number"
          format: "double"
          readOnly: true
        minValue:
          type: "number"
          format: "double"
          readOnly: true
        displayType:
          type: "integer"
          format: "int32"
        showPeak:
          type: "boolean"
          readOnly: true
        currentValue:
          type: "number"
          format: "double"
          readOnly: true
        historyValues:
          type: "array"
          readOnly: true
          items:
            type: "number"
            format: "double"
    x-discriminator-value: "gauge"
  JSONObject:
    type: "object"
  BasicAuthentication:
    allOf:
    - $ref: "#/definitions/Authentication"
    - type: "object"
    x-discriminator-value: "basic"
  NetflowGroupWidgetData:
    allOf:
    - $ref: "#/definitions/WidgetData"
    - type: "object"
      properties:
        total:
          type: "integer"
          format: "int32"
          readOnly: true
        type:
          type: "string"
          readOnly: true
        items:
          type: "array"
          readOnly: true
          items:
            $ref: "#/definitions/NetflowDataBase"
    x-discriminator-value: "groupnetflow"
  OpsNoteDeviceGroupScopeV1:
    allOf:
    - $ref: "#/definitions/OpsNoteScopeVersion1"
    - type: "object"
      required:
      - "type"
      properties:
        fullPath:
          type: "string"
        groupId:
          type: "integer"
          format: "int32"
        type:
          type: "string"
  SNMPAutoDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
      required:
      - "OID"
      - "discoveryType"
      - "lookupOID"
      properties:
        lookupOID:
          type: "string"
        descriptionOID:
          type: "string"
        OID:
          type: "string"
        ILP:
          type: "array"
          items:
            $ref: "#/definitions/ILP"
        discoveryType:
          type: "string"
        enableSNMPILP:
          type: "boolean"
    x-discriminator-value: "ad_snmp"
  ServiceSLAWidget:
    allOf:
    - $ref: "#/definitions/WidgetBaseVersion1"
    - type: "object"
      required:
      - "dashboardId"
      - "items"
      - "name"
      - "type"
      properties:
        rowSpan:
          type: "integer"
          format: "int32"
        lastUpdatedBy:
          type: "string"
          readOnly: true
        userPermission:
          type: "string"
          readOnly: true
        colSpan:
          type: "integer"
          format: "int32"
        description:
          type: "string"
        type:
          type: "string"
        columnIdx:
          type: "integer"
          format: "int32"
        dashboardId:
          type: "integer"
          format: "int32"
        extra:
          type: "string"
        name:
          type: "string"
        lastUpdatedOn:
          type: "integer"
          format: "int64"
          readOnly: true
        theme:
          type: "string"
        interval:
          type: "integer"
          format: "int32"
        id:
          type: "integer"
          format: "int32"
        timescale:
          type: "string"
        items:
          type: "array"
          items:
            $ref: "#/definitions/ServiceItemConfig"
        colorThresholds:
          type: "array"
          items:
            $ref: "#/definitions/ColorThreshold"
        order:
          type: "integer"
          format: "int32"
    x-discriminator-value: "servicesla"
  NOCWidgetData:
    allOf:
    - $ref: "#/definitions/WidgetData"
    - type: "object"
      properties:
        ackChecked:
          type: "boolean"
          readOnly: true
        type:
          type: "string"
          readOnly: true
        sdtChecked:
          type: "boolean"
          readOnly: true
        items:
          type: "array"
          readOnly: true
          uniqueItems: true
          items:
            $ref: "#/definitions/ItemData"
    x-discriminator-value: "noc"
  DeviceGroupDatasourceResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/DeviceGroupDataSource"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        stopMonitoring: true
        dataSourceId: 0
        dataSourceGroupName: "dataSourceGroupName"
        deviceGroupId: 6
        dataSourceDisplayName: "dataSourceDisplayName"
        disableAlerting: true
        dataSourceName: "dataSourceName"
        dataSourceType: "dataSourceType"
      errmsg: "errmsg"
      status: 1
  StatsDGraphDisplay:
    type: "object"
    properties:
      color:
        type: "string"
      legend:
        type: "string"
      type:
        type: "string"
      option:
        type: "string"
  ResultItem:
    type: "object"
    properties:
      bottomLabel:
        type: "string"
        readOnly: true
      value:
        type: "string"
        readOnly: true
      colorLevel:
        type: "integer"
        format: "int32"
        readOnly: true
  RestOpsNoteV1:
    type: "object"
    required:
    - "note"
    properties:
      note:
        type: "string"
      createdBy:
        type: "string"
        readOnly: true
      id:
        type: "string"
        readOnly: true
      scopes:
        type: "array"
        items:
          $ref: "#/definitions/OpsNoteScopeVersion1"
      happenOnInSec:
        type: "integer"
        format: "int64"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/OpsNoteTagBase"
    example:
      note: "note"
      createdBy: "createdBy"
      id: "id"
      scopes:
      - {}
      - {}
      happenOnInSec: 0
      tags:
      - updateOnInSec: 1
        createdOnInSec: 5
        name: "name"
        id: "id"
      - updateOnInSec: 1
        createdOnInSec: 5
        name: "name"
        id: "id"
  AlertSlaReport:
    allOf:
    - $ref: "#/definitions/ReportBase"
    - type: "object"
      properties:
        hostsValType:
          type: "string"
        dateRange:
          type: "string"
        hostsVal:
          type: "string"
        dataPoint:
          type: "string"
        alertLevel:
          type: "string"
        alertRule:
          type: "string"
        dataSource:
          type: "string"
    x-discriminator-value: "alert sla"
  NetAppAutoDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
      required:
      - "instanceDescription"
      - "instanceGroupName"
      - "instanceLocator"
      - "instanceName"
      - "instanceValue"
      - "object"
      - "request"
      - "type"
      properties:
        request:
          type: "string"
        instanceName:
          type: "string"
        type:
          type: "string"
        instanceGroupName:
          type: "string"
        instanceValue:
          type: "string"
        instanceDescription:
          type: "string"
        object:
          type: "string"
        instanceLocator:
          type: "string"
    x-discriminator-value: "ad_netapp"
  StringResponse:
    type: "object"
    properties:
      data:
        type: "string"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data: "data"
      errmsg: "errmsg"
      status: 0
  DeviceGroupAlertThresholdInfo:
    type: "object"
    properties:
      userPermission:
        type: "string"
        readOnly: true
      groupId:
        type: "integer"
        format: "int32"
        readOnly: true
      alertEnabled:
        type: "boolean"
        readOnly: true
      groupFullPath:
        type: "string"
        readOnly: true
      alertExpr:
        type: "string"
        readOnly: true
    example:
      userPermission: "userPermission"
      groupId: 2
      alertEnabled: true
      groupFullPath: "groupFullPath"
      alertExpr: "alertExpr"
  AlertTrendsMetric:
    type: "object"
    required:
    - "itemType"
    - "itemVal"
    properties:
      itemType:
        type: "string"
      itemVal:
        type: "string"
  AwsBillingReportCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
  TCPCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "encoding"
      - "payload"
      - "port"
      - "timeout"
      properties:
        payload:
          type: "string"
        port:
          type: "string"
        encoding:
          type: "string"
        timeout:
          type: "integer"
          format: "int32"
    x-discriminator-value: "tcp"
  ServicePaginationResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/ServicePagination"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        total: 0
        searchId: "searchId"
        items:
        - {}
        - {}
      errmsg: "errmsg"
      status: 6
  AzureSubscriptionDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
  SDTPaginationResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/SDTPagination"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        total: 0
        searchId: "searchId"
        items:
        - endDateTimeOnLocal: "endDateTimeOnLocal"
          sdtType: 6
          monthDay: 1
          weekOfMonth: "weekOfMonth"
          admin: "admin"
          endDateTime: 5
          type: "type"
          isEffective: true
          minute: 5
          duration: 2
          endHour: 7
          startDateTime: 9
          hour: 3
          startDateTimeOnLocal: "startDateTimeOnLocal"
          weekDay: 2
          comment: "comment"
          id: "id"
          endMinute: 4
        - endDateTimeOnLocal: "endDateTimeOnLocal"
          sdtType: 6
          monthDay: 1
          weekOfMonth: "weekOfMonth"
          admin: "admin"
          endDateTime: 5
          type: "type"
          isEffective: true
          minute: 5
          duration: 2
          endHour: 7
          startDateTime: 9
          hour: 3
          startDateTimeOnLocal: "startDateTimeOnLocal"
          weekDay: 2
          comment: "comment"
          id: "id"
          endMinute: 4
      errmsg: "errmsg"
      status: 7
  ServiceResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/ServiceBaseVersion1"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data: {}
      errmsg: "errmsg"
      status: 0
  WidgetData:
    type: "object"
    discriminator: "type"
  GraphPlot:
    type: "object"
    properties:
      missinglines:
        type: "array"
        readOnly: true
        items:
          type: "string"
      timeScale:
        type: "string"
        readOnly: true
      instances:
        type: "array"
        readOnly: true
        uniqueItems: true
        items:
          type: "integer"
          format: "int32"
      timestamps:
        type: "array"
        readOnly: true
        items:
          type: "integer"
          format: "int64"
      title:
        type: "string"
        readOnly: true
      type:
        type: "string"
        readOnly: true
      minValue:
        type: "number"
        format: "double"
        readOnly: true
      startTime:
        type: "integer"
        format: "int64"
        readOnly: true
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      rigid:
        type: "boolean"
        readOnly: true
      lines:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/GraphPlotLine"
      height:
        type: "integer"
        format: "int32"
        readOnly: true
      endTZOffset:
        type: "integer"
        format: "int32"
        readOnly: true
      base1024:
        type: "boolean"
        readOnly: true
      dsName:
        type: "string"
        readOnly: true
      maxValue:
        type: "number"
        format: "double"
        readOnly: true
      displayPrio:
        type: "integer"
        format: "int32"
        readOnly: true
      timeZoneId:
        type: "string"
        readOnly: true
      timeZone:
        type: "string"
        readOnly: true
      startTZOffset:
        type: "integer"
        format: "int32"
        readOnly: true
      xAxisName:
        type: "string"
        readOnly: true
      width:
        type: "integer"
        format: "int32"
        readOnly: true
      name:
        type: "string"
        readOnly: true
      verticalLabel:
        type: "string"
        readOnly: true
      step:
        type: "integer"
        format: "int64"
        readOnly: true
      endTime:
        type: "integer"
        format: "int64"
        readOnly: true
      scopes:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/GraphOpsNoteScope"
      base:
        type: "integer"
        format: "int64"
        readOnly: true
      exportFileName:
        type: "string"
        readOnly: true
    example:
      missinglines:
      - "missinglines"
      - "missinglines"
      timeScale: "timeScale"
      instances:
      - 0
      - 0
      timestamps:
      - 6
      - 6
      title: "title"
      type: "type"
      minValue: 1.4658129805029452
      startTime: 5
      id: 5
      rigid: true
      lines:
      - colorName: "colorName"
        std: 2.3021358869347655
        visible: true
        color: "color"
        data:
        - 7.061401241503109
        - 7.061401241503109
        max: 9.301444243932576
        legend: "legend"
        description: "description"
        label: "label"
        type: "type"
        min: 3.616076749251911
        avg: 2.027123023002322
        decimal: 4
        useYMax: true
      - colorName: "colorName"
        std: 2.3021358869347655
        visible: true
        color: "color"
        data:
        - 7.061401241503109
        - 7.061401241503109
        max: 9.301444243932576
        legend: "legend"
        description: "description"
        label: "label"
        type: "type"
        min: 3.616076749251911
        avg: 2.027123023002322
        decimal: 4
        useYMax: true
      height: 7
      endTZOffset: 1
      base1024: true
      dsName: "dsName"
      maxValue: 1.0246457001441578
      displayPrio: 1
      timeZoneId: "timeZoneId"
      timeZone: "timeZone"
      startTZOffset: 6
      xAxisName: "xAxisName"
      width: 7
      name: "name"
      verticalLabel: "verticalLabel"
      step: 1
      endTime: 4
      scopes:
      - id: 5
        type: "type"
      - id: 5
        type: "type"
      base: 9
      exportFileName: "exportFileName"
    x-discriminator-value: "graph"
  UnmonitoredDevicePaginationResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/UnmonitoredDevicePagination"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        total: 0
        searchId: "searchId"
        items:
        - deviceType: "deviceType"
          nspId: 6
          forwardIp: "forwardIp"
          endDate: "endDate"
          ip: "ip"
          dns: "dns"
          collectorId: 1
          ports: "ports"
          nspName: "nspName"
          deviceStatus: "deviceStatus"
          manufacturer: "manufacturer"
          collectorDescription: "collectorDescription"
          displayAs: "displayAs"
          sysName: "sysName"
          nseId: 5
          id: 5
          endTimestamp: 2
          status: "status"
          nseScanId: "nseScanId"
        - deviceType: "deviceType"
          nspId: 6
          forwardIp: "forwardIp"
          endDate: "endDate"
          ip: "ip"
          dns: "dns"
          collectorId: 1
          ports: "ports"
          nspName: "nspName"
          deviceStatus: "deviceStatus"
          manufacturer: "manufacturer"
          collectorDescription: "collectorDescription"
          displayAs: "displayAs"
          sysName: "sysName"
          nseId: 5
          id: 5
          endTimestamp: 2
          status: "status"
          nseScanId: "nseScanId"
      errmsg: "errmsg"
      status: 7
  DeviceDatasourceInstanceDataResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/DeviceDataSourceInstanceData"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        values:
        - - 0.8008281904610115
          - 0.8008281904610115
        - - 0.8008281904610115
          - 0.8008281904610115
        time:
        - 6
        - 6
        nextPageParams: "nextPageParams"
        dataSourceName: "dataSourceName"
      errmsg: "errmsg"
      status: 1
  PieChartInfo:
    type: "object"
    required:
    - "pieChartItems"
    properties:
      maxSlicesCanBeShown:
        type: "integer"
        format: "int32"
      virtualDataPoints:
        type: "array"
        items:
          $ref: "#/definitions/VirtualDataPoint"
      showLabelsAndLinesOnPC:
        type: "boolean"
      counters:
        type: "array"
        items:
          $ref: "#/definitions/Counter"
      dataPoints:
        type: "array"
        items:
          $ref: "#/definitions/PieChartDataPoint"
      hideZeroPercentSlices:
        type: "boolean"
      groupRemainingAsOthers:
        type: "boolean"
      pieChartItems:
        type: "array"
        items:
          $ref: "#/definitions/PieChartItem"
      title:
        type: "string"
  RestGenerateReportFunc:
    type: "object"
    properties:
      withAdminId:
        type: "integer"
        format: "int32"
      reportId:
        type: "integer"
        format: "int32"
      widgetExtraData:
        type: "string"
      receiveEmails:
        type: "string"
    example:
      withAdminId: 0
      reportId: 6
      widgetExtraData: "widgetExtraData"
      receiveEmails: "receiveEmails"
  AwsBillingCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
    x-discriminator-value: "awsbilling"
  AwsClassicElbServiceLimitsCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "period"
      properties:
        period:
          type: "integer"
          format: "int32"
  StatsDGraph:
    type: "object"
    properties:
      minValue:
        type: "number"
        format: "double"
      maxValue:
        type: "number"
        format: "double"
      namespace:
        type: "string"
      verticalLabel:
        type: "string"
      metrics:
        type: "array"
        items:
          $ref: "#/definitions/StatsDMetricDefinition"
      scaleUnit:
        type: "integer"
        format: "int32"
  BigNumberDataPoint:
    type: "object"
    required:
    - "deviceDisplayName"
    - "deviceGroupFullPath"
    - "instanceName"
    - "name"
    properties:
      dataSourceId:
        type: "integer"
        format: "int32"
      dataPointName:
        type: "string"
      dataPointId:
        type: "integer"
        format: "int32"
      instanceName:
        type: "string"
      dataSourceFullName:
        type: "string"
      name:
        type: "string"
      aggregateFunction:
        type: "string"
      deviceGroupFullPath:
        type: "string"
      deviceDisplayName:
        type: "string"
  DeviceDatasourceInstanceGroupResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/DeviceDataSourceInstanceGroup"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        alertStatus: "alertStatus"
        deviceDataSourceId: 0
        description: "description"
        deviceId: 6
        sdtStatus: "sdtStatus"
        deviceDisplayName: "deviceDisplayName"
        groupsDisabledThisSource:
        - userPermission: "userPermission"
          displayName: "displayName"
          id: 1
          type: "type"
        - userPermission: "userPermission"
          displayName: "displayName"
          id: 1
          type: "type"
        disabledInstancesNum: 1
        sdtAt: "sdtAt"
        name: "name"
        createOn: 5
        alertingDisabledOn:
          userPermission: "userPermission"
          displayName: "displayName"
          id: 1
          type: "type"
        id: 5
        alertStatusPriority: 2
        alertDisableStatus: "alertDisableStatus"
        instancesNum: 7
      errmsg: "errmsg"
      status: 9
  RestAzureAccountTestResult:
    type: "object"
    properties:
      noPermissionServices:
        $ref: "#/definitions/JSONArray"
      detailLink:
        type: "string"
    example:
      noPermissionServices: {}
      detailLink: "detailLink"
  AlertForecastingReport:
    allOf:
    - $ref: "#/definitions/ReportBase"
    - type: "object"
      required:
      - "confidenceLevel"
      - "hostsValType"
      - "metrics"
      properties:
        sortedBy:
          type: "integer"
          format: "int32"
        confidenceLevel:
          type: "integer"
          format: "int32"
        hostsValType:
          type: "string"
        dateRange:
          type: "string"
        hostsVal:
          type: "string"
        top10Only:
          type: "boolean"
        columns:
          type: "array"
          items:
            $ref: "#/definitions/RestDynamicColumn"
        metrics:
          type: "array"
          items:
            $ref: "#/definitions/Metric"
        algorithm:
          type: "string"
    x-discriminator-value: "alert forecasting"
  OverviewGraphWidget:
    allOf:
    - $ref: "#/definitions/WidgetBaseVersion1"
    - type: "object"
      required:
      - "dashboardId"
      - "dsigId"
      - "hId"
      - "name"
      - "type"
      properties:
        rowSpan:
          type: "integer"
          format: "int32"
        lastUpdatedBy:
          type: "string"
          readOnly: true
        hostName:
          type: "string"
          readOnly: true
        hId:
          type: "integer"
          format: "int32"
        dsigId:
          type: "integer"
          format: "int32"
        userPermission:
          type: "string"
          readOnly: true
        dsName:
          type: "string"
          readOnly: true
        dsId:
          type: "integer"
          format: "int32"
        colSpan:
          type: "integer"
          format: "int32"
        dsigName:
          type: "string"
          readOnly: true
        description:
          type: "string"
        type:
          type: "string"
        graphName:
          type: "string"
          readOnly: true
        columnIdx:
          type: "integer"
          format: "int32"
        dashboardId:
          type: "integer"
          format: "int32"
        extra:
          type: "string"
        name:
          type: "string"
        lastUpdatedOn:
          type: "integer"
          format: "int64"
          readOnly: true
        theme:
          type: "string"
        interval:
          type: "integer"
          format: "int32"
        id:
          type: "integer"
          format: "int32"
        timescale:
          type: "string"
        graphId:
          type: "integer"
          format: "int32"
        order:
          type: "integer"
          format: "int32"
    x-discriminator-value: "ograph"
  CollectorGroupPagination:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      searchId:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/CollectorGroup"
    example:
      total: 0
      searchId: "searchId"
      items:
      - customProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        userPermission: "userPermission"
        numOfCollectors: 0
        name: "name"
        description: "description"
        createOn: 6
        id: 1
      - customProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        userPermission: "userPermission"
        numOfCollectors: 0
        name: "name"
        description: "description"
        createOn: 6
        id: 1
  CustomFlexibleVirtualDataSourceEx:
    type: "object"
    required:
    - "name"
    properties:
      customGraphId:
        type: "integer"
        format: "int32"
        readOnly: true
      dataPointName:
        type: "string"
      dataSourceId:
        type: "integer"
        format: "int32"
      dataPointId:
        type: "integer"
        format: "int32"
      instanceName:
        type: "string"
      dataSourceFullName:
        type: "string"
      consolidateFunction:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      aggregateFunction:
        type: "string"
      deviceDisplayName:
        type: "string"
        readOnly: true
      deviceGroupFullPath:
        type: "string"
  PieChartWidget:
    allOf:
    - $ref: "#/definitions/WidgetBaseVersion1"
    - type: "object"
      required:
      - "dashboardId"
      - "name"
      - "pieChartInfo"
      - "type"
      properties:
        rowSpan:
          type: "integer"
          format: "int32"
        lastUpdatedBy:
          type: "string"
          readOnly: true
        userPermission:
          type: "string"
          readOnly: true
        colSpan:
          type: "integer"
          format: "int32"
        description:
          type: "string"
        type:
          type: "string"
        pieChartInfo:
          $ref: "#/definitions/PieChartInfo"
        columnIdx:
          type: "integer"
          format: "int32"
        dashboardId:
          type: "integer"
          format: "int32"
        extra:
          type: "string"
        name:
          type: "string"
        lastUpdatedOn:
          type: "integer"
          format: "int64"
          readOnly: true
        theme:
          type: "string"
        interval:
          type: "integer"
          format: "int32"
        id:
          type: "integer"
          format: "int32"
        timescale:
          type: "string"
        order:
          type: "integer"
          format: "int32"
    x-discriminator-value: "piechart"
  CollectorResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/RestCollectorBase"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        userChangeOn: 0
        confVersion: "confVersion"
        updatedOnLocal: "updatedOnLocal"
        hostname: "hostname"
        id: 6
        ea: true
        watchdogUpdatedOnLocal: "watchdogUpdatedOnLocal"
        hasFailOverDevice: true
        collectorGroupName: "collectorGroupName"
        netscanVersion: "netscanVersion"
        inSDT: true
        updatedOn: 1
        automaticUpgradeInfo:
          dayOfWeek: "dayOfWeek"
          hour: 5
          createdBy: "createdBy"
          level: "level"
          description: "description"
          occurrence: "occurrence"
          type: "type"
          version: "version"
          minute: 5
        numberOfHosts: 2
        collectorConf: "collectorConf"
        sbproxyConf: "sbproxyConf"
        lastSentNotificationOnLocal: "lastSentNotificationOnLocal"
        customProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        predefinedConfig: {}
        onetimeUpgradeInfo:
          createdBy: "createdBy"
          level: "level"
          endEpoch: 7
          description: "description"
          type: "type"
          majorVersion: 9
          minorVersion: 3
          startEpoch: 2
        wrapperConf: "wrapperConf"
        clearSent: true
        status: 4
        backupAgentId: 7
        specifiedCollectorDeviceGroupId: 1
        escalatingChainId: 1
        collectorSize: "collectorSize"
        ackedOnLocal: "ackedOnLocal"
        watchdogConf: "watchdogConf"
        description: "description"
        createdOn: 1
        platform: "platform"
        isDown: true
        userVisibleHostsNum: 6
        canDowngrade: true
        ackComment: "ackComment"
        nextUpgradeInfo:
          upgradeTime: "upgradeTime"
          stable: true
          majorVersion: 7
          minorVersion: 1
          mandatory: true
          upgradeTimeEpoch: 4
        suppressAlertClear: true
        nextRecipient: 5
        ackedOn: 9
        userChangeOnLocal: "userChangeOnLocal"
        collectorDeviceId: 9
        ackedBy: "ackedBy"
        userPermission: "userPermission"
        needAutoCreateCollectorDevice: true
        watchdogUpdatedOn: 6
        canDowngradeReason: "canDowngradeReason"
        lastSentNotificationOn: 8
        acked: true
        onetimeDowngradeInfo:
          createdBy: "createdBy"
          level: "level"
          endEpoch: 9
          description: "description"
          type: "type"
          majorVersion: 6
          minorVersion: 3
          startEpoch: 6
        upTime: 1
        build: "build"
        previousVersion: "previousVersion"
        collectorGroupId: 2
        createdOnLocal: "createdOnLocal"
        enableFailBack: true
        resendIval: 6
        arch: "arch"
        enableFailOverOnCollectorDevice: true
      errmsg: "errmsg"
      status: 6
  AckCollectorDown:
    type: "object"
    properties:
      comment:
        type: "string"
    example:
      comment: "comment"
  AzureBillingDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
      required:
      - "azureBillingType"
      properties:
        azureBillingType:
          type: "string"
  GraphPlotResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/GraphPlot"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        missinglines:
        - "missinglines"
        - "missinglines"
        timeScale: "timeScale"
        instances:
        - 0
        - 0
        timestamps:
        - 6
        - 6
        title: "title"
        type: "type"
        minValue: 1.4658129805029452
        startTime: 5
        id: 5
        rigid: true
        lines:
        - colorName: "colorName"
          std: 2.3021358869347655
          visible: true
          color: "color"
          data:
          - 7.061401241503109
          - 7.061401241503109
          max: 9.301444243932576
          legend: "legend"
          description: "description"
          label: "label"
          type: "type"
          min: 3.616076749251911
          avg: 2.027123023002322
          decimal: 4
          useYMax: true
        - colorName: "colorName"
          std: 2.3021358869347655
          visible: true
          color: "color"
          data:
          - 7.061401241503109
          - 7.061401241503109
          max: 9.301444243932576
          legend: "legend"
          description: "description"
          label: "label"
          type: "type"
          min: 3.616076749251911
          avg: 2.027123023002322
          decimal: 4
          useYMax: true
        height: 7
        endTZOffset: 1
        base1024: true
        dsName: "dsName"
        maxValue: 1.0246457001441578
        displayPrio: 1
        timeZoneId: "timeZoneId"
        timeZone: "timeZone"
        startTZOffset: 6
        xAxisName: "xAxisName"
        width: 7
        name: "name"
        verticalLabel: "verticalLabel"
        step: 1
        endTime: 4
        scopes:
        - id: 5
          type: "type"
        - id: 5
          type: "type"
        base: 9
        exportFileName: "exportFileName"
      errmsg: "errmsg"
      status: 9
  AzureRedisCacheDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
  WidgetTokenInheritance:
    type: "object"
    properties:
      fullpath:
        type: "string"
        readOnly: true
      value:
        type: "string"
        readOnly: true
    example:
      fullpath: "fullpath"
      value: "value"
  NTLMAuthentication:
    allOf:
    - $ref: "#/definitions/Authentication"
    - type: "object"
      properties:
        domain:
          type: "string"
    x-discriminator-value: "ntlm"
  PieChartDataPoint:
    type: "object"
    required:
    - "deviceDisplayName"
    - "deviceGroupFullPath"
    - "instanceName"
    - "name"
    properties:
      dataSourceId:
        type: "integer"
        format: "int32"
      dataPointName:
        type: "string"
      top10:
        type: "boolean"
      dataPointId:
        type: "integer"
        format: "int32"
      instanceName:
        type: "string"
      dataSourceFullName:
        type: "string"
      name:
        type: "string"
      aggregateFunction:
        type: "string"
      deviceGroupFullPath:
        type: "string"
      deviceDisplayName:
        type: "string"
      aggregate:
        type: "boolean"
  PropertyPagination:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      searchId:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/EntityProperty"
    example:
      total: 0
      searchId: "searchId"
      items:
      - inheritList:
        - fullpath: "fullpath"
          id: 6
          type: "type"
          value: "value"
        - fullpath: "fullpath"
          id: 6
          type: "type"
          value: "value"
        name: "name"
        type: "type"
        value: "value"
      - inheritList:
        - fullpath: "fullpath"
          id: 6
          type: "type"
          value: "value"
        - fullpath: "fullpath"
          id: 6
          type: "type"
          value: "value"
        name: "name"
        type: "type"
        value: "value"
  CustomReport:
    allOf:
    - $ref: "#/definitions/ReportBase"
    - type: "object"
      properties:
        macros:
          type: "array"
          items:
            $ref: "#/definitions/Macro"
        dateRange:
          type: "string"
        customReportTypeName:
          type: "string"
    x-discriminator-value: "word template"
  InstanceCell:
    type: "object"
    required:
    - "instanceId"
    properties:
      validationStatusCode:
        type: "integer"
        format: "int32"
        readOnly: true
      dataPointName:
        type: "string"
        readOnly: true
      instanceId:
        type: "integer"
        format: "int32"
      dataPointId:
        type: "integer"
        format: "int32"
        readOnly: true
      instanceName:
        type: "string"
        readOnly: true
  ServiceIndividualsStatusWidget:
    allOf:
    - $ref: "#/definitions/WidgetBaseVersion1"
    - type: "object"
      required:
      - "dashboardId"
      - "locations"
      - "name"
      - "type"
      properties:
        rowSpan:
          type: "integer"
          format: "int32"
        lastUpdatedBy:
          type: "string"
          readOnly: true
        userPermission:
          type: "string"
          readOnly: true
        serviceFolderName:
          type: "string"
          readOnly: true
        colSpan:
          type: "integer"
          format: "int32"
        description:
          type: "string"
        type:
          type: "string"
        serviceName:
          type: "string"
        graph:
          type: "string"
        isInternal:
          type: "boolean"
          readOnly: true
        columnIdx:
          type: "integer"
          format: "int32"
        dashboardId:
          type: "integer"
          format: "int32"
        extra:
          type: "string"
        name:
          type: "string"
        lastUpdatedOn:
          type: "integer"
          format: "int64"
          readOnly: true
        theme:
          type: "string"
        interval:
          type: "integer"
          format: "int32"
        locations:
          type: "array"
          items:
            $ref: "#/definitions/LocationData"
        id:
          type: "integer"
          format: "int32"
        timescale:
          type: "string"
        serviceFolderId:
          type: "integer"
          format: "int32"
        serviceId:
          type: "integer"
          format: "int32"
        order:
          type: "integer"
          format: "int32"
    x-discriminator-value: "serviceindividualstatus"
  DeviceGroupDataSource:
    type: "object"
    required:
    - "disableAlerting"
    - "stopMonitoring"
    properties:
      stopMonitoring:
        type: "boolean"
      dataSourceId:
        type: "integer"
        format: "int32"
        readOnly: true
      dataSourceGroupName:
        type: "string"
        readOnly: true
      deviceGroupId:
        type: "integer"
        format: "int32"
        readOnly: true
      dataSourceDisplayName:
        type: "string"
        readOnly: true
      disableAlerting:
        type: "boolean"
      dataSourceName:
        type: "string"
        readOnly: true
      dataSourceType:
        type: "string"
        readOnly: true
    example:
      stopMonitoring: true
      dataSourceId: 0
      dataSourceGroupName: "dataSourceGroupName"
      deviceGroupId: 6
      dataSourceDisplayName: "dataSourceDisplayName"
      disableAlerting: true
      dataSourceName: "dataSourceName"
      dataSourceType: "dataSourceType"
  BigNumberData:
    type: "object"
    required:
    - "useCommaSeparators"
    properties:
      useCommaSeparators:
        type: "boolean"
      bottomLabel:
        type: "string"
        readOnly: true
      errorMessage:
        type: "string"
        readOnly: true
      rounding:
        type: "integer"
        format: "int32"
        readOnly: true
      position:
        type: "integer"
        format: "int32"
        readOnly: true
      value:
        type: "number"
        format: "double"
        readOnly: true
      rightLabel:
        type: "string"
        readOnly: true
      colorLevel:
        type: "integer"
        format: "int32"
        readOnly: true
  StatsDWidget:
    allOf:
    - $ref: "#/definitions/WidgetBaseVersion1"
    - type: "object"
      required:
      - "dashboardId"
      - "name"
      - "type"
      properties:
        lastUpdatedBy:
          type: "string"
          readOnly: true
        userPermission:
          type: "string"
          readOnly: true
        description:
          type: "string"
        type:
          type: "string"
        dashboardId:
          type: "integer"
          format: "int32"
        extra:
          type: "string"
        name:
          type: "string"
        lastUpdatedOn:
          type: "integer"
          format: "int64"
          readOnly: true
        theme:
          type: "string"
        interval:
          type: "integer"
          format: "int32"
        graphInfo:
          $ref: "#/definitions/StatsDGraph"
        id:
          type: "integer"
          format: "int32"
        timescale:
          type: "string"
    x-discriminator-value: "statsd"
  AzureBillingCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
  AutomaticUpgradeInfo:
    type: "object"
    required:
    - "dayOfWeek"
    - "hour"
    - "minute"
    - "occurrence"
    - "version"
    properties:
      dayOfWeek:
        type: "string"
      hour:
        type: "integer"
        format: "int32"
      createdBy:
        type: "string"
        readOnly: true
      level:
        type: "string"
        readOnly: true
      description:
        type: "string"
      occurrence:
        type: "string"
      type:
        type: "string"
        readOnly: true
      version:
        type: "string"
      minute:
        type: "integer"
        format: "int32"
    example:
      dayOfWeek: "dayOfWeek"
      hour: 5
      createdBy: "createdBy"
      level: "level"
      description: "description"
      occurrence: "occurrence"
      type: "type"
      version: "version"
      minute: 5
  Dashboard:
    type: "object"
    required:
    - "name"
    properties:
      owner:
        type: "string"
      userPermission:
        type: "string"
        readOnly: true
      groupId:
        type: "integer"
        format: "int32"
      fullName:
        type: "string"
        readOnly: true
      description:
        type: "string"
      sharable:
        type: "boolean"
      widgetsOrder:
        type: "string"
      widgetsConfig:
        type: "string"
      useDynamicWidget:
        type: "boolean"
        readOnly: true
      groupName:
        type: "string"
      widgetTokens:
        type: "array"
        items:
          $ref: "#/definitions/WidgetToken"
      name:
        type: "string"
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      groupFullPath:
        type: "string"
        readOnly: true
    example:
      owner: "owner"
      userPermission: "userPermission"
      groupId: 6
      fullName: "fullName"
      description: "description"
      sharable: true
      widgetsOrder: "widgetsOrder"
      widgetsConfig: "widgetsConfig"
      useDynamicWidget: true
      groupName: "groupName"
      widgetTokens:
      - inheritList:
        - fullpath: "fullpath"
          value: "value"
        - fullpath: "fullpath"
          value: "value"
        name: "name"
        type: "type"
        value: "value"
      - inheritList:
        - fullpath: "fullpath"
          value: "value"
        - fullpath: "fullpath"
          value: "value"
        name: "name"
        type: "type"
        value: "value"
      name: "name"
      id: 1
      groupFullPath: "groupFullPath"
  TableWidgetData:
    allOf:
    - $ref: "#/definitions/WidgetData"
    - type: "object"
      properties:
        columnHeaders:
          type: "array"
          readOnly: true
          items:
            $ref: "#/definitions/ColumnHeader"
        type:
          type: "string"
          readOnly: true
        rows:
          type: "array"
          readOnly: true
          items:
            $ref: "#/definitions/RowData"
    x-discriminator-value: "table"
  PortAutoDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
      required:
      - "ports"
      properties:
        ports:
          type: "string"
        timeout:
          type: "integer"
          format: "int32"
    x-discriminator-value: "ad_port"
  AwsEC2ScheduledEventsCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "period"
      properties:
        period:
          type: "integer"
          format: "int32"
  DeviceSLAWidgetData:
    allOf:
    - $ref: "#/definitions/WidgetData"
    - type: "object"
      properties:
        type:
          type: "string"
          readOnly: true
        resultList:
          type: "array"
          readOnly: true
          items:
            $ref: "#/definitions/ResultItem"
    x-discriminator-value: "devicesla"
  WidgetDataResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/WidgetData"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data: {}
      errmsg: "errmsg"
      status: 0
  DashboardBase:
    type: "object"
    required:
    - "name"
    properties:
      owner:
        type: "string"
      template:
        $ref: "#/definitions/JSONObject"
      userPermission:
        type: "string"
        readOnly: true
      groupId:
        type: "integer"
        format: "int32"
      fullName:
        type: "string"
        readOnly: true
      description:
        type: "string"
      sharable:
        type: "boolean"
      widgetsOrder:
        type: "string"
      widgetsConfig:
        $ref: "#/definitions/JSONObject"
      groupName:
        type: "string"
      widgetTokens:
        type: "array"
        items:
          $ref: "#/definitions/WidgetToken"
      name:
        type: "string"
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      groupFullPath:
        type: "string"
        readOnly: true
    example:
      owner: "owner"
      template: {}
      userPermission: "userPermission"
      groupId: 6
      fullName: "fullName"
      description: "description"
      sharable: true
      widgetsOrder: "widgetsOrder"
      groupName: "groupName"
      widgetTokens:
      - inheritList:
        - fullpath: "fullpath"
          value: "value"
        - fullpath: "fullpath"
          value: "value"
        name: "name"
        type: "type"
        value: "value"
      - inheritList:
        - fullpath: "fullpath"
          value: "value"
        - fullpath: "fullpath"
          value: "value"
        name: "name"
        type: "type"
        value: "value"
      name: "name"
      id: 1
      groupFullPath: "groupFullPath"
  RestReportGroup:
    type: "object"
    properties:
      userPermission:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      id:
        type: "integer"
        format: "int32"
      reportsCount:
        type: "integer"
        format: "int32"
    example:
      userPermission: "userPermission"
      name: "name"
      description: "description"
      id: 5
      reportsCount: 5
  PingCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "ip"
      - "sendPkts"
      properties:
        ip:
          type: "string"
        sendPkts:
          type: "integer"
          format: "int32"
    x-discriminator-value: "ping"
  OnetimeUpgradeInfo:
    type: "object"
    required:
    - "majorVersion"
    - "minorVersion"
    - "startEpoch"
    properties:
      createdBy:
        type: "string"
        readOnly: true
      level:
        type: "string"
        readOnly: true
      endEpoch:
        type: "integer"
        format: "int64"
        readOnly: true
      description:
        type: "string"
      type:
        type: "string"
        readOnly: true
      majorVersion:
        type: "integer"
        format: "int32"
      minorVersion:
        type: "integer"
        format: "int32"
      startEpoch:
        type: "integer"
        format: "int64"
    example:
      createdBy: "createdBy"
      level: "level"
      endEpoch: 7
      description: "description"
      type: "type"
      majorVersion: 9
      minorVersion: 3
      startEpoch: 2
  TextWidget:
    allOf:
    - $ref: "#/definitions/WidgetBaseVersion1"
    - type: "object"
      required:
      - "content"
      - "dashboardId"
      - "name"
      - "type"
      properties:
        rowSpan:
          type: "integer"
          format: "int32"
        lastUpdatedBy:
          type: "string"
          readOnly: true
        userPermission:
          type: "string"
          readOnly: true
        colSpan:
          type: "integer"
          format: "int32"
        description:
          type: "string"
        type:
          type: "string"
        content:
          type: "string"
        columnIdx:
          type: "integer"
          format: "int32"
        dashboardId:
          type: "integer"
          format: "int32"
        extra:
          type: "string"
        name:
          type: "string"
        lastUpdatedOn:
          type: "integer"
          format: "int64"
          readOnly: true
        theme:
          type: "string"
        interval:
          type: "integer"
          format: "int32"
        id:
          type: "integer"
          format: "int32"
        timescale:
          type: "string"
        order:
          type: "integer"
          format: "int32"
    x-discriminator-value: "text"
  NetflowQoSReportTableRow:
    allOf:
    - $ref: "#/definitions/NetflowDataBase"
    - type: "object"
      properties:
        received:
          type: "number"
          format: "double"
          readOnly: true
        type:
          type: "string"
          readOnly: true
        sent:
          type: "number"
          format: "double"
          readOnly: true
    x-discriminator-value: "qosreporttablerow"
  NetflowWidget:
    allOf:
    - $ref: "#/definitions/WidgetBaseVersion1"
    - type: "object"
      required:
      - "dashboardId"
      - "deviceId"
      - "name"
      - "type"
      properties:
        rowSpan:
          type: "integer"
          format: "int32"
        lastUpdatedBy:
          type: "string"
          readOnly: true
        userPermission:
          type: "string"
          readOnly: true
        colSpan:
          type: "integer"
          format: "int32"
        dataType:
          type: "string"
        description:
          type: "string"
        type:
          type: "string"
        deviceId:
          type: "integer"
          format: "int32"
        deviceDisplayName:
          type: "string"
          readOnly: true
        filter:
          type: "string"
        columnIdx:
          type: "integer"
          format: "int32"
        dashboardId:
          type: "integer"
          format: "int32"
        extra:
          type: "string"
        name:
          type: "string"
        netflowFilter:
          $ref: "#/definitions/RestNetflowFilters"
        lastUpdatedOn:
          type: "integer"
          format: "int64"
          readOnly: true
        theme:
          type: "string"
        interval:
          type: "integer"
          format: "int32"
        id:
          type: "integer"
          format: "int32"
        timescale:
          type: "string"
        order:
          type: "integer"
          format: "int32"
    x-discriminator-value: "netflow"
  NetFlowRecord:
    allOf:
    - $ref: "#/definitions/NetflowDataBase"
    - type: "object"
      properties:
        srcIP:
          type: "string"
          readOnly: true
        percentUsage:
          type: "number"
          format: "double"
          readOnly: true
        lastEpochInSec:
          type: "integer"
          format: "int64"
          readOnly: true
        ifOut:
          type: "integer"
          format: "int64"
          readOnly: true
        usage:
          type: "number"
          format: "double"
          readOnly: true
        dstDNS:
          type: "string"
          readOnly: true
        srcPort:
          type: "integer"
          format: "int32"
          readOnly: true
        firstEpochInSec:
          type: "integer"
          format: "int64"
          readOnly: true
        protocol:
          type: "string"
          readOnly: true
        dstPort:
          type: "integer"
          format: "int32"
          readOnly: true
        ifIn:
          type: "integer"
          format: "int64"
          readOnly: true
        sourceMBytes:
          type: "number"
          format: "double"
          readOnly: true
        srcDNS:
          type: "string"
          readOnly: true
        destinationMBytes:
          type: "number"
          format: "double"
          readOnly: true
        dstIP:
          type: "string"
          readOnly: true
    x-discriminator-value: "flowrecord"
  TreeNode:
    type: "object"
    properties:
      userPermission:
        type: "string"
      displayName:
        type: "string"
      id:
        type: "integer"
        format: "int32"
      type:
        type: "string"
    example:
      userPermission: "userPermission"
      displayName: "displayName"
      id: 1
      type: "type"
  DNSCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
    x-discriminator-value: "dns"
  AzureVMServiceLimitsCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "period"
      properties:
        period:
          type: "integer"
          format: "int32"
  ServiceGroupResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/ServiceGroup"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        alertStatus: "alertStatus"
        fullPath: "fullPath"
        numOfServices: 0
        stopMonitoring: true
        hasServicesDisabled: true
        userPermission: "userPermission"
        testLocation: "testLocation"
        description: "description"
        disableAlerting: true
        groupStatus: "groupStatus"
        sdtStatus: "sdtStatus"
        parentId: 6
        name: "name"
        numOfDirectSubGroups: 1
        subGroups:
        - alertStatus: "alertStatus"
          fullPath: "fullPath"
          stopMonitoring: true
          userPermission: "userPermission"
          name: "name"
          numOfDirectSubGroups: 5
          description: "description"
          disableAlerting: true
          id: 5
          alertDisableStatus: "alertDisableStatus"
          sdtStatus: "sdtStatus"
        - alertStatus: "alertStatus"
          fullPath: "fullPath"
          stopMonitoring: true
          userPermission: "userPermission"
          name: "name"
          numOfDirectSubGroups: 5
          description: "description"
          disableAlerting: true
          id: 5
          alertDisableStatus: "alertDisableStatus"
          sdtStatus: "sdtStatus"
        id: 2
        alertStatusPriority: 7
        alertDisableStatus: "alertDisableStatus"
        serviceProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        numOfDirectServices: 9
      errmsg: "errmsg"
      status: 3
  GoogleMapWidgetData:
    allOf:
    - $ref: "#/definitions/WidgetData"
    - type: "object"
      properties:
        type:
          type: "string"
          readOnly: true
        items:
          type: "array"
          readOnly: true
          items:
            $ref: "#/definitions/MapItemInfo"
    x-discriminator-value: "gmap"
  DeviceDataSourceData:
    type: "object"
    properties:
      instances:
        type: "object"
        readOnly: true
        additionalProperties:
          $ref: "#/definitions/RawDataValues"
      dataPoints:
        type: "array"
        readOnly: true
        items:
          type: "string"
      nextPageParams:
        type: "string"
        readOnly: true
      dataSourceName:
        type: "string"
        readOnly: true
    example:
      instances:
        key:
          values:
          - - 0.8008281904610115
            - 0.8008281904610115
          - - 0.8008281904610115
            - 0.8008281904610115
          time:
          - 6
          - 6
          nextPageParams: "nextPageParams"
      dataPoints:
      - "dataPoints"
      - "dataPoints"
      nextPageParams: "nextPageParams"
      dataSourceName: "dataSourceName"
  ApiTokenPaginationResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/ApiTokenPagination"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        total: 0
        searchId: "searchId"
        items:
        - accessId: "accessId"
          adminName: "adminName"
          note: "note"
          lastUsedOn: 0
          accessKey: "accessKey"
          createdBy: "createdBy"
          roles:
          - "roles"
          - "roles"
          adminId: 6
          id: 1
          createdOn: 5
          status: 5
        - accessId: "accessId"
          adminName: "adminName"
          note: "note"
          lastUsedOn: 0
          accessKey: "accessKey"
          createdBy: "createdBy"
          roles:
          - "roles"
          - "roles"
          adminId: 6
          id: 1
          createdOn: 5
          status: 5
      errmsg: "errmsg"
      status: 6
  CustomVirtualDataPoint:
    type: "object"
    required:
    - "name"
    - "rpn"
    properties:
      rpn:
        type: "string"
      customGraphId:
        type: "integer"
        format: "int32"
        readOnly: true
      name:
        type: "string"
      id:
        type: "integer"
        format: "int32"
        readOnly: true
  PDHAutoDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
      required:
      - "category"
      - "objRegex"
      properties:
        objRegex:
          type: "string"
        category:
          type: "string"
    x-discriminator-value: "ad_pdh"
  JDBCCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "password"
      - "query"
      - "url"
      - "username"
      properties:
        password:
          type: "string"
        query:
          type: "string"
        url:
          type: "string"
        username:
          type: "string"
    x-discriminator-value: "jdbc"
  AzureNetworkServiceLimitsCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "period"
      properties:
        period:
          type: "integer"
          format: "int32"
  UDPCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "payload"
      - "port"
      properties:
        payload:
          type: "string"
        port:
          type: "string"
    x-discriminator-value: "udp"
  NetflowWidgetData:
    allOf:
    - $ref: "#/definitions/WidgetData"
    - type: "object"
      properties:
        total:
          type: "integer"
          format: "int32"
          readOnly: true
        type:
          type: "string"
          readOnly: true
        items:
          type: "array"
          readOnly: true
          items:
            $ref: "#/definitions/NetflowDataBase"
    x-discriminator-value: "netflow"
  NullObjectResponse:
    type: "object"
    properties:
      data:
        type: "object"
        properties: {}
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data: "{}"
      errmsg: "errmsg"
      status: 0
  DashboardPagination:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      searchId:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/Dashboard"
    example:
      total: 0
      searchId: "searchId"
      items:
      - owner: "owner"
        userPermission: "userPermission"
        groupId: 6
        fullName: "fullName"
        description: "description"
        sharable: true
        widgetsOrder: "widgetsOrder"
        widgetsConfig: "widgetsConfig"
        useDynamicWidget: true
        groupName: "groupName"
        widgetTokens:
        - inheritList:
          - fullpath: "fullpath"
            value: "value"
          - fullpath: "fullpath"
            value: "value"
          name: "name"
          type: "type"
          value: "value"
        - inheritList:
          - fullpath: "fullpath"
            value: "value"
          - fullpath: "fullpath"
            value: "value"
          name: "name"
          type: "type"
          value: "value"
        name: "name"
        id: 1
        groupFullPath: "groupFullPath"
      - owner: "owner"
        userPermission: "userPermission"
        groupId: 6
        fullName: "fullName"
        description: "description"
        sharable: true
        widgetsOrder: "widgetsOrder"
        widgetsConfig: "widgetsConfig"
        useDynamicWidget: true
        groupName: "groupName"
        widgetTokens:
        - inheritList:
          - fullpath: "fullpath"
            value: "value"
          - fullpath: "fullpath"
            value: "value"
          name: "name"
          type: "type"
          value: "value"
        - inheritList:
          - fullpath: "fullpath"
            value: "value"
          - fullpath: "fullpath"
            value: "value"
          name: "name"
          type: "type"
          value: "value"
        name: "name"
        id: 1
        groupFullPath: "groupFullPath"
  DeviceDataSourceInstance:
    type: "object"
    required:
    - "displayName"
    - "wildValue"
    properties:
      alertStatus:
        type: "string"
        readOnly: true
      displayName:
        type: "string"
      groupId:
        type: "integer"
        format: "int32"
      description:
        type: "string"
      disableAlerting:
        type: "boolean"
      deviceId:
        type: "integer"
        format: "int32"
        readOnly: true
      systemProperties:
        type: "array"
        items:
          $ref: "#/definitions/NameAndValue"
      dataSourceId:
        type: "integer"
        format: "int32"
        readOnly: true
      sdtAt:
        type: "string"
        readOnly: true
      lockDescription:
        type: "boolean"
      lastUpdatedTime:
        type: "integer"
        format: "int64"
        readOnly: true
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      alertStatusPriority:
        type: "integer"
        format: "int32"
        readOnly: true
      alertDisableStatus:
        type: "string"
        readOnly: true
      wildValue:
        type: "string"
      stopMonitoring:
        type: "boolean"
      deviceDataSourceId:
        type: "integer"
        format: "int32"
        readOnly: true
      wildValue2:
        type: "string"
      sdtStatus:
        type: "string"
        readOnly: true
      deviceDisplayName:
        type: "string"
        readOnly: true
      groupsDisabledThisSource:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/TreeNode"
      lastCollectedTime:
        type: "integer"
        format: "int64"
        readOnly: true
      autoProperties:
        type: "array"
        items:
          $ref: "#/definitions/NameAndValue"
      groupName:
        type: "string"
        readOnly: true
      customProperties:
        type: "array"
        items:
          $ref: "#/definitions/NameAndValue"
      name:
        type: "string"
        readOnly: true
      alertingDisabledOn:
        readOnly: true
        $ref: "#/definitions/TreeNode"
      dataSourceType:
        type: "string"
        readOnly: true
    example:
      alertStatus: "alertStatus"
      displayName: "displayName"
      groupId: 0
      description: "description"
      disableAlerting: true
      deviceId: 6
      systemProperties:
      - name: "name"
        value: "value"
      - name: "name"
        value: "value"
      dataSourceId: 1
      sdtAt: "sdtAt"
      lockDescription: true
      lastUpdatedTime: 5
      id: 5
      alertStatusPriority: 2
      alertDisableStatus: "alertDisableStatus"
      wildValue: "wildValue"
      stopMonitoring: true
      deviceDataSourceId: 7
      wildValue2: "wildValue2"
      sdtStatus: "sdtStatus"
      deviceDisplayName: "deviceDisplayName"
      groupsDisabledThisSource:
      - userPermission: "userPermission"
        displayName: "displayName"
        id: 1
        type: "type"
      - userPermission: "userPermission"
        displayName: "displayName"
        id: 1
        type: "type"
      lastCollectedTime: 9
      autoProperties:
      - name: "name"
        value: "value"
      - name: "name"
        value: "value"
      groupName: "groupName"
      customProperties:
      - name: "name"
        value: "value"
      - name: "name"
        value: "value"
      name: "name"
      alertingDisabledOn:
        userPermission: "userPermission"
        displayName: "displayName"
        id: 1
        type: "type"
      dataSourceType: "dataSourceType"
  DeviceDataSourceInstanceConfig:
    type: "object"
    properties:
      instanceName:
        type: "string"
      deviceDataSourceId:
        type: "integer"
        format: "int32"
      configStatus:
        type: "integer"
        format: "int32"
      version:
        type: "integer"
        format: "int64"
      deviceId:
        type: "integer"
        format: "int32"
      deltaConfig:
        type: "array"
        items:
          $ref: "#/definitions/DeviceDataSourceInstanceConfigDiff"
      deviceDisplayName:
        type: "string"
      dataSourceName:
        type: "string"
      alerts:
        type: "array"
        items:
          $ref: "#/definitions/DeviceDataSourceInstanceConfigAlert"
      dataSourceId:
        type: "integer"
        format: "int32"
      instanceId:
        type: "integer"
        format: "int32"
      configErrMsg:
        type: "string"
      changeStatus:
        type: "string"
      id:
        type: "string"
      pollTimestamp:
        type: "integer"
        format: "int64"
      config:
        type: "string"
    example:
      instanceName: "instanceName"
      deviceDataSourceId: 0
      configStatus: 6
      version: 1
      deviceId: 5
      deltaConfig:
      - rowNo: 5
        type: "type"
        content: "content"
      - rowNo: 5
        type: "type"
        content: "content"
      deviceDisplayName: "deviceDisplayName"
      dataSourceName: "dataSourceName"
      alerts:
      - alertLevel: 2
        id: "id"
        alertId: "alertId"
        alertSummary: "alertSummary"
        timestamp: 7
      - alertLevel: 2
        id: "id"
        alertId: "alertId"
        alertSummary: "alertSummary"
        timestamp: 7
      dataSourceId: 9
      instanceId: 3
      configErrMsg: "configErrMsg"
      changeStatus: "changeStatus"
      id: "id"
      pollTimestamp: 2
      config: "config"
  AwsSqsCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      properties:
        awsSqsMessageSize:
          type: "integer"
          format: "int32"
        awsSqsMessageNum:
          type: "integer"
          format: "int32"
    x-discriminator-value: "awssqs"
  IPMIAutoDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
      properties:
        method:
          type: "string"
    x-discriminator-value: "ad_ipmi"
  PropertyResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/EntityProperty"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        inheritList:
        - fullpath: "fullpath"
          id: 6
          type: "type"
          value: "value"
        - fullpath: "fullpath"
          id: 6
          type: "type"
          value: "value"
        name: "name"
        type: "type"
        value: "value"
      errmsg: "errmsg"
      status: 0
  Role:
    type: "object"
    required:
    - "name"
    - "privileges"
    properties:
      enableRemoteSessionInCompanyLevel:
        type: "boolean"
        readOnly: true
      customHelpLabel:
        type: "string"
      customHelpURL:
        type: "string"
      privileges:
        type: "array"
        items:
          $ref: "#/definitions/Privilege"
      associatedUserCount:
        type: "integer"
        format: "int32"
        readOnly: true
      name:
        type: "string"
      description:
        type: "string"
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      twoFARequired:
        type: "boolean"
      requireEULA:
        type: "boolean"
      acctRequireTwoFA:
        type: "boolean"
        readOnly: true
    example:
      enableRemoteSessionInCompanyLevel: true
      customHelpLabel: "customHelpLabel"
      customHelpURL: "customHelpURL"
      privileges:
      - objectName: "objectName"
        subOperation: "subOperation"
        operation: "operation"
        objectId: "objectId"
        objectType: "objectType"
      - objectName: "objectName"
        subOperation: "subOperation"
        operation: "operation"
        objectId: "objectId"
        objectType: "objectType"
      associatedUserCount: 0
      name: "name"
      description: "description"
      id: 6
      twoFARequired: true
      requireEULA: true
      acctRequireTwoFA: true
  DowngradeInfo:
    type: "object"
    required:
    - "majorVersion"
    - "minorVersion"
    - "startEpoch"
    properties:
      createdBy:
        type: "string"
        readOnly: true
      level:
        type: "string"
        readOnly: true
      endEpoch:
        type: "integer"
        format: "int64"
        readOnly: true
      description:
        type: "string"
      type:
        type: "string"
        readOnly: true
      majorVersion:
        type: "integer"
        format: "int32"
      minorVersion:
        type: "integer"
        format: "int32"
      startEpoch:
        type: "integer"
        format: "int64"
    example:
      createdBy: "createdBy"
      level: "level"
      endEpoch: 9
      description: "description"
      type: "type"
      majorVersion: 6
      minorVersion: 3
      startEpoch: 6
  ReportRecipient:
    type: "object"
    required:
    - "addr"
    - "type"
    properties:
      additionInfo:
        type: "string"
        readOnly: true
      method:
        type: "string"
      type:
        type: "string"
      addr:
        type: "string"
    example:
      additionInfo: "additionInfo"
      method: "method"
      type: "type"
      addr: "addr"
  PieChartWidgetData:
    allOf:
    - $ref: "#/definitions/WidgetData"
    - type: "object"
      properties:
        maxSlicesCanBeShown:
          type: "integer"
          format: "int32"
          readOnly: true
        data:
          type: "array"
          readOnly: true
          items:
            $ref: "#/definitions/PieChartData"
        hideZeroPercentSlices:
          type: "boolean"
        groupRemainingAsOthers:
          type: "boolean"
          readOnly: true
        type:
          type: "string"
          readOnly: true
        title:
          type: "string"
          readOnly: true
    x-discriminator-value: "piechart"
  ReportPaginationResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/ReportPagination"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        total: 0
        searchId: "searchId"
        items:
        - lastmodifyUserId: 6
          delivery: "delivery"
          userPermission: "userPermission"
          lastGenerateOn: 1
          reportLinkNum: 5
          groupId: 5
          format: "format"
          description: "description"
          lastGenerateSize: 2
          customReportTypeId: 7
          type: "type"
          lastGeneratePages: 9
          schedule: "schedule"
          recipients:
          - additionInfo: "additionInfo"
            method: "method"
            type: "type"
            addr: "addr"
          - additionInfo: "additionInfo"
            method: "method"
            type: "type"
            addr: "addr"
          customReportTypeName: "customReportTypeName"
          name: "name"
          enableViewAsOtherUser: true
          lastmodifyUserName: "lastmodifyUserName"
          id: 3
        - lastmodifyUserId: 6
          delivery: "delivery"
          userPermission: "userPermission"
          lastGenerateOn: 1
          reportLinkNum: 5
          groupId: 5
          format: "format"
          description: "description"
          lastGenerateSize: 2
          customReportTypeId: 7
          type: "type"
          lastGeneratePages: 9
          schedule: "schedule"
          recipients:
          - additionInfo: "additionInfo"
            method: "method"
            type: "type"
            addr: "addr"
          - additionInfo: "additionInfo"
            method: "method"
            type: "type"
            addr: "addr"
          customReportTypeName: "customReportTypeName"
          name: "name"
          enableViewAsOtherUser: true
          lastmodifyUserName: "lastmodifyUserName"
          id: 3
      errmsg: "errmsg"
      status: 2
  ServiceGroupPaginationResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/ServiceGroupPagination"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        total: 0
        searchId: "searchId"
        items:
        - alertStatus: "alertStatus"
          fullPath: "fullPath"
          numOfServices: 0
          stopMonitoring: true
          hasServicesDisabled: true
          userPermission: "userPermission"
          testLocation: "testLocation"
          description: "description"
          disableAlerting: true
          groupStatus: "groupStatus"
          sdtStatus: "sdtStatus"
          parentId: 6
          name: "name"
          numOfDirectSubGroups: 1
          subGroups:
          - alertStatus: "alertStatus"
            fullPath: "fullPath"
            stopMonitoring: true
            userPermission: "userPermission"
            name: "name"
            numOfDirectSubGroups: 5
            description: "description"
            disableAlerting: true
            id: 5
            alertDisableStatus: "alertDisableStatus"
            sdtStatus: "sdtStatus"
          - alertStatus: "alertStatus"
            fullPath: "fullPath"
            stopMonitoring: true
            userPermission: "userPermission"
            name: "name"
            numOfDirectSubGroups: 5
            description: "description"
            disableAlerting: true
            id: 5
            alertDisableStatus: "alertDisableStatus"
            sdtStatus: "sdtStatus"
          id: 2
          alertStatusPriority: 7
          alertDisableStatus: "alertDisableStatus"
          serviceProperties:
          - name: "name"
            value: "value"
          - name: "name"
            value: "value"
          numOfDirectServices: 9
        - alertStatus: "alertStatus"
          fullPath: "fullPath"
          numOfServices: 0
          stopMonitoring: true
          hasServicesDisabled: true
          userPermission: "userPermission"
          testLocation: "testLocation"
          description: "description"
          disableAlerting: true
          groupStatus: "groupStatus"
          sdtStatus: "sdtStatus"
          parentId: 6
          name: "name"
          numOfDirectSubGroups: 1
          subGroups:
          - alertStatus: "alertStatus"
            fullPath: "fullPath"
            stopMonitoring: true
            userPermission: "userPermission"
            name: "name"
            numOfDirectSubGroups: 5
            description: "description"
            disableAlerting: true
            id: 5
            alertDisableStatus: "alertDisableStatus"
            sdtStatus: "sdtStatus"
          - alertStatus: "alertStatus"
            fullPath: "fullPath"
            stopMonitoring: true
            userPermission: "userPermission"
            name: "name"
            numOfDirectSubGroups: 5
            description: "description"
            disableAlerting: true
            id: 5
            alertDisableStatus: "alertDisableStatus"
            sdtStatus: "sdtStatus"
          id: 2
          alertStatusPriority: 7
          alertDisableStatus: "alertDisableStatus"
          serviceProperties:
          - name: "name"
            value: "value"
          - name: "name"
            value: "value"
          numOfDirectServices: 9
      errmsg: "errmsg"
      status: 6
  SiteMonitorCheckpoint:
    type: "object"
    required:
    - "description"
    properties:
      geoInfo:
        type: "string"
        readOnly: true
      displayPrio:
        type: "integer"
        format: "int32"
      name:
        type: "string"
        readOnly: true
      isEnabledInRoot:
        type: "boolean"
        readOnly: true
      description:
        type: "string"
      id:
        type: "integer"
        format: "int32"
        readOnly: true
    example:
      geoInfo: "geoInfo"
      displayPrio: 6
      name: "name"
      isEnabledInRoot: true
      description: "description"
      id: 1
  AdminPaginationResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/AdminPagination"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        total: 0
        searchId: "searchId"
        items:
        - lastName: "lastName"
          note: "note"
          viewPermission: "viewPermission"
          timezone: "timezone"
          roles:
          - enableRemoteSessionInCompanyLevel: true
            customHelpLabel: "customHelpLabel"
            customHelpURL: "customHelpURL"
            privileges:
            - objectName: "objectName"
              subOperation: "subOperation"
              operation: "operation"
              objectId: "objectId"
              objectType: "objectType"
            - objectName: "objectName"
              subOperation: "subOperation"
              operation: "operation"
              objectId: "objectId"
              objectType: "objectType"
            associatedUserCount: 0
            name: "name"
            description: "description"
            id: 6
            twoFARequired: true
            requireEULA: true
            acctRequireTwoFA: true
          - enableRemoteSessionInCompanyLevel: true
            customHelpLabel: "customHelpLabel"
            customHelpURL: "customHelpURL"
            privileges:
            - objectName: "objectName"
              subOperation: "subOperation"
              operation: "operation"
              objectId: "objectId"
              objectType: "objectType"
            - objectName: "objectName"
              subOperation: "subOperation"
              operation: "operation"
              objectId: "objectId"
              objectType: "objectType"
            associatedUserCount: 0
            name: "name"
            description: "description"
            id: 6
            twoFARequired: true
            requireEULA: true
            acctRequireTwoFA: true
          lastLoginOn: 0
          lastActionOnLocal: "lastActionOnLocal"
          smsEmailFormat: "smsEmailFormat"
          apionly: true
          apiTokens:
          - accessId: "accessId"
            adminName: "adminName"
            note: "note"
            lastUsedOn: 0
            accessKey: "accessKey"
            createdBy: "createdBy"
            roles:
            - "roles"
            - "roles"
            adminId: 6
            id: 1
            createdOn: 5
            status: 5
          - accessId: "accessId"
            adminName: "adminName"
            note: "note"
            lastUsedOn: 0
            accessKey: "accessKey"
            createdBy: "createdBy"
            roles:
            - "roles"
            - "roles"
            adminId: 6
            id: 1
            createdOn: 5
            status: 5
          password: "password"
          lastAction: "lastAction"
          skilljarEmail: "skilljarEmail"
          lastActionOn: 6
          id: 1
          email: "email"
          contactMethod: "contactMethod"
          acceptEULAOn: 5
          setupWizardStatus: "setupWizardStatus"
          smsEmail: "smsEmail"
          twoFAEnabled: true
          firstName: "firstName"
          phone: "phone"
          createdBy: "createdBy"
          forcePasswordChange: true
          acceptEULA: true
          username: "username"
          status: "status"
        - lastName: "lastName"
          note: "note"
          viewPermission: "viewPermission"
          timezone: "timezone"
          roles:
          - enableRemoteSessionInCompanyLevel: true
            customHelpLabel: "customHelpLabel"
            customHelpURL: "customHelpURL"
            privileges:
            - objectName: "objectName"
              subOperation: "subOperation"
              operation: "operation"
              objectId: "objectId"
              objectType: "objectType"
            - objectName: "objectName"
              subOperation: "subOperation"
              operation: "operation"
              objectId: "objectId"
              objectType: "objectType"
            associatedUserCount: 0
            name: "name"
            description: "description"
            id: 6
            twoFARequired: true
            requireEULA: true
            acctRequireTwoFA: true
          - enableRemoteSessionInCompanyLevel: true
            customHelpLabel: "customHelpLabel"
            customHelpURL: "customHelpURL"
            privileges:
            - objectName: "objectName"
              subOperation: "subOperation"
              operation: "operation"
              objectId: "objectId"
              objectType: "objectType"
            - objectName: "objectName"
              subOperation: "subOperation"
              operation: "operation"
              objectId: "objectId"
              objectType: "objectType"
            associatedUserCount: 0
            name: "name"
            description: "description"
            id: 6
            twoFARequired: true
            requireEULA: true
            acctRequireTwoFA: true
          lastLoginOn: 0
          lastActionOnLocal: "lastActionOnLocal"
          smsEmailFormat: "smsEmailFormat"
          apionly: true
          apiTokens:
          - accessId: "accessId"
            adminName: "adminName"
            note: "note"
            lastUsedOn: 0
            accessKey: "accessKey"
            createdBy: "createdBy"
            roles:
            - "roles"
            - "roles"
            adminId: 6
            id: 1
            createdOn: 5
            status: 5
          - accessId: "accessId"
            adminName: "adminName"
            note: "note"
            lastUsedOn: 0
            accessKey: "accessKey"
            createdBy: "createdBy"
            roles:
            - "roles"
            - "roles"
            adminId: 6
            id: 1
            createdOn: 5
            status: 5
          password: "password"
          lastAction: "lastAction"
          skilljarEmail: "skilljarEmail"
          lastActionOn: 6
          id: 1
          email: "email"
          contactMethod: "contactMethod"
          acceptEULAOn: 5
          setupWizardStatus: "setupWizardStatus"
          smsEmail: "smsEmail"
          twoFAEnabled: true
          firstName: "firstName"
          phone: "phone"
          createdBy: "createdBy"
          forcePasswordChange: true
          acceptEULA: true
          username: "username"
          status: "status"
      errmsg: "errmsg"
      status: 6
  DatasourcePaginationResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/DatasourcePagination"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        total: 0
        searchId: "searchId"
        items:
        - collectorAttribute:
            name: "name"
          autoDiscoveryConfig:
            persistentInstance: true
            scheduleInterval: 6
            deleteInactiveInstance: true
            method:
              name: "name"
            instanceAutoGroupMethod: "instanceAutoGroupMethod"
            instanceAutoGroupMethodParams: "instanceAutoGroupMethodParams"
            filters:
            - comment: "comment"
              attribute: "attribute"
              operation: "operation"
              value: "value"
            - comment: "comment"
              attribute: "attribute"
              operation: "operation"
              value: "value"
            disableInstance: true
          displayName: "displayName"
          description: "description"
          appliesTo: "appliesTo"
          enableAutoDiscovery: true
          technology: "technology"
          published: 1
          version: 5
          tags: "tags"
          auditVersion: 5
          hasMultiInstances: true
          collectMethod: "collectMethod"
          collectInterval: 2
          name: "name"
          dataPoints:
          - alertForNoData: 7
            maxValue: "maxValue"
            dataType: 9
            postProcessorMethod: "postProcessorMethod"
            postProcessorParam: "postProcessorParam"
            maxDigits: 3
            rawDataFieldName: "rawDataFieldName"
            description: "description"
            alertClearTransitionInterval: 2
            userParam3: "userParam3"
            userParam2: "userParam2"
            type: 4
            alertExprNote: "alertExprNote"
            dataSourceId: 7
            minValue: "minValue"
            alertBody: "alertBody"
            userParam1: "userParam1"
            name: "name"
            alertSubject: "alertSubject"
            id: 1
            alertTransitionInterval: 1
            alertExpr: "alertExpr"
          - alertForNoData: 7
            maxValue: "maxValue"
            dataType: 9
            postProcessorMethod: "postProcessorMethod"
            postProcessorParam: "postProcessorParam"
            maxDigits: 3
            rawDataFieldName: "rawDataFieldName"
            description: "description"
            alertClearTransitionInterval: 2
            userParam3: "userParam3"
            userParam2: "userParam2"
            type: 4
            alertExprNote: "alertExprNote"
            dataSourceId: 7
            minValue: "minValue"
            alertBody: "alertBody"
            userParam1: "userParam1"
            name: "name"
            alertSubject: "alertSubject"
            id: 1
            alertTransitionInterval: 1
            alertExpr: "alertExpr"
          id: 1
          group: "group"
        - collectorAttribute:
            name: "name"
          autoDiscoveryConfig:
            persistentInstance: true
            scheduleInterval: 6
            deleteInactiveInstance: true
            method:
              name: "name"
            instanceAutoGroupMethod: "instanceAutoGroupMethod"
            instanceAutoGroupMethodParams: "instanceAutoGroupMethodParams"
            filters:
            - comment: "comment"
              attribute: "attribute"
              operation: "operation"
              value: "value"
            - comment: "comment"
              attribute: "attribute"
              operation: "operation"
              value: "value"
            disableInstance: true
          displayName: "displayName"
          description: "description"
          appliesTo: "appliesTo"
          enableAutoDiscovery: true
          technology: "technology"
          published: 1
          version: 5
          tags: "tags"
          auditVersion: 5
          hasMultiInstances: true
          collectMethod: "collectMethod"
          collectInterval: 2
          name: "name"
          dataPoints:
          - alertForNoData: 7
            maxValue: "maxValue"
            dataType: 9
            postProcessorMethod: "postProcessorMethod"
            postProcessorParam: "postProcessorParam"
            maxDigits: 3
            rawDataFieldName: "rawDataFieldName"
            description: "description"
            alertClearTransitionInterval: 2
            userParam3: "userParam3"
            userParam2: "userParam2"
            type: 4
            alertExprNote: "alertExprNote"
            dataSourceId: 7
            minValue: "minValue"
            alertBody: "alertBody"
            userParam1: "userParam1"
            name: "name"
            alertSubject: "alertSubject"
            id: 1
            alertTransitionInterval: 1
            alertExpr: "alertExpr"
          - alertForNoData: 7
            maxValue: "maxValue"
            dataType: 9
            postProcessorMethod: "postProcessorMethod"
            postProcessorParam: "postProcessorParam"
            maxDigits: 3
            rawDataFieldName: "rawDataFieldName"
            description: "description"
            alertClearTransitionInterval: 2
            userParam3: "userParam3"
            userParam2: "userParam2"
            type: 4
            alertExprNote: "alertExprNote"
            dataSourceId: 7
            minValue: "minValue"
            alertBody: "alertBody"
            userParam1: "userParam1"
            name: "name"
            alertSubject: "alertSubject"
            id: 1
            alertTransitionInterval: 1
            alertExpr: "alertExpr"
          id: 1
          group: "group"
      errmsg: "errmsg"
      status: 6
  DeviceGroupDatasourceAlertConfigResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/DeviceGroupDataSourceAlertConfig"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        datasourceType: "datasourceType"
        dpConfig:
        - globalAlertExpr: "globalAlertExpr"
          dataPointName: "dataPointName"
          dataPointId: 0
          disableAlerting: true
          alertExprNote: "alertExprNote"
          alertExpr: "alertExpr"
          dataPointDescription: "dataPointDescription"
        - globalAlertExpr: "globalAlertExpr"
          dataPointName: "dataPointName"
          dataPointId: 0
          disableAlerting: true
          alertExprNote: "alertExprNote"
          alertExpr: "alertExpr"
          dataPointDescription: "dataPointDescription"
      errmsg: "errmsg"
      status: 6
  CIMCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "fields"
      - "namespace"
      - "queryClass"
      - "queryValue"
      properties:
        ip:
          type: "string"
          readOnly: true
        namespace:
          type: "string"
        queryClass:
          type: "string"
        queryIndex:
          type: "string"
        queryValue:
          type: "string"
        fields:
          type: "array"
          items:
            $ref: "#/definitions/DataSourceAttribute"
    x-discriminator-value: "cim"
  AwsEC2ReservedInstanceCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "period"
      properties:
        period:
          type: "integer"
          format: "int32"
  ScriptAutoDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
      required:
      - "groovyScript"
      - "linuxCmdline"
      - "linuxScript"
      - "type"
      - "winCmdline"
      - "winScript"
      properties:
        winScript:
          type: "string"
        groovyScript:
          type: "string"
        type:
          type: "string"
        linuxCmdline:
          type: "string"
        linuxScript:
          type: "string"
        winCmdline:
          type: "string"
    x-discriminator-value: "ad_script"
  DummyAutoDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
      required:
      - "generateCount"
      - "getGenerateCount2"
      - "maxNumber"
      properties:
        generateCount:
          type: "integer"
          format: "int32"
        getGenerateCount2:
          type: "integer"
          format: "int32"
        maxNumber:
          type: "integer"
          format: "int32"
    x-discriminator-value: "ad_dummy"
  GraphPlotLine:
    type: "object"
    properties:
      colorName:
        type: "string"
        readOnly: true
      std:
        type: "number"
        format: "double"
        readOnly: true
      visible:
        type: "boolean"
        readOnly: true
      color:
        type: "string"
        readOnly: true
      data:
        type: "array"
        readOnly: true
        items:
          type: "number"
          format: "double"
      max:
        type: "number"
        format: "double"
        readOnly: true
      legend:
        type: "string"
        readOnly: true
      description:
        type: "string"
        readOnly: true
      label:
        type: "string"
        readOnly: true
      type:
        type: "string"
        readOnly: true
      min:
        type: "number"
        format: "double"
        readOnly: true
      avg:
        type: "number"
        format: "double"
        readOnly: true
      decimal:
        type: "integer"
        format: "int32"
        readOnly: true
      useYMax:
        type: "boolean"
        readOnly: true
    example:
      colorName: "colorName"
      std: 2.3021358869347655
      visible: true
      color: "color"
      data:
      - 7.061401241503109
      - 7.061401241503109
      max: 9.301444243932576
      legend: "legend"
      description: "description"
      label: "label"
      type: "type"
      min: 3.616076749251911
      avg: 2.027123023002322
      decimal: 4
      useYMax: true
  ApiTokenPagination:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      searchId:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/DeviceDatasourceInstanceConfigPaginationResponse"
    example:
      total: 0
      searchId: "searchId"
      items:
      - accessId: "accessId"
        adminName: "adminName"
        note: "note"
        lastUsedOn: 0
        accessKey: "accessKey"
        createdBy: "createdBy"
        roles:
        - "roles"
        - "roles"
        adminId: 6
        id: 1
        createdOn: 5
        status: 5
      - accessId: "accessId"
        adminName: "adminName"
        note: "note"
        lastUsedOn: 0
        accessKey: "accessKey"
        createdBy: "createdBy"
        roles:
        - "roles"
        - "roles"
        adminId: 6
        id: 1
        createdOn: 5
        status: 5
  AwsEC2ReservedInstanceDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
      required:
      - "instanceName"
      properties:
        instanceName:
          type: "string"
  ServiceNOCWidget:
    allOf:
    - $ref: "#/definitions/WidgetBaseVersion1"
    - type: "object"
      required:
      - "dashboardId"
      - "items"
      - "name"
      - "type"
      properties:
        rowSpan:
          type: "integer"
          format: "int32"
        lastUpdatedBy:
          type: "string"
          readOnly: true
        ackChecked:
          type: "boolean"
        userPermission:
          type: "string"
          readOnly: true
        colSpan:
          type: "integer"
          format: "int32"
        displayWarnAlert:
          type: "boolean"
        description:
          type: "string"
        type:
          type: "string"
        displayErrorAlert:
          type: "boolean"
        columnIdx:
          type: "integer"
          format: "int32"
        dashboardId:
          type: "integer"
          format: "int32"
        extra:
          type: "string"
        displayColumn:
          type: "integer"
          format: "int32"
        name:
          type: "string"
        displayCriticalAlert:
          type: "boolean"
        lastUpdatedOn:
          type: "integer"
          format: "int64"
          readOnly: true
        theme:
          type: "string"
        interval:
          type: "integer"
          format: "int32"
        sortBy:
          type: "string"
        id:
          type: "integer"
          format: "int32"
        timescale:
          type: "string"
        sdtChecked:
          type: "boolean"
        items:
          type: "array"
          items:
            $ref: "#/definitions/ServiceNOCItem"
        order:
          type: "integer"
          format: "int32"
    x-discriminator-value: "servicenoc"
  HostMetricsReport:
    allOf:
    - $ref: "#/definitions/ReportBase"
    - type: "object"
      required:
      - "hostsValType"
      properties:
        sortedBy:
          type: "string"
        hostsValType:
          type: "string"
        dateRange:
          type: "string"
        hostsVal:
          type: "string"
        top10Only:
          type: "boolean"
        columns:
          type: "array"
          items:
            $ref: "#/definitions/RestDynamicColumn"
        rowFormat:
          type: "integer"
          format: "int32"
        metrics:
          type: "array"
          items:
            $ref: "#/definitions/Metric"
    x-discriminator-value: "host metric trends"
  TableWidget:
    allOf:
    - $ref: "#/definitions/WidgetBaseVersion1"
    - type: "object"
      required:
      - "columns"
      - "dashboardId"
      - "name"
      - "rows"
      - "type"
      properties:
        rowSpan:
          type: "integer"
          format: "int32"
        lastUpdatedBy:
          type: "string"
          readOnly: true
        userPermission:
          type: "string"
          readOnly: true
        colSpan:
          type: "integer"
          format: "int32"
        columns:
          type: "array"
          items:
            $ref: "#/definitions/TableColumn"
        description:
          type: "string"
        forecast:
          $ref: "#/definitions/ForecastConfiguration"
        type:
          type: "string"
        rows:
          type: "array"
          items:
            $ref: "#/definitions/TableRow"
        columnIdx:
          type: "integer"
          format: "int32"
        dashboardId:
          type: "integer"
          format: "int32"
        extra:
          type: "string"
        name:
          type: "string"
        lastUpdatedOn:
          type: "integer"
          format: "int64"
          readOnly: true
        theme:
          type: "string"
        interval:
          type: "integer"
          format: "int32"
        id:
          type: "integer"
          format: "int32"
        timescale:
          type: "string"
        order:
          type: "integer"
          format: "int32"
    x-discriminator-value: "table"
  UnmonitoredDevicePagination:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      searchId:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/UnmonitoredDevices"
    example:
      total: 0
      searchId: "searchId"
      items:
      - deviceType: "deviceType"
        nspId: 6
        forwardIp: "forwardIp"
        endDate: "endDate"
        ip: "ip"
        dns: "dns"
        collectorId: 1
        ports: "ports"
        nspName: "nspName"
        deviceStatus: "deviceStatus"
        manufacturer: "manufacturer"
        collectorDescription: "collectorDescription"
        displayAs: "displayAs"
        sysName: "sysName"
        nseId: 5
        id: 5
        endTimestamp: 2
        status: "status"
        nseScanId: "nseScanId"
      - deviceType: "deviceType"
        nspId: 6
        forwardIp: "forwardIp"
        endDate: "endDate"
        ip: "ip"
        dns: "dns"
        collectorId: 1
        ports: "ports"
        nspName: "nspName"
        deviceStatus: "deviceStatus"
        manufacturer: "manufacturer"
        collectorDescription: "collectorDescription"
        displayAs: "displayAs"
        sysName: "sysName"
        nseId: 5
        id: 5
        endTimestamp: 2
        status: "status"
        nseScanId: "nseScanId"
  JMXAutoDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
      required:
      - "path"
      - "ports"
      - "url"
      properties:
        path:
          type: "string"
        ports:
          type: "string"
        url:
          type: "string"
    x-discriminator-value: "ad_jmx"
  JMXCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "queryUrl"
      properties:
        queryUrl:
          type: "string"
        ip:
          type: "string"
          readOnly: true
    x-discriminator-value: "jmx"
  DevicePagination:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      searchId:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/Device"
    example:
      total: 0
      searchId: "searchId"
      items:
      - alertStatus: "alertStatus"
        netflowCollectorGroupName: "netflowCollectorGroupName"
        azureState: 6
        relatedDeviceId: 1
        displayName: "displayName"
        link: "link"
        awsState: 5
        description: "description"
        disableAlerting: true
        netflowCollectorGroupId: 5
        createdOn: 2
        ancestorHasDisabledLogicModule: true
        systemProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        hostStatus: "hostStatus"
        autoPropsUpdatedOn: 7
        scanConfigId: 9
        inheritedProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        id: 3
        enableNetflow: true
        lastDataTime: 2
        alertStatusPriority: 4
        alertDisableStatus: "alertDisableStatus"
        hostGroupIds: "hostGroupIds"
        upTimeInSeconds: 7
        deviceType: 1
        currentCollectorId: 1
        netflowCollectorDescription: "netflowCollectorDescription"
        netflowCollectorId: 1
        userPermission: "userPermission"
        hasDisabledSubResource: true
        autoPropsAssignedOn: 6
        updatedOn: 7
        preferredCollectorGroupName: "preferredCollectorGroupName"
        sdtStatus: "sdtStatus"
        preferredCollectorGroupId: 1
        autoProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        customProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        toDeleteTimeInMs: 4
        collectorDescription: "collectorDescription"
        preferredCollectorId: 5
        lastRawdataTime: 9
        name: "name"
        alertingDisabledOn:
          userPermission: "userPermission"
          displayName: "displayName"
          id: 1
          type: "type"
        deletedTimeInMs: 9
      - alertStatus: "alertStatus"
        netflowCollectorGroupName: "netflowCollectorGroupName"
        azureState: 6
        relatedDeviceId: 1
        displayName: "displayName"
        link: "link"
        awsState: 5
        description: "description"
        disableAlerting: true
        netflowCollectorGroupId: 5
        createdOn: 2
        ancestorHasDisabledLogicModule: true
        systemProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        hostStatus: "hostStatus"
        autoPropsUpdatedOn: 7
        scanConfigId: 9
        inheritedProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        id: 3
        enableNetflow: true
        lastDataTime: 2
        alertStatusPriority: 4
        alertDisableStatus: "alertDisableStatus"
        hostGroupIds: "hostGroupIds"
        upTimeInSeconds: 7
        deviceType: 1
        currentCollectorId: 1
        netflowCollectorDescription: "netflowCollectorDescription"
        netflowCollectorId: 1
        userPermission: "userPermission"
        hasDisabledSubResource: true
        autoPropsAssignedOn: 6
        updatedOn: 7
        preferredCollectorGroupName: "preferredCollectorGroupName"
        sdtStatus: "sdtStatus"
        preferredCollectorGroupId: 1
        autoProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        customProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        toDeleteTimeInMs: 4
        collectorDescription: "collectorDescription"
        preferredCollectorId: 5
        lastRawdataTime: 9
        name: "name"
        alertingDisabledOn:
          userPermission: "userPermission"
          displayName: "displayName"
          id: 1
          type: "type"
        deletedTimeInMs: 9
  AwsEc2ServiceLimitsCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "period"
      properties:
        period:
          type: "integer"
          format: "int32"
  WidgetPagination:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      searchId:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/WidgetBaseVersion1"
    example:
      total: 0
      searchId: "searchId"
      items:
      - {}
      - {}
  WMICollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "methodInputs"
      - "methodName"
      - "namespace"
      - "queryClass"
      - "queryIndex"
      - "queryValue"
      - "targetPath"
      - "type"
      properties:
        methodInputs:
          type: "string"
        ip:
          type: "string"
          readOnly: true
        namespace:
          type: "string"
        methodName:
          type: "string"
        targetPath:
          type: "string"
        queryClass:
          type: "string"
        queryIndex:
          type: "string"
        queryValue:
          type: "string"
        type:
          type: "string"
    x-discriminator-value: "wmi"
  PingService:
    allOf:
    - $ref: "#/definitions/ServiceBaseVersion1"
    - type: "object"
      required:
      - "host"
      - "name"
      - "type"
      properties:
        alertStatus:
          type: "string"
          readOnly: true
        testLocation:
          type: "string"
        overallAlertLevel:
          type: "string"
        pollingInterval:
          type: "integer"
          format: "int32"
        description:
          type: "string"
        disableAlerting:
          type: "boolean"
        timeoutInMSPktsNotReceive:
          type: "integer"
          format: "int64"
        type:
          type: "string"
        stopMonitoringByFolder:
          type: "boolean"
          readOnly: true
        serviceStatus:
          type: "string"
        host:
          type: "string"
        id:
          type: "integer"
          format: "int32"
          readOnly: true
        alertStatusPriority:
          type: "integer"
          format: "int32"
          readOnly: true
        alertDisableStatus:
          type: "string"
          readOnly: true
        serviceFolderId:
          type: "integer"
          format: "int32"
        serviceProperties:
          type: "array"
          items:
            $ref: "#/definitions/NameAndValue"
        percentPktsNotReceiveInTime:
          type: "integer"
          format: "int32"
        stopMonitoring:
          type: "boolean"
        userPermission:
          type: "string"
        count:
          type: "integer"
          format: "int32"
        individualSmAlertEnable:
          type: "boolean"
        checkpoints:
          type: "array"
          items:
            $ref: "#/definitions/ServiceCheckPoint"
        sdtStatus:
          type: "string"
          readOnly: true
        transition:
          type: "integer"
          format: "int32"
        globalSmAlertCond:
          type: "integer"
          format: "int32"
        isInternal:
          type: "boolean"
        collectors:
          type: "array"
          readOnly: true
          items:
            $ref: "#/definitions/ServiceCollector"
        name:
          type: "string"
        useDefaultLocationSetting:
          type: "boolean"
        useDefaultAlertSetting:
          type: "boolean"
        individualAlertLevel:
          type: "string"
    x-discriminator-value: "ping"
  AwsS3CollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
    x-discriminator-value: "awss3"
  NetflowApplication:
    allOf:
    - $ref: "#/definitions/NetflowDataBase"
    - type: "object"
      properties:
        firstEpochInSec:
          type: "integer"
          format: "int64"
          readOnly: true
        protocol:
          type: "string"
          readOnly: true
        sourceMBytes:
          type: "number"
          format: "double"
          readOnly: true
        percentUsage:
          type: "number"
          format: "double"
          readOnly: true
        port:
          type: "integer"
          format: "int32"
          readOnly: true
        lastEpochInSec:
          type: "integer"
          format: "int64"
          readOnly: true
        destinationMBytes:
          type: "number"
          format: "double"
          readOnly: true
        IP:
          type: "string"
          readOnly: true
        usage:
          type: "number"
          format: "double"
          readOnly: true
        dns:
          type: "string"
          readOnly: true
        flowCount:
          type: "integer"
          format: "int64"
          readOnly: true
        clientCount:
          type: "integer"
          format: "int32"
          readOnly: true
    x-discriminator-value: "application"
  DataPumpCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
    x-discriminator-value: "datapump"
  HttpAutoDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
      required:
      - "caseSensitive"
      - "followRedirect"
      - "ports"
      - "regex"
      - "uri"
      - "useSSL"
      properties:
        regex:
          type: "string"
        caseSensitive:
          type: "boolean"
        followRedirect:
          type: "boolean"
        ports:
          type: "string"
        uri:
          type: "string"
        useSSL:
          type: "boolean"
    x-discriminator-value: "ad_http"
  DaysUntilAlert:
    type: "object"
    properties:
      severity:
        type: "string"
      forecastDay:
        type: "integer"
        format: "int32"
      forecastPeriodInDays:
        type: "integer"
        format: "int32"
      isWaitingForecastResults:
        type: "boolean"
  AzureServiceRegionDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
  UnmonitoredDevices:
    type: "object"
    properties:
      deviceType:
        type: "string"
        readOnly: true
      nspId:
        type: "integer"
        format: "int32"
        readOnly: true
      forwardIp:
        type: "string"
        readOnly: true
      endDate:
        type: "string"
        readOnly: true
      ip:
        type: "string"
        readOnly: true
      dns:
        type: "string"
        readOnly: true
      collectorId:
        type: "integer"
        format: "int32"
        readOnly: true
      ports:
        type: "string"
        readOnly: true
      nspName:
        type: "string"
        readOnly: true
      deviceStatus:
        type: "string"
        readOnly: true
      manufacturer:
        type: "string"
        readOnly: true
      collectorDescription:
        type: "string"
        readOnly: true
      displayAs:
        type: "string"
        readOnly: true
      sysName:
        type: "string"
        readOnly: true
      nseId:
        type: "integer"
        format: "int32"
        readOnly: true
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      endTimestamp:
        type: "integer"
        format: "int64"
        readOnly: true
      status:
        type: "string"
        readOnly: true
      nseScanId:
        type: "string"
        readOnly: true
    example:
      deviceType: "deviceType"
      nspId: 6
      forwardIp: "forwardIp"
      endDate: "endDate"
      ip: "ip"
      dns: "dns"
      collectorId: 1
      ports: "ports"
      nspName: "nspName"
      deviceStatus: "deviceStatus"
      manufacturer: "manufacturer"
      collectorDescription: "collectorDescription"
      displayAs: "displayAs"
      sysName: "sysName"
      nseId: 5
      id: 5
      endTimestamp: 2
      status: "status"
      nseScanId: "nseScanId"
  ServiceGroupData:
    type: "object"
    properties:
      serviceGroupName:
        type: "string"
      chooseAll:
        type: "boolean"
      serviceGroupId:
        type: "integer"
        format: "int32"
      services:
        type: "array"
        items:
          $ref: "#/definitions/IdAndName"
  EscalationChainResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/EscalatingChain"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        inAlerting: true
        throttlingAlerts: 6
        enableThrottling: true
        destinations:
        - period:
            weekDays:
            - 1
            - 1
            startMinutes: 5
            endMinutes: 5
          stages:
          - - method: "method"
              contact: "contact"
              type: "type"
              addr: "addr"
            - method: "method"
              contact: "contact"
              type: "type"
              addr: "addr"
          - - method: "method"
              contact: "contact"
              type: "type"
              addr: "addr"
            - method: "method"
              contact: "contact"
              type: "type"
              addr: "addr"
          type: "type"
        - period:
            weekDays:
            - 1
            - 1
            startMinutes: 5
            endMinutes: 5
          stages:
          - - method: "method"
              contact: "contact"
              type: "type"
              addr: "addr"
            - method: "method"
              contact: "contact"
              type: "type"
              addr: "addr"
          - - method: "method"
              contact: "contact"
              type: "type"
              addr: "addr"
            - method: "method"
              contact: "contact"
              type: "type"
              addr: "addr"
          type: "type"
        name: "name"
        description: "description"
        id: 2
        ccDestinations:
        - method: "method"
          contact: "contact"
          type: "type"
          addr: "addr"
        - method: "method"
          contact: "contact"
          type: "type"
          addr: "addr"
        throttlingPeriod: 7
      errmsg: "errmsg"
      status: 0
  PropertyPaginationResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/PropertyPagination"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        total: 0
        searchId: "searchId"
        items:
        - inheritList:
          - fullpath: "fullpath"
            id: 6
            type: "type"
            value: "value"
          - fullpath: "fullpath"
            id: 6
            type: "type"
            value: "value"
          name: "name"
          type: "type"
          value: "value"
        - inheritList:
          - fullpath: "fullpath"
            id: 6
            type: "type"
            value: "value"
          - fullpath: "fullpath"
            id: 6
            type: "type"
            value: "value"
          name: "name"
          type: "type"
          value: "value"
      errmsg: "errmsg"
      status: 1
  AuditLogReport:
    allOf:
    - $ref: "#/definitions/ReportBase"
    - type: "object"
      properties:
        filter:
          type: "string"
        sortedBy:
          type: "string"
        dateRange:
          type: "string"
        columns:
          type: "array"
          items:
            $ref: "#/definitions/RestDynamicColumn"
        username:
          type: "string"
    x-discriminator-value: "audit log"
  Admin:
    type: "object"
    required:
    - "email"
    - "password"
    - "roles"
    - "username"
    properties:
      lastName:
        type: "string"
      note:
        type: "string"
      viewPermission:
        type: "string"
        description: "this value should be a JSON String, for example:{\"Alerts\"\
          :true}"
      timezone:
        type: "string"
      roles:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/Role"
      lastLoginOn:
        type: "integer"
        format: "int64"
        readOnly: true
      lastActionOnLocal:
        type: "string"
        readOnly: true
      smsEmailFormat:
        type: "string"
      apionly:
        type: "boolean"
      apiTokens:
        type: "array"
        items:
          $ref: "#/definitions/DeviceDatasourceInstanceConfigPaginationResponse"
      password:
        type: "string"
      lastAction:
        type: "string"
        readOnly: true
      skilljarEmail:
        type: "string"
        readOnly: true
      lastActionOn:
        type: "integer"
        format: "int64"
        readOnly: true
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      email:
        type: "string"
      contactMethod:
        type: "string"
      acceptEULAOn:
        type: "integer"
        format: "int64"
        readOnly: true
      setupWizardStatus:
        type: "string"
        readOnly: true
      smsEmail:
        type: "string"
      twoFAEnabled:
        type: "boolean"
      firstName:
        type: "string"
      phone:
        type: "string"
      createdBy:
        type: "string"
      forcePasswordChange:
        type: "boolean"
      acceptEULA:
        type: "boolean"
      username:
        type: "string"
      status:
        type: "string"
    example:
      lastName: "lastName"
      note: "note"
      viewPermission: "viewPermission"
      timezone: "timezone"
      roles:
      - enableRemoteSessionInCompanyLevel: true
        customHelpLabel: "customHelpLabel"
        customHelpURL: "customHelpURL"
        privileges:
        - objectName: "objectName"
          subOperation: "subOperation"
          operation: "operation"
          objectId: "objectId"
          objectType: "objectType"
        - objectName: "objectName"
          subOperation: "subOperation"
          operation: "operation"
          objectId: "objectId"
          objectType: "objectType"
        associatedUserCount: 0
        name: "name"
        description: "description"
        id: 6
        twoFARequired: true
        requireEULA: true
        acctRequireTwoFA: true
      - enableRemoteSessionInCompanyLevel: true
        customHelpLabel: "customHelpLabel"
        customHelpURL: "customHelpURL"
        privileges:
        - objectName: "objectName"
          subOperation: "subOperation"
          operation: "operation"
          objectId: "objectId"
          objectType: "objectType"
        - objectName: "objectName"
          subOperation: "subOperation"
          operation: "operation"
          objectId: "objectId"
          objectType: "objectType"
        associatedUserCount: 0
        name: "name"
        description: "description"
        id: 6
        twoFARequired: true
        requireEULA: true
        acctRequireTwoFA: true
      lastLoginOn: 0
      lastActionOnLocal: "lastActionOnLocal"
      smsEmailFormat: "smsEmailFormat"
      apionly: true
      apiTokens:
      - accessId: "accessId"
        adminName: "adminName"
        note: "note"
        lastUsedOn: 0
        accessKey: "accessKey"
        createdBy: "createdBy"
        roles:
        - "roles"
        - "roles"
        adminId: 6
        id: 1
        createdOn: 5
        status: 5
      - accessId: "accessId"
        adminName: "adminName"
        note: "note"
        lastUsedOn: 0
        accessKey: "accessKey"
        createdBy: "createdBy"
        roles:
        - "roles"
        - "roles"
        adminId: 6
        id: 1
        createdOn: 5
        status: 5
      password: "password"
      lastAction: "lastAction"
      skilljarEmail: "skilljarEmail"
      lastActionOn: 6
      id: 1
      email: "email"
      contactMethod: "contactMethod"
      acceptEULAOn: 5
      setupWizardStatus: "setupWizardStatus"
      smsEmail: "smsEmail"
      twoFAEnabled: true
      firstName: "firstName"
      phone: "phone"
      createdBy: "createdBy"
      forcePasswordChange: true
      acceptEULA: true
      username: "username"
      status: "status"
  MongoAutoDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
      required:
      - "listDB"
      - "ports"
      properties:
        listDB:
          type: "boolean"
        ports:
          type: "string"
    x-discriminator-value: "ad_mongo"
  BatchJobExecutionItem:
    type: "object"
    properties:
      startedOnLocal:
        type: "string"
        readOnly: true
      finishedOnLocal:
        type: "string"
        readOnly: true
      userData:
        type: "string"
        readOnly: true
      stdout:
        type: "string"
        readOnly: true
      bjName:
        type: "string"
        readOnly: true
      alertLevel:
        type: "integer"
        format: "int32"
        readOnly: true
      deviceBatchJobId:
        type: "integer"
        format: "int32"
        readOnly: true
      stderr:
        type: "string"
        readOnly: true
      deviceDisplayName:
        type: "string"
        readOnly: true
      cmdline:
        type: "string"
        readOnly: true
      exitCode:
        type: "integer"
        format: "int32"
        readOnly: true
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      executionNo:
        type: "integer"
        format: "int64"
        readOnly: true
      finishedOn:
        type: "integer"
        format: "int64"
        readOnly: true
      startedOn:
        type: "integer"
        format: "int64"
        readOnly: true
  ColumnHeader:
    type: "object"
    properties:
      needForecast:
        type: "boolean"
        readOnly: true
      name:
        type: "string"
        readOnly: true
  DeviceGroupResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/DeviceGroup"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        fullPath: "fullPath"
        alertStatus: "alertStatus"
        groupType: "groupType"
        numOfAWSDevices: 0
        description: "description"
        appliesTo: "appliesTo"
        disableAlerting: true
        autoVisualResult:
          autoDashboardResult:
            createdDashboardGroup:
              template: {}
              fullPath: "fullPath"
              userPermission: "userPermission"
              widgetTokens:
              - inheritList:
                - fullpath: "fullpath"
                  value: "value"
                - fullpath: "fullpath"
                  value: "value"
                name: "name"
                type: "type"
                value: "value"
              - inheritList:
                - fullpath: "fullpath"
                  value: "value"
                - fullpath: "fullpath"
                  value: "value"
                name: "name"
                type: "type"
                value: "value"
              name: "name"
              numOfDirectSubGroups: 0
              numOfDashboards: 6
              description: "description"
              id: 1
              dashboards:
              - userPermission: "userPermission"
                name: "name"
                sharable: true
                id: 5
              - userPermission: "userPermission"
                name: "name"
                sharable: true
                id: 5
              parentId: 5
              numOfDirectDashboards: 2
            createdDashboards:
            - owner: "owner"
              template: {}
              userPermission: "userPermission"
              groupId: 6
              fullName: "fullName"
              description: "description"
              sharable: true
              widgetsOrder: "widgetsOrder"
              groupName: "groupName"
              widgetTokens:
              - inheritList:
                - fullpath: "fullpath"
                  value: "value"
                - fullpath: "fullpath"
                  value: "value"
                name: "name"
                type: "type"
                value: "value"
              - inheritList:
                - fullpath: "fullpath"
                  value: "value"
                - fullpath: "fullpath"
                  value: "value"
                name: "name"
                type: "type"
                value: "value"
              name: "name"
              id: 1
              groupFullPath: "groupFullPath"
            - owner: "owner"
              template: {}
              userPermission: "userPermission"
              groupId: 6
              fullName: "fullName"
              description: "description"
              sharable: true
              widgetsOrder: "widgetsOrder"
              groupName: "groupName"
              widgetTokens:
              - inheritList:
                - fullpath: "fullpath"
                  value: "value"
                - fullpath: "fullpath"
                  value: "value"
                name: "name"
                type: "type"
                value: "value"
              - inheritList:
                - fullpath: "fullpath"
                  value: "value"
                - fullpath: "fullpath"
                  value: "value"
                name: "name"
                type: "type"
                value: "value"
              name: "name"
              id: 1
              groupFullPath: "groupFullPath"
            errMsg: "errMsg"
          autoReportResult:
            createdReports:
            - lastmodifyUserId: 6
              delivery: "delivery"
              userPermission: "userPermission"
              lastGenerateOn: 1
              reportLinkNum: 5
              groupId: 5
              format: "format"
              description: "description"
              lastGenerateSize: 2
              customReportTypeId: 7
              type: "type"
              lastGeneratePages: 9
              schedule: "schedule"
              recipients:
              - additionInfo: "additionInfo"
                method: "method"
                type: "type"
                addr: "addr"
              - additionInfo: "additionInfo"
                method: "method"
                type: "type"
                addr: "addr"
              customReportTypeName: "customReportTypeName"
              name: "name"
              enableViewAsOtherUser: true
              lastmodifyUserName: "lastmodifyUserName"
              id: 3
            - lastmodifyUserId: 6
              delivery: "delivery"
              userPermission: "userPermission"
              lastGenerateOn: 1
              reportLinkNum: 5
              groupId: 5
              format: "format"
              description: "description"
              lastGenerateSize: 2
              customReportTypeId: 7
              type: "type"
              lastGeneratePages: 9
              schedule: "schedule"
              recipients:
              - additionInfo: "additionInfo"
                method: "method"
                type: "type"
                addr: "addr"
              - additionInfo: "additionInfo"
                method: "method"
                type: "type"
                addr: "addr"
              customReportTypeName: "customReportTypeName"
              name: "name"
              enableViewAsOtherUser: true
              lastmodifyUserName: "lastmodifyUserName"
              id: 3
            errMsg: "errMsg"
            createdReportGroup:
              userPermission: "userPermission"
              name: "name"
              description: "description"
              id: 5
              reportsCount: 5
          errMsg: "errMsg"
        awsRegionsInfo: "awsRegionsInfo"
        createdOn: 2
        hasNetflowEnabledDevices: true
        numOfAzureDevices: 7
        clusterAlertStatusPriority: 9
        defaultCollectorDescription: "defaultCollectorDescription"
        defaultCollectorId: 3
        awsTestResult:
          noPermissionServices:
          - "noPermissionServices"
          - "noPermissionServices"
          detailLink: "detailLink"
          nonPermissionErrors:
          - "nonPermissionErrors"
          - "nonPermissionErrors"
        extra: "extra"
        numOfDirectSubGroups: 2
        subGroups:
        - fullPath: "fullPath"
          groupType: "groupType"
          numOfHosts: 4
          userPermission: "userPermission"
          name: "name"
          numOfDirectSubGroups: 7
          description: "description"
          appliesTo: "appliesTo"
          numOfDirectDevices: 1
          id: 1
          awsRegionsInfo: "awsRegionsInfo"
          azureRegionsInfo: "azureRegionsInfo"
        - fullPath: "fullPath"
          groupType: "groupType"
          numOfHosts: 4
          userPermission: "userPermission"
          name: "name"
          numOfDirectSubGroups: 7
          description: "description"
          appliesTo: "appliesTo"
          numOfDirectDevices: 1
          id: 1
          awsRegionsInfo: "awsRegionsInfo"
          azureRegionsInfo: "azureRegionsInfo"
        numOfDirectDevices: 1
        id: 6
        enableNetflow: true
        alertStatusPriority: 7
        alertDisableStatus: "alertDisableStatus"
        azureTestResultCode: 1
        effectiveAlertEnabled: true
        clusterAlertStatus: "clusterAlertStatus"
        userPermission: "userPermission"
        groupStatus: "groupStatus"
        azureTestResult:
          noPermissionServices: {}
          detailLink: "detailLink"
        sdtStatus: "sdtStatus"
        parentId: 4
        awsTestResultCode: 5
        customProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        numOfHosts: 9
        name: "name"
        alertingDisabledOn:
          userPermission: "userPermission"
          displayName: "displayName"
          id: 1
          type: "type"
        azureRegionsInfo: "azureRegionsInfo"
      errmsg: "errmsg"
      status: 9
  ServiceNOCItem:
    type: "object"
    required:
    - "name"
    - "serviceGroupName"
    - "serviceName"
    properties:
      serviceGroupName:
        type: "string"
      name:
        type: "string"
      groupBy:
        type: "string"
      serviceName:
        type: "string"
  BatchJobWidget:
    allOf:
    - $ref: "#/definitions/WidgetBaseVersion1"
    - type: "object"
      required:
      - "dashboardId"
      - "name"
      - "type"
      properties:
        rowSpan:
          type: "integer"
          format: "int32"
        lastUpdatedBy:
          type: "string"
          readOnly: true
        userPermission:
          type: "string"
          readOnly: true
        batchJobId:
          type: "integer"
          format: "int32"
        colSpan:
          type: "integer"
          format: "int32"
        description:
          type: "string"
        type:
          type: "string"
        batchJobName:
          type: "string"
        deviceDisplayName:
          type: "string"
        groupDisplayName:
          type: "string"
        columnIdx:
          type: "integer"
          format: "int32"
        dashboardId:
          type: "integer"
          format: "int32"
        extra:
          type: "string"
        name:
          type: "string"
        lastUpdatedOn:
          type: "integer"
          format: "int64"
          readOnly: true
        theme:
          type: "string"
        interval:
          type: "integer"
          format: "int32"
        id:
          type: "integer"
          format: "int32"
        timescale:
          type: "string"
        order:
          type: "integer"
          format: "int32"
    x-discriminator-value: "batchjob"
  RestAutoVisualResult:
    type: "object"
    properties:
      autoDashboardResult:
        $ref: "#/definitions/RestAutoDashboardResult"
      autoReportResult:
        $ref: "#/definitions/RestAutoReportResult"
      errMsg:
        type: "string"
    example:
      autoDashboardResult:
        createdDashboardGroup:
          template: {}
          fullPath: "fullPath"
          userPermission: "userPermission"
          widgetTokens:
          - inheritList:
            - fullpath: "fullpath"
              value: "value"
            - fullpath: "fullpath"
              value: "value"
            name: "name"
            type: "type"
            value: "value"
          - inheritList:
            - fullpath: "fullpath"
              value: "value"
            - fullpath: "fullpath"
              value: "value"
            name: "name"
            type: "type"
            value: "value"
          name: "name"
          numOfDirectSubGroups: 0
          numOfDashboards: 6
          description: "description"
          id: 1
          dashboards:
          - userPermission: "userPermission"
            name: "name"
            sharable: true
            id: 5
          - userPermission: "userPermission"
            name: "name"
            sharable: true
            id: 5
          parentId: 5
          numOfDirectDashboards: 2
        createdDashboards:
        - owner: "owner"
          template: {}
          userPermission: "userPermission"
          groupId: 6
          fullName: "fullName"
          description: "description"
          sharable: true
          widgetsOrder: "widgetsOrder"
          groupName: "groupName"
          widgetTokens:
          - inheritList:
            - fullpath: "fullpath"
              value: "value"
            - fullpath: "fullpath"
              value: "value"
            name: "name"
            type: "type"
            value: "value"
          - inheritList:
            - fullpath: "fullpath"
              value: "value"
            - fullpath: "fullpath"
              value: "value"
            name: "name"
            type: "type"
            value: "value"
          name: "name"
          id: 1
          groupFullPath: "groupFullPath"
        - owner: "owner"
          template: {}
          userPermission: "userPermission"
          groupId: 6
          fullName: "fullName"
          description: "description"
          sharable: true
          widgetsOrder: "widgetsOrder"
          groupName: "groupName"
          widgetTokens:
          - inheritList:
            - fullpath: "fullpath"
              value: "value"
            - fullpath: "fullpath"
              value: "value"
            name: "name"
            type: "type"
            value: "value"
          - inheritList:
            - fullpath: "fullpath"
              value: "value"
            - fullpath: "fullpath"
              value: "value"
            name: "name"
            type: "type"
            value: "value"
          name: "name"
          id: 1
          groupFullPath: "groupFullPath"
        errMsg: "errMsg"
      autoReportResult:
        createdReports:
        - lastmodifyUserId: 6
          delivery: "delivery"
          userPermission: "userPermission"
          lastGenerateOn: 1
          reportLinkNum: 5
          groupId: 5
          format: "format"
          description: "description"
          lastGenerateSize: 2
          customReportTypeId: 7
          type: "type"
          lastGeneratePages: 9
          schedule: "schedule"
          recipients:
          - additionInfo: "additionInfo"
            method: "method"
            type: "type"
            addr: "addr"
          - additionInfo: "additionInfo"
            method: "method"
            type: "type"
            addr: "addr"
          customReportTypeName: "customReportTypeName"
          name: "name"
          enableViewAsOtherUser: true
          lastmodifyUserName: "lastmodifyUserName"
          id: 3
        - lastmodifyUserId: 6
          delivery: "delivery"
          userPermission: "userPermission"
          lastGenerateOn: 1
          reportLinkNum: 5
          groupId: 5
          format: "format"
          description: "description"
          lastGenerateSize: 2
          customReportTypeId: 7
          type: "type"
          lastGeneratePages: 9
          schedule: "schedule"
          recipients:
          - additionInfo: "additionInfo"
            method: "method"
            type: "type"
            addr: "addr"
          - additionInfo: "additionInfo"
            method: "method"
            type: "type"
            addr: "addr"
          customReportTypeName: "customReportTypeName"
          name: "name"
          enableViewAsOtherUser: true
          lastmodifyUserName: "lastmodifyUserName"
          id: 3
        errMsg: "errMsg"
        createdReportGroup:
          userPermission: "userPermission"
          name: "name"
          description: "description"
          id: 5
          reportsCount: 5
      errMsg: "errMsg"
  SDTBase:
    type: "object"
    required:
    - "type"
    properties:
      endDateTimeOnLocal:
        type: "string"
        readOnly: true
      sdtType:
        type: "integer"
        format: "int32"
      monthDay:
        type: "integer"
        format: "int32"
      weekOfMonth:
        type: "string"
      admin:
        type: "string"
        readOnly: true
      endDateTime:
        type: "integer"
        format: "int64"
      type:
        type: "string"
      isEffective:
        type: "boolean"
        readOnly: true
      minute:
        type: "integer"
        format: "int32"
      duration:
        type: "integer"
        format: "int32"
      endHour:
        type: "integer"
        format: "int32"
      startDateTime:
        type: "integer"
        format: "int64"
      hour:
        type: "integer"
        format: "int32"
      startDateTimeOnLocal:
        type: "string"
        readOnly: true
      weekDay:
        type: "integer"
        format: "int32"
      comment:
        type: "string"
      id:
        type: "string"
        readOnly: true
      endMinute:
        type: "integer"
        format: "int32"
    example:
      endDateTimeOnLocal: "endDateTimeOnLocal"
      sdtType: 6
      monthDay: 1
      weekOfMonth: "weekOfMonth"
      admin: "admin"
      endDateTime: 5
      type: "type"
      isEffective: true
      minute: 5
      duration: 2
      endHour: 7
      startDateTime: 9
      hour: 3
      startDateTimeOnLocal: "startDateTimeOnLocal"
      weekDay: 2
      comment: "comment"
      id: "id"
      endMinute: 4
  SNMPCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      properties:
        ip:
          type: "string"
          readOnly: true
    x-discriminator-value: "snmp"
  Alert:
    type: "object"
    properties:
      resourceId:
        type: "integer"
        format: "int32"
        readOnly: true
      instanceName:
        type: "string"
        readOnly: true
      monitorObjectId:
        type: "integer"
        format: "int32"
        readOnly: true
      endEpoch:
        type: "integer"
        format: "int64"
        readOnly: true
      rule:
        type: "string"
        readOnly: true
      threshold:
        type: "string"
        readOnly: true
      type:
        type: "string"
        readOnly: true
      startEpoch:
        type: "integer"
        format: "int64"
        readOnly: true
      internalId:
        type: "string"
        readOnly: true
      ackComment:
        type: "string"
        readOnly: true
      monitorObjectName:
        type: "string"
        readOnly: true
      dataPointName:
        type: "string"
        readOnly: true
      instanceId:
        type: "integer"
        format: "int32"
        readOnly: true
      dataPointId:
        type: "integer"
        format: "int32"
        readOnly: true
      nextRecipient:
        type: "integer"
        format: "int32"
        readOnly: true
      id:
        type: "string"
        readOnly: true
      detailMessage:
        type: "string"
        description: "This is a JSON string"
        readOnly: true
      ruleId:
        type: "integer"
        format: "int32"
        readOnly: true
      alertValue:
        type: "string"
        readOnly: true
      ackedBy:
        type: "string"
        readOnly: true
      severity:
        type: "integer"
        format: "int32"
        readOnly: true
      sdted:
        type: "boolean"
        readOnly: true
      ackedEpoch:
        type: "integer"
        format: "int64"
        readOnly: true
      chain:
        type: "string"
        readOnly: true
      SDT:
        type: "string"
        description: "This is a JSON string"
        readOnly: true
      subChainId:
        type: "integer"
        format: "int32"
        readOnly: true
      receivedList:
        type: "string"
        readOnly: true
      customColumns:
        type: "string"
        description: "This is a JSON string"
        readOnly: true
      acked:
        type: "boolean"
        readOnly: true
      resourceTemplateType:
        type: "string"
        readOnly: true
      clearValue:
        type: "string"
        readOnly: true
      instanceDescription:
        type: "string"
        readOnly: true
      monitorObjectGroups:
        type: "string"
        description: "This is JSON array String"
        readOnly: true
      chainId:
        type: "integer"
        format: "int32"
        readOnly: true
      resourceTemplateId:
        type: "integer"
        format: "int32"
        readOnly: true
      cleared:
        type: "boolean"
        readOnly: true
      resourceTemplateName:
        type: "string"
        readOnly: true
    example:
      resourceId: 0
      instanceName: "instanceName"
      monitorObjectId: 6
      endEpoch: 1
      rule: "rule"
      threshold: "threshold"
      type: "type"
      startEpoch: 5
      internalId: "internalId"
      ackComment: "ackComment"
      monitorObjectName: "monitorObjectName"
      dataPointName: "dataPointName"
      instanceId: 5
      dataPointId: 2
      nextRecipient: 7
      id: "id"
      detailMessage: "detailMessage"
      ruleId: 9
      alertValue: "alertValue"
      ackedBy: "ackedBy"
      severity: 3
      sdted: true
      ackedEpoch: 2
      chain: "chain"
      SDT: "SDT"
      subChainId: 4
      receivedList: "receivedList"
      customColumns: "customColumns"
      acked: true
      resourceTemplateType: "resourceTemplateType"
      clearValue: "clearValue"
      instanceDescription: "instanceDescription"
      monitorObjectGroups: "monitorObjectGroups"
      chainId: 7
      resourceTemplateId: 1
      cleared: true
      resourceTemplateName: "resourceTemplateName"
  DashboardPaginationResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/DashboardPagination"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        total: 0
        searchId: "searchId"
        items:
        - owner: "owner"
          userPermission: "userPermission"
          groupId: 6
          fullName: "fullName"
          description: "description"
          sharable: true
          widgetsOrder: "widgetsOrder"
          widgetsConfig: "widgetsConfig"
          useDynamicWidget: true
          groupName: "groupName"
          widgetTokens:
          - inheritList:
            - fullpath: "fullpath"
              value: "value"
            - fullpath: "fullpath"
              value: "value"
            name: "name"
            type: "type"
            value: "value"
          - inheritList:
            - fullpath: "fullpath"
              value: "value"
            - fullpath: "fullpath"
              value: "value"
            name: "name"
            type: "type"
            value: "value"
          name: "name"
          id: 1
          groupFullPath: "groupFullPath"
        - owner: "owner"
          userPermission: "userPermission"
          groupId: 6
          fullName: "fullName"
          description: "description"
          sharable: true
          widgetsOrder: "widgetsOrder"
          widgetsConfig: "widgetsConfig"
          useDynamicWidget: true
          groupName: "groupName"
          widgetTokens:
          - inheritList:
            - fullpath: "fullpath"
              value: "value"
            - fullpath: "fullpath"
              value: "value"
            name: "name"
            type: "type"
            value: "value"
          - inheritList:
            - fullpath: "fullpath"
              value: "value"
            - fullpath: "fullpath"
              value: "value"
            name: "name"
            type: "type"
            value: "value"
          name: "name"
          id: 1
          groupFullPath: "groupFullPath"
      errmsg: "errmsg"
      status: 5
  Metric:
    type: "object"
    required:
    - "dataPointId"
    - "dataSourceId"
    properties:
      dataSourceId:
        type: "integer"
        format: "int32"
      dataPointName:
        type: "string"
      dataPointId:
        type: "integer"
        format: "int32"
      instances:
        type: "string"
      dataSourceFullName:
        type: "string"
        readOnly: true
  ServiceCheckpointDataResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/ServiceCheckpointRawData"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        values:
        - - 0.8008281904610115
          - 0.8008281904610115
        - - 0.8008281904610115
          - 0.8008281904610115
        time:
        - 6
        - 6
        nextPageParams: "nextPageParams"
      errmsg: "errmsg"
      status: 1
  SDTPagination:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      searchId:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/SDTBase"
    example:
      total: 0
      searchId: "searchId"
      items:
      - endDateTimeOnLocal: "endDateTimeOnLocal"
        sdtType: 6
        monthDay: 1
        weekOfMonth: "weekOfMonth"
        admin: "admin"
        endDateTime: 5
        type: "type"
        isEffective: true
        minute: 5
        duration: 2
        endHour: 7
        startDateTime: 9
        hour: 3
        startDateTimeOnLocal: "startDateTimeOnLocal"
        weekDay: 2
        comment: "comment"
        id: "id"
        endMinute: 4
      - endDateTimeOnLocal: "endDateTimeOnLocal"
        sdtType: 6
        monthDay: 1
        weekOfMonth: "weekOfMonth"
        admin: "admin"
        endDateTime: 5
        type: "type"
        isEffective: true
        minute: 5
        duration: 2
        endHour: 7
        startDateTime: 9
        hour: 3
        startDateTimeOnLocal: "startDateTimeOnLocal"
        weekDay: 2
        comment: "comment"
        id: "id"
        endMinute: 4
  NetflowDataBase:
    type: "object"
    discriminator: "dataType"
    properties:
      dataType:
        type: "string"
        readOnly: true
  OpsNoteServiceScopeV1:
    allOf:
    - $ref: "#/definitions/OpsNoteScopeVersion1"
    - type: "object"
      required:
      - "type"
      properties:
        fullPath:
          type: "string"
        groupId:
          type: "integer"
          format: "int32"
        type:
          type: "string"
        serviceId:
          type: "integer"
          format: "int32"
        serviceName:
          type: "string"
  GraphOpsNoteScope:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      type:
        type: "string"
    example:
      id: 5
      type: "type"
  OpsNote:
    type: "object"
    required:
    - "note"
    properties:
      note:
        type: "string"
      createdBy:
        type: "string"
        readOnly: true
      id:
        type: "string"
        readOnly: true
      happenOnInSec:
        type: "integer"
        format: "int64"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/OpsNoteTagBase"
    example:
      note: "note"
      createdBy: "createdBy"
      id: "id"
      happenOnInSec: 6
      tags:
      - updateOnInSec: 1
        createdOnInSec: 5
        name: "name"
        id: "id"
      - updateOnInSec: 1
        createdOnInSec: 5
        name: "name"
        id: "id"
  AlertPaginationResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/AlertPagination"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        total: 0
        searchId: "searchId"
        items:
        - resourceId: 0
          instanceName: "instanceName"
          monitorObjectId: 6
          endEpoch: 1
          rule: "rule"
          threshold: "threshold"
          type: "type"
          startEpoch: 5
          internalId: "internalId"
          ackComment: "ackComment"
          monitorObjectName: "monitorObjectName"
          dataPointName: "dataPointName"
          instanceId: 5
          dataPointId: 2
          nextRecipient: 7
          id: "id"
          detailMessage: "detailMessage"
          ruleId: 9
          alertValue: "alertValue"
          ackedBy: "ackedBy"
          severity: 3
          sdted: true
          ackedEpoch: 2
          chain: "chain"
          SDT: "SDT"
          subChainId: 4
          receivedList: "receivedList"
          customColumns: "customColumns"
          acked: true
          resourceTemplateType: "resourceTemplateType"
          clearValue: "clearValue"
          instanceDescription: "instanceDescription"
          monitorObjectGroups: "monitorObjectGroups"
          chainId: 7
          resourceTemplateId: 1
          cleared: true
          resourceTemplateName: "resourceTemplateName"
        - resourceId: 0
          instanceName: "instanceName"
          monitorObjectId: 6
          endEpoch: 1
          rule: "rule"
          threshold: "threshold"
          type: "type"
          startEpoch: 5
          internalId: "internalId"
          ackComment: "ackComment"
          monitorObjectName: "monitorObjectName"
          dataPointName: "dataPointName"
          instanceId: 5
          dataPointId: 2
          nextRecipient: 7
          id: "id"
          detailMessage: "detailMessage"
          ruleId: 9
          alertValue: "alertValue"
          ackedBy: "ackedBy"
          severity: 3
          sdted: true
          ackedEpoch: 2
          chain: "chain"
          SDT: "SDT"
          subChainId: 4
          receivedList: "receivedList"
          customColumns: "customColumns"
          acked: true
          resourceTemplateType: "resourceTemplateType"
          clearValue: "clearValue"
          instanceDescription: "instanceDescription"
          monitorObjectGroups: "monitorObjectGroups"
          chainId: 7
          resourceTemplateId: 1
          cleared: true
          resourceTemplateName: "resourceTemplateName"
      errmsg: "errmsg"
      status: 6
  ServiceGroup:
    type: "object"
    required:
    - "name"
    properties:
      alertStatus:
        type: "string"
        readOnly: true
      fullPath:
        type: "string"
        readOnly: true
      numOfServices:
        type: "integer"
        format: "int32"
        readOnly: true
      stopMonitoring:
        type: "boolean"
      hasServicesDisabled:
        type: "boolean"
        readOnly: true
      userPermission:
        type: "string"
        readOnly: true
      testLocation:
        type: "string"
      description:
        type: "string"
      disableAlerting:
        type: "boolean"
      groupStatus:
        type: "string"
        readOnly: true
      sdtStatus:
        type: "string"
        readOnly: true
      parentId:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      numOfDirectSubGroups:
        type: "integer"
        format: "int32"
        readOnly: true
      subGroups:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/GroupData"
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      alertStatusPriority:
        type: "integer"
        format: "int32"
        readOnly: true
      alertDisableStatus:
        type: "string"
        readOnly: true
      serviceProperties:
        type: "array"
        items:
          $ref: "#/definitions/NameAndValue"
      numOfDirectServices:
        type: "integer"
        format: "int32"
        readOnly: true
    example:
      alertStatus: "alertStatus"
      fullPath: "fullPath"
      numOfServices: 0
      stopMonitoring: true
      hasServicesDisabled: true
      userPermission: "userPermission"
      testLocation: "testLocation"
      description: "description"
      disableAlerting: true
      groupStatus: "groupStatus"
      sdtStatus: "sdtStatus"
      parentId: 6
      name: "name"
      numOfDirectSubGroups: 1
      subGroups:
      - alertStatus: "alertStatus"
        fullPath: "fullPath"
        stopMonitoring: true
        userPermission: "userPermission"
        name: "name"
        numOfDirectSubGroups: 5
        description: "description"
        disableAlerting: true
        id: 5
        alertDisableStatus: "alertDisableStatus"
        sdtStatus: "sdtStatus"
      - alertStatus: "alertStatus"
        fullPath: "fullPath"
        stopMonitoring: true
        userPermission: "userPermission"
        name: "name"
        numOfDirectSubGroups: 5
        description: "description"
        disableAlerting: true
        id: 5
        alertDisableStatus: "alertDisableStatus"
        sdtStatus: "sdtStatus"
      id: 2
      alertStatusPriority: 7
      alertDisableStatus: "alertDisableStatus"
      serviceProperties:
      - name: "name"
        value: "value"
      - name: "name"
        value: "value"
      numOfDirectServices: 9
  DeviceDatasourceInstanceResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/DeviceDataSourceInstance"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        alertStatus: "alertStatus"
        displayName: "displayName"
        groupId: 0
        description: "description"
        disableAlerting: true
        deviceId: 6
        systemProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        dataSourceId: 1
        sdtAt: "sdtAt"
        lockDescription: true
        lastUpdatedTime: 5
        id: 5
        alertStatusPriority: 2
        alertDisableStatus: "alertDisableStatus"
        wildValue: "wildValue"
        stopMonitoring: true
        deviceDataSourceId: 7
        wildValue2: "wildValue2"
        sdtStatus: "sdtStatus"
        deviceDisplayName: "deviceDisplayName"
        groupsDisabledThisSource:
        - userPermission: "userPermission"
          displayName: "displayName"
          id: 1
          type: "type"
        - userPermission: "userPermission"
          displayName: "displayName"
          id: 1
          type: "type"
        lastCollectedTime: 9
        autoProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        groupName: "groupName"
        customProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        name: "name"
        alertingDisabledOn:
          userPermission: "userPermission"
          displayName: "displayName"
          id: 1
          type: "type"
        dataSourceType: "dataSourceType"
      errmsg: "errmsg"
      status: 3
  ReportPagination:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      searchId:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/ReportBase"
    example:
      total: 0
      searchId: "searchId"
      items:
      - lastmodifyUserId: 6
        delivery: "delivery"
        userPermission: "userPermission"
        lastGenerateOn: 1
        reportLinkNum: 5
        groupId: 5
        format: "format"
        description: "description"
        lastGenerateSize: 2
        customReportTypeId: 7
        type: "type"
        lastGeneratePages: 9
        schedule: "schedule"
        recipients:
        - additionInfo: "additionInfo"
          method: "method"
          type: "type"
          addr: "addr"
        - additionInfo: "additionInfo"
          method: "method"
          type: "type"
          addr: "addr"
        customReportTypeName: "customReportTypeName"
        name: "name"
        enableViewAsOtherUser: true
        lastmodifyUserName: "lastmodifyUserName"
        id: 3
      - lastmodifyUserId: 6
        delivery: "delivery"
        userPermission: "userPermission"
        lastGenerateOn: 1
        reportLinkNum: 5
        groupId: 5
        format: "format"
        description: "description"
        lastGenerateSize: 2
        customReportTypeId: 7
        type: "type"
        lastGeneratePages: 9
        schedule: "schedule"
        recipients:
        - additionInfo: "additionInfo"
          method: "method"
          type: "type"
          addr: "addr"
        - additionInfo: "additionInfo"
          method: "method"
          type: "type"
          addr: "addr"
        customReportTypeName: "customReportTypeName"
        name: "name"
        enableViewAsOtherUser: true
        lastmodifyUserName: "lastmodifyUserName"
        id: 3
  WebResource:
    type: "object"
    required:
    - "URL"
    - "type"
    properties:
      type:
        type: "string"
      URL:
        type: "string"
  AlertThresholdReport:
    allOf:
    - $ref: "#/definitions/ReportBase"
    - type: "object"
      properties:
        sortedBy:
          type: "string"
        dataSourceInstanceName:
          type: "string"
        columns:
          type: "array"
          items:
            $ref: "#/definitions/RestDynamicColumn"
        dataPoint:
          type: "string"
        deviceDisplayName:
          type: "string"
        excludeGlobal:
          type: "boolean"
        groupFullPath:
          type: "string"
    x-discriminator-value: "alert threshold"
  AwsEcsServiceDetailsCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "period"
      properties:
        period:
          type: "integer"
          format: "int32"
  ApiTokenResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/DeviceDatasourceInstanceConfigPaginationResponse"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        accessId: "accessId"
        adminName: "adminName"
        note: "note"
        lastUsedOn: 0
        accessKey: "accessKey"
        createdBy: "createdBy"
        roles:
        - "roles"
        - "roles"
        adminId: 6
        id: 1
        createdOn: 5
        status: 5
      errmsg: "errmsg"
      status: 0
  MemcachedCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "ip"
      - "port"
      properties:
        port:
          type: "string"
        ip:
          type: "string"
    x-discriminator-value: "memcached"
  CollectorGroupResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/CollectorGroup"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        customProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        userPermission: "userPermission"
        numOfCollectors: 0
        name: "name"
        description: "description"
        createOn: 6
        id: 1
      errmsg: "errmsg"
      status: 5
  BatchScriptCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "groovyScript"
      - "linuxCmdline"
      - "linuxScript"
      - "scriptType"
      - "windowsCmdline"
      - "windowsScript"
      properties:
        groovyScript:
          type: "string"
        scriptType:
          type: "string"
        windowsScript:
          type: "string"
        linuxCmdline:
          type: "string"
        linuxScript:
          type: "string"
        windowsCmdline:
          type: "string"
    x-discriminator-value: "batchscript"
  DataPoint:
    type: "object"
    required:
    - "name"
    properties:
      alertForNoData:
        type: "integer"
        format: "int32"
      maxValue:
        type: "string"
      dataType:
        type: "integer"
        format: "int32"
      postProcessorMethod:
        type: "string"
      postProcessorParam:
        type: "string"
      maxDigits:
        type: "integer"
        format: "int32"
      rawDataFieldName:
        type: "string"
      description:
        type: "string"
      alertClearTransitionInterval:
        type: "integer"
        format: "int32"
      userParam3:
        type: "string"
      userParam2:
        type: "string"
      type:
        type: "integer"
        format: "int32"
      alertExprNote:
        type: "string"
      dataSourceId:
        type: "integer"
        format: "int32"
        readOnly: true
      minValue:
        type: "string"
      alertBody:
        type: "string"
      userParam1:
        type: "string"
      name:
        type: "string"
      alertSubject:
        type: "string"
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      alertTransitionInterval:
        type: "integer"
        format: "int32"
      alertExpr:
        type: "string"
    example:
      alertForNoData: 7
      maxValue: "maxValue"
      dataType: 9
      postProcessorMethod: "postProcessorMethod"
      postProcessorParam: "postProcessorParam"
      maxDigits: 3
      rawDataFieldName: "rawDataFieldName"
      description: "description"
      alertClearTransitionInterval: 2
      userParam3: "userParam3"
      userParam2: "userParam2"
      type: 4
      alertExprNote: "alertExprNote"
      dataSourceId: 7
      minValue: "minValue"
      alertBody: "alertBody"
      userParam1: "userParam1"
      name: "name"
      alertSubject: "alertSubject"
      id: 1
      alertTransitionInterval: 1
      alertExpr: "alertExpr"
  AlertPagination:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      searchId:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/Alert"
    example:
      total: 0
      searchId: "searchId"
      items:
      - resourceId: 0
        instanceName: "instanceName"
        monitorObjectId: 6
        endEpoch: 1
        rule: "rule"
        threshold: "threshold"
        type: "type"
        startEpoch: 5
        internalId: "internalId"
        ackComment: "ackComment"
        monitorObjectName: "monitorObjectName"
        dataPointName: "dataPointName"
        instanceId: 5
        dataPointId: 2
        nextRecipient: 7
        id: "id"
        detailMessage: "detailMessage"
        ruleId: 9
        alertValue: "alertValue"
        ackedBy: "ackedBy"
        severity: 3
        sdted: true
        ackedEpoch: 2
        chain: "chain"
        SDT: "SDT"
        subChainId: 4
        receivedList: "receivedList"
        customColumns: "customColumns"
        acked: true
        resourceTemplateType: "resourceTemplateType"
        clearValue: "clearValue"
        instanceDescription: "instanceDescription"
        monitorObjectGroups: "monitorObjectGroups"
        chainId: 7
        resourceTemplateId: 1
        cleared: true
        resourceTemplateName: "resourceTemplateName"
      - resourceId: 0
        instanceName: "instanceName"
        monitorObjectId: 6
        endEpoch: 1
        rule: "rule"
        threshold: "threshold"
        type: "type"
        startEpoch: 5
        internalId: "internalId"
        ackComment: "ackComment"
        monitorObjectName: "monitorObjectName"
        dataPointName: "dataPointName"
        instanceId: 5
        dataPointId: 2
        nextRecipient: 7
        id: "id"
        detailMessage: "detailMessage"
        ruleId: 9
        alertValue: "alertValue"
        ackedBy: "ackedBy"
        severity: 3
        sdted: true
        ackedEpoch: 2
        chain: "chain"
        SDT: "SDT"
        subChainId: 4
        receivedList: "receivedList"
        customColumns: "customColumns"
        acked: true
        resourceTemplateType: "resourceTemplateType"
        clearValue: "clearValue"
        instanceDescription: "instanceDescription"
        monitorObjectGroups: "monitorObjectGroups"
        chainId: 7
        resourceTemplateId: 1
        cleared: true
        resourceTemplateName: "resourceTemplateName"
  ServiceItemConfig:
    type: "object"
    required:
    - "service"
    - "serviceGroup"
    properties:
      excludeSDT:
        type: "boolean"
      service:
        type: "string"
      serviceGroup:
        type: "string"
  PerfmonCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "counters"
      properties:
        counters:
          type: "array"
          items:
            $ref: "#/definitions/PerfmonCounter"
    x-discriminator-value: "perfmon"
  DeviceNOCItem:
    type: "object"
    required:
    - "dataPointName"
    - "dataSourceDisplayName"
    - "deviceDisplayName"
    - "deviceGroupFullPath"
    - "instanceName"
    - "name"
    properties:
      dataPointName:
        type: "string"
      instanceName:
        type: "string"
      name:
        type: "string"
      dataSourceDisplayName:
        type: "string"
      groupBy:
        type: "string"
      deviceGroupFullPath:
        type: "string"
      deviceDisplayName:
        type: "string"
  CollectorAttribute:
    type: "object"
    required:
    - "name"
    discriminator: "name"
    properties:
      name:
        type: "string"
    example:
      name: "name"
  GaugeWidget:
    allOf:
    - $ref: "#/definitions/WidgetBaseVersion1"
    - type: "object"
      required:
      - "dashboardId"
      - "dataPoint"
      - "name"
      - "type"
      properties:
        legend:
          type: "string"
        dataPoint:
          $ref: "#/definitions/GaugeDataPoint"
        description:
          type: "string"
        displayUnit:
          type: "string"
        type:
          type: "string"
        minValue:
          type: "number"
          format: "double"
        columnIdx:
          type: "integer"
          format: "int32"
        extra:
          type: "string"
        lastUpdatedOn:
          type: "integer"
          format: "int64"
          readOnly: true
        theme:
          type: "string"
        id:
          type: "integer"
          format: "int32"
        timescale:
          type: "string"
        order:
          type: "integer"
          format: "int32"
        rowSpan:
          type: "integer"
          format: "int32"
        lastUpdatedBy:
          type: "string"
          readOnly: true
        userPermission:
          type: "string"
          readOnly: true
        colSpan:
          type: "integer"
          format: "int32"
        maxValue:
          type: "number"
          format: "double"
        displayType:
          type: "integer"
          format: "int32"
        dashboardId:
          type: "integer"
          format: "int32"
        peakTimeRange:
          type: "string"
        showPeak:
          type: "boolean"
        name:
          type: "string"
        interval:
          type: "integer"
          format: "int32"
        colorThresholds:
          type: "array"
          items:
            $ref: "#/definitions/ColorThreshold"
    x-discriminator-value: "gauge"
  AlertRulePaginationResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/AlertRulePagination"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        total: 0
        searchId: "searchId"
        items:
        - datapoint: "datapoint"
          instance: "instance"
          devices:
          - "devices"
          - "devices"
          escalatingChainId: 0
          priority: 6
          suppressAlertAckSdt: true
          datasource: "datasource"
          suppressAlertClear: true
          name: "name"
          id: 1
          levelStr: "levelStr"
          deviceGroups:
          - "deviceGroups"
          - "deviceGroups"
          escalatingChain: "escalatingChain"
          escalationInterval: 5
        - datapoint: "datapoint"
          instance: "instance"
          devices:
          - "devices"
          - "devices"
          escalatingChainId: 0
          priority: 6
          suppressAlertAckSdt: true
          datasource: "datasource"
          suppressAlertClear: true
          name: "name"
          id: 1
          levelStr: "levelStr"
          deviceGroups:
          - "deviceGroups"
          - "deviceGroups"
          escalatingChain: "escalatingChain"
          escalationInterval: 5
      errmsg: "errmsg"
      status: 6
  InheritanceProp:
    type: "object"
    properties:
      fullpath:
        type: "string"
        readOnly: true
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      type:
        type: "string"
        readOnly: true
      value:
        type: "string"
        readOnly: true
    example:
      fullpath: "fullpath"
      id: 6
      type: "type"
      value: "value"
  NetflowReport:
    allOf:
    - $ref: "#/definitions/ReportBase"
    - type: "object"
      required:
      - "hostsVal"
      properties:
        dateRange:
          type: "string"
        hostsVal:
          type: "string"
        includeDNSMappings:
          type: "boolean"
    x-discriminator-value: "netflow device metric"
  ServiceSLAWidgetData:
    allOf:
    - $ref: "#/definitions/WidgetData"
    - type: "object"
      properties:
        availability:
          type: "number"
          format: "double"
          readOnly: true
        type:
          type: "string"
          readOnly: true
        colorLevel:
          type: "integer"
          format: "int32"
          readOnly: true
    x-discriminator-value: "servicesla"
  HostInventoryReport:
    allOf:
    - $ref: "#/definitions/ReportBase"
    - type: "object"
      required:
      - "properties"
      properties:
        sortedBy:
          type: "string"
        hostsValType:
          type: "string"
        hostsVal:
          type: "string"
        metrics:
          type: "array"
          items:
            $ref: "#/definitions/HostInventoryMetric"
        properties:
          type: "array"
          items:
            type: "string"
    x-discriminator-value: "host inventory"
  CollectorGroup:
    type: "object"
    required:
    - "name"
    properties:
      customProperties:
        type: "array"
        items:
          $ref: "#/definitions/NameAndValue"
      userPermission:
        type: "string"
        readOnly: true
      numOfCollectors:
        type: "integer"
        format: "int32"
        readOnly: true
      name:
        type: "string"
      description:
        type: "string"
      createOn:
        type: "integer"
        format: "int64"
        readOnly: true
      id:
        type: "integer"
        format: "int32"
        readOnly: true
    example:
      customProperties:
      - name: "name"
        value: "value"
      - name: "name"
        value: "value"
      userPermission: "userPermission"
      numOfCollectors: 0
      name: "name"
      description: "description"
      createOn: 6
      id: 1
  AwsCloudWatchCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      properties:
        period:
          type: "integer"
          format: "int32"
    x-discriminator-value: "aswcloudwatch"
  TableColumn:
    type: "object"
    required:
    - "columnName"
    - "dataPoint"
    properties:
      alternateDataPoints:
        type: "array"
        items:
          $ref: "#/definitions/TableDataPoint"
      rpn:
        type: "string"
      dataPoint:
        $ref: "#/definitions/TableDataPoint"
      columnName:
        type: "string"
      enableForecast:
        type: "boolean"
      roundingDecimal:
        type: "integer"
        format: "int32"
  TableDataPoint:
    type: "object"
    required:
    - "dataPointId"
    - "dataSourceId"
    properties:
      dataSourceId:
        type: "integer"
        format: "int32"
      dataPointName:
        type: "string"
      dataPointId:
        type: "integer"
        format: "int32"
      dataSourceFullName:
        type: "string"
      isMultiple:
        type: "boolean"
  DeviceDatasourceInstanceConfigPaginationResponse:
    type: "object"
    properties:
      accessId:
        type: "string"
        readOnly: true
      adminName:
        type: "string"
        readOnly: true
      note:
        type: "string"
      lastUsedOn:
        type: "integer"
        format: "int64"
        readOnly: true
      accessKey:
        type: "string"
        readOnly: true
      createdBy:
        type: "string"
        readOnly: true
      roles:
        type: "array"
        readOnly: true
        uniqueItems: true
        items:
          type: "string"
      adminId:
        type: "integer"
        format: "int32"
        readOnly: true
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      createdOn:
        type: "integer"
        format: "int64"
        readOnly: true
      status:
        type: "integer"
        format: "int32"
    example:
      accessId: "accessId"
      adminName: "adminName"
      note: "note"
      lastUsedOn: 0
      accessKey: "accessKey"
      createdBy: "createdBy"
      roles:
      - "roles"
      - "roles"
      adminId: 6
      id: 1
      createdOn: 5
      status: 5
  MapItemInfo:
    type: "object"
    properties:
      alertStatus:
        type: "string"
        readOnly: true
      activeStatus:
        type: "string"
        readOnly: true
      displayName:
        type: "string"
        readOnly: true
      formattedLocation:
        type: "string"
        readOnly: true
      latitude:
        type: "string"
        readOnly: true
      name:
        type: "string"
        readOnly: true
      description:
        type: "string"
        readOnly: true
      location:
        type: "string"
        readOnly: true
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      type:
        type: "string"
        readOnly: true
      sdtStatus:
        type: "string"
        readOnly: true
      longitude:
        type: "string"
        readOnly: true
  DeviceDatasourcePagination:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      searchId:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/DeviceDataSource"
    example:
      total: 0
      searchId: "searchId"
      items:
      - alertStatus: "alertStatus"
        autoDiscovery: true
        dataSourceDisplayName: "dataSourceDisplayName"
        deviceId: 6
        deviceName: "deviceName"
        createdOn: 1
        dataSourceId: 5
        graphs:
        - displayPrio: 5
          name: "name"
          id: 2
          title: "title"
        - displayPrio: 5
          name: "name"
          id: 2
          title: "title"
        sdtAt: "sdtAt"
        nextAutoDiscoveryOn: 7
        id: 9
        alertStatusPriority: 3
        alertDisableStatus: "alertDisableStatus"
        dataSourceDescription: "dataSourceDescription"
        overviewGraphs:
        - displayPrio: 5
          name: "name"
          id: 2
          title: "title"
        - displayPrio: 5
          name: "name"
          id: 2
          title: "title"
        stopMonitoring: true
        assignedOn: 2
        isMultiple: true
        instanceNumber: 4
        updatedOn: 7
        sdtStatus: "sdtStatus"
        dataSourceName: "dataSourceName"
        deviceDisplayName: "deviceDisplayName"
        monitoringInstanceNumber: 1
        groupsDisabledThisSource:
        - userPermission: "userPermission"
          displayName: "displayName"
          id: 1
          type: "type"
        - userPermission: "userPermission"
          displayName: "displayName"
          id: 1
          type: "type"
        groupName: "groupName"
        instanceAutoGroupEnabled: true
        alertingDisabledOn:
          userPermission: "userPermission"
          displayName: "displayName"
          id: 1
          type: "type"
        dataSourceType: "dataSourceType"
        status: 1
      - alertStatus: "alertStatus"
        autoDiscovery: true
        dataSourceDisplayName: "dataSourceDisplayName"
        deviceId: 6
        deviceName: "deviceName"
        createdOn: 1
        dataSourceId: 5
        graphs:
        - displayPrio: 5
          name: "name"
          id: 2
          title: "title"
        - displayPrio: 5
          name: "name"
          id: 2
          title: "title"
        sdtAt: "sdtAt"
        nextAutoDiscoveryOn: 7
        id: 9
        alertStatusPriority: 3
        alertDisableStatus: "alertDisableStatus"
        dataSourceDescription: "dataSourceDescription"
        overviewGraphs:
        - displayPrio: 5
          name: "name"
          id: 2
          title: "title"
        - displayPrio: 5
          name: "name"
          id: 2
          title: "title"
        stopMonitoring: true
        assignedOn: 2
        isMultiple: true
        instanceNumber: 4
        updatedOn: 7
        sdtStatus: "sdtStatus"
        dataSourceName: "dataSourceName"
        deviceDisplayName: "deviceDisplayName"
        monitoringInstanceNumber: 1
        groupsDisabledThisSource:
        - userPermission: "userPermission"
          displayName: "displayName"
          id: 1
          type: "type"
        - userPermission: "userPermission"
          displayName: "displayName"
          id: 1
          type: "type"
        groupName: "groupName"
        instanceAutoGroupEnabled: true
        alertingDisabledOn:
          userPermission: "userPermission"
          displayName: "displayName"
          id: 1
          type: "type"
        dataSourceType: "dataSourceType"
        status: 1
  DeviceDatasourcePaginationResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/DeviceDatasourcePagination"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        total: 0
        searchId: "searchId"
        items:
        - alertStatus: "alertStatus"
          autoDiscovery: true
          dataSourceDisplayName: "dataSourceDisplayName"
          deviceId: 6
          deviceName: "deviceName"
          createdOn: 1
          dataSourceId: 5
          graphs:
          - displayPrio: 5
            name: "name"
            id: 2
            title: "title"
          - displayPrio: 5
            name: "name"
            id: 2
            title: "title"
          sdtAt: "sdtAt"
          nextAutoDiscoveryOn: 7
          id: 9
          alertStatusPriority: 3
          alertDisableStatus: "alertDisableStatus"
          dataSourceDescription: "dataSourceDescription"
          overviewGraphs:
          - displayPrio: 5
            name: "name"
            id: 2
            title: "title"
          - displayPrio: 5
            name: "name"
            id: 2
            title: "title"
          stopMonitoring: true
          assignedOn: 2
          isMultiple: true
          instanceNumber: 4
          updatedOn: 7
          sdtStatus: "sdtStatus"
          dataSourceName: "dataSourceName"
          deviceDisplayName: "deviceDisplayName"
          monitoringInstanceNumber: 1
          groupsDisabledThisSource:
          - userPermission: "userPermission"
            displayName: "displayName"
            id: 1
            type: "type"
          - userPermission: "userPermission"
            displayName: "displayName"
            id: 1
            type: "type"
          groupName: "groupName"
          instanceAutoGroupEnabled: true
          alertingDisabledOn:
            userPermission: "userPermission"
            displayName: "displayName"
            id: 1
            type: "type"
          dataSourceType: "dataSourceType"
          status: 1
        - alertStatus: "alertStatus"
          autoDiscovery: true
          dataSourceDisplayName: "dataSourceDisplayName"
          deviceId: 6
          deviceName: "deviceName"
          createdOn: 1
          dataSourceId: 5
          graphs:
          - displayPrio: 5
            name: "name"
            id: 2
            title: "title"
          - displayPrio: 5
            name: "name"
            id: 2
            title: "title"
          sdtAt: "sdtAt"
          nextAutoDiscoveryOn: 7
          id: 9
          alertStatusPriority: 3
          alertDisableStatus: "alertDisableStatus"
          dataSourceDescription: "dataSourceDescription"
          overviewGraphs:
          - displayPrio: 5
            name: "name"
            id: 2
            title: "title"
          - displayPrio: 5
            name: "name"
            id: 2
            title: "title"
          stopMonitoring: true
          assignedOn: 2
          isMultiple: true
          instanceNumber: 4
          updatedOn: 7
          sdtStatus: "sdtStatus"
          dataSourceName: "dataSourceName"
          deviceDisplayName: "deviceDisplayName"
          monitoringInstanceNumber: 1
          groupsDisabledThisSource:
          - userPermission: "userPermission"
            displayName: "displayName"
            id: 1
            type: "type"
          - userPermission: "userPermission"
            displayName: "displayName"
            id: 1
            type: "type"
          groupName: "groupName"
          instanceAutoGroupEnabled: true
          alertingDisabledOn:
            userPermission: "userPermission"
            displayName: "displayName"
            id: 1
            type: "type"
          dataSourceType: "dataSourceType"
          status: 1
      errmsg: "errmsg"
      status: 6
  AwsEC2ReservedInstanceCoverageDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
  AwsEC2ReservedInstanceCoverageCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "period"
      properties:
        period:
          type: "integer"
          format: "int32"
  TableRow:
    type: "object"
    required:
    - "deviceId"
    properties:
      instances:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/InstanceCell"
      groupId:
        type: "integer"
        format: "int32"
      label:
        type: "string"
      deviceId:
        type: "integer"
        format: "int32"
      deviceDisplayName:
        type: "string"
        readOnly: true
      groupFullPath:
        type: "string"
        readOnly: true
  OpsNoteGroupDeviceServiceAllScopeV1:
    allOf:
    - $ref: "#/definitions/OpsNoteScopeVersion1"
    - type: "object"
      required:
      - "type"
      properties:
        groupId:
          type: "integer"
          format: "int32"
        type:
          type: "string"
        serviceId:
          type: "integer"
          format: "int32"
        deviceId:
          type: "integer"
          format: "int32"
  HostGroupInventoryReport:
    allOf:
    - $ref: "#/definitions/ReportBase"
    - type: "object"
      required:
      - "properties"
      properties:
        sortedBy:
          type: "string"
        hostGroups:
          type: "string"
        includeSubGroups:
          type: "boolean"
        properties:
          type: "array"
          items:
            type: "string"
    x-discriminator-value: "host group inventory"
  ServiceOverviewWidget:
    allOf:
    - $ref: "#/definitions/WidgetBaseVersion1"
    - type: "object"
      required:
      - "dashboardId"
      - "graph"
      - "name"
      - "type"
      properties:
        rowSpan:
          type: "integer"
          format: "int32"
        lastUpdatedBy:
          type: "string"
          readOnly: true
        userPermission:
          type: "string"
          readOnly: true
        geoInfo:
          type: "string"
          readOnly: true
        colSpan:
          type: "integer"
          format: "int32"
        description:
          type: "string"
        type:
          type: "string"
        serviceName:
          type: "string"
          readOnly: true
        graph:
          type: "string"
        columnIdx:
          type: "integer"
          format: "int32"
        dashboardId:
          type: "integer"
          format: "int32"
        extra:
          type: "string"
        name:
          type: "string"
        lastUpdatedOn:
          type: "integer"
          format: "int64"
          readOnly: true
        theme:
          type: "string"
        interval:
          type: "integer"
          format: "int32"
        id:
          type: "integer"
          format: "int32"
        timescale:
          type: "string"
        serviceId:
          type: "integer"
          format: "int32"
        order:
          type: "integer"
          format: "int32"
    x-discriminator-value: "serviceoverview"
  Chain:
    type: "object"
    required:
    - "stages"
    - "type"
    properties:
      period:
        $ref: "#/definitions/Period"
      stages:
        type: "array"
        items:
          type: "array"
          items:
            $ref: "#/definitions/Recipient"
      type:
        type: "string"
    example:
      period:
        weekDays:
        - 1
        - 1
        startMinutes: 5
        endMinutes: 5
      stages:
      - - method: "method"
          contact: "contact"
          type: "type"
          addr: "addr"
        - method: "method"
          contact: "contact"
          type: "type"
          addr: "addr"
      - - method: "method"
          contact: "contact"
          type: "type"
          addr: "addr"
        - method: "method"
          contact: "contact"
          type: "type"
          addr: "addr"
      type: "type"
  BatchJobWidgetData:
    allOf:
    - $ref: "#/definitions/WidgetData"
    - type: "object"
      properties:
        type:
          type: "string"
          readOnly: true
        items:
          type: "array"
          readOnly: true
          items:
            $ref: "#/definitions/BatchJobExecutionItem"
    x-discriminator-value: "batchjob"
  AwsAutoScalingServiceLimitsCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "period"
      properties:
        period:
          type: "integer"
          format: "int32"
  AlertFilters:
    type: "object"
    properties:
      severity:
        type: "string"
      sdted:
        type: "string"
      chain:
        type: "string"
      instance:
        type: "string"
      dataPoint:
        type: "string"
      host:
        type: "string"
      rule:
        type: "string"
      keyword:
        type: "string"
      dataSource:
        type: "string"
      acked:
        type: "string"
      cleared:
        type: "string"
      group:
        type: "string"
  WebService:
    allOf:
    - $ref: "#/definitions/ServiceBaseVersion1"
    - type: "object"
      required:
      - "name"
      - "type"
      properties:
        alertStatus:
          type: "string"
          readOnly: true
        testLocation:
          type: "string"
        overallAlertLevel:
          type: "string"
        pollingInterval:
          type: "integer"
          format: "int32"
        description:
          type: "string"
        disableAlerting:
          type: "boolean"
        type:
          type: "string"
        stopMonitoringByFolder:
          type: "boolean"
          readOnly: true
        serviceStatus:
          type: "string"
        id:
          type: "integer"
          format: "int32"
          readOnly: true
        alertStatusPriority:
          type: "integer"
          format: "int32"
          readOnly: true
        alertDisableStatus:
          type: "string"
          readOnly: true
        serviceFolderId:
          type: "integer"
          format: "int32"
        serviceProperties:
          type: "array"
          items:
            $ref: "#/definitions/NameAndValue"
        stopMonitoring:
          type: "boolean"
        userPermission:
          type: "string"
        method:
          type: "string"
        pageLoadAlertTimeInMS:
          type: "integer"
          format: "int64"
        individualSmAlertEnable:
          type: "boolean"
        checkpoints:
          type: "array"
          items:
            $ref: "#/definitions/ServiceCheckPoint"
        sdtStatus:
          type: "string"
          readOnly: true
        ignoreSSL:
          type: "boolean"
        steps:
          type: "array"
          items:
            $ref: "#/definitions/WebServiceStepV1"
        transition:
          type: "integer"
          format: "int32"
        script:
          type: "string"
          readOnly: true
        globalSmAlertCond:
          type: "integer"
          format: "int32"
        isInternal:
          type: "boolean"
        collectors:
          type: "array"
          readOnly: true
          items:
            $ref: "#/definitions/ServiceCollector"
        name:
          type: "string"
        useDefaultLocationSetting:
          type: "boolean"
        useDefaultAlertSetting:
          type: "boolean"
        individualAlertLevel:
          type: "string"
    x-discriminator-value: "webservice"
  AdminPagination:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      searchId:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/Admin"
    example:
      total: 0
      searchId: "searchId"
      items:
      - lastName: "lastName"
        note: "note"
        viewPermission: "viewPermission"
        timezone: "timezone"
        roles:
        - enableRemoteSessionInCompanyLevel: true
          customHelpLabel: "customHelpLabel"
          customHelpURL: "customHelpURL"
          privileges:
          - objectName: "objectName"
            subOperation: "subOperation"
            operation: "operation"
            objectId: "objectId"
            objectType: "objectType"
          - objectName: "objectName"
            subOperation: "subOperation"
            operation: "operation"
            objectId: "objectId"
            objectType: "objectType"
          associatedUserCount: 0
          name: "name"
          description: "description"
          id: 6
          twoFARequired: true
          requireEULA: true
          acctRequireTwoFA: true
        - enableRemoteSessionInCompanyLevel: true
          customHelpLabel: "customHelpLabel"
          customHelpURL: "customHelpURL"
          privileges:
          - objectName: "objectName"
            subOperation: "subOperation"
            operation: "operation"
            objectId: "objectId"
            objectType: "objectType"
          - objectName: "objectName"
            subOperation: "subOperation"
            operation: "operation"
            objectId: "objectId"
            objectType: "objectType"
          associatedUserCount: 0
          name: "name"
          description: "description"
          id: 6
          twoFARequired: true
          requireEULA: true
          acctRequireTwoFA: true
        lastLoginOn: 0
        lastActionOnLocal: "lastActionOnLocal"
        smsEmailFormat: "smsEmailFormat"
        apionly: true
        apiTokens:
        - accessId: "accessId"
          adminName: "adminName"
          note: "note"
          lastUsedOn: 0
          accessKey: "accessKey"
          createdBy: "createdBy"
          roles:
          - "roles"
          - "roles"
          adminId: 6
          id: 1
          createdOn: 5
          status: 5
        - accessId: "accessId"
          adminName: "adminName"
          note: "note"
          lastUsedOn: 0
          accessKey: "accessKey"
          createdBy: "createdBy"
          roles:
          - "roles"
          - "roles"
          adminId: 6
          id: 1
          createdOn: 5
          status: 5
        password: "password"
        lastAction: "lastAction"
        skilljarEmail: "skilljarEmail"
        lastActionOn: 6
        id: 1
        email: "email"
        contactMethod: "contactMethod"
        acceptEULAOn: 5
        setupWizardStatus: "setupWizardStatus"
        smsEmail: "smsEmail"
        twoFAEnabled: true
        firstName: "firstName"
        phone: "phone"
        createdBy: "createdBy"
        forcePasswordChange: true
        acceptEULA: true
        username: "username"
        status: "status"
      - lastName: "lastName"
        note: "note"
        viewPermission: "viewPermission"
        timezone: "timezone"
        roles:
        - enableRemoteSessionInCompanyLevel: true
          customHelpLabel: "customHelpLabel"
          customHelpURL: "customHelpURL"
          privileges:
          - objectName: "objectName"
            subOperation: "subOperation"
            operation: "operation"
            objectId: "objectId"
            objectType: "objectType"
          - objectName: "objectName"
            subOperation: "subOperation"
            operation: "operation"
            objectId: "objectId"
            objectType: "objectType"
          associatedUserCount: 0
          name: "name"
          description: "description"
          id: 6
          twoFARequired: true
          requireEULA: true
          acctRequireTwoFA: true
        - enableRemoteSessionInCompanyLevel: true
          customHelpLabel: "customHelpLabel"
          customHelpURL: "customHelpURL"
          privileges:
          - objectName: "objectName"
            subOperation: "subOperation"
            operation: "operation"
            objectId: "objectId"
            objectType: "objectType"
          - objectName: "objectName"
            subOperation: "subOperation"
            operation: "operation"
            objectId: "objectId"
            objectType: "objectType"
          associatedUserCount: 0
          name: "name"
          description: "description"
          id: 6
          twoFARequired: true
          requireEULA: true
          acctRequireTwoFA: true
        lastLoginOn: 0
        lastActionOnLocal: "lastActionOnLocal"
        smsEmailFormat: "smsEmailFormat"
        apionly: true
        apiTokens:
        - accessId: "accessId"
          adminName: "adminName"
          note: "note"
          lastUsedOn: 0
          accessKey: "accessKey"
          createdBy: "createdBy"
          roles:
          - "roles"
          - "roles"
          adminId: 6
          id: 1
          createdOn: 5
          status: 5
        - accessId: "accessId"
          adminName: "adminName"
          note: "note"
          lastUsedOn: 0
          accessKey: "accessKey"
          createdBy: "createdBy"
          roles:
          - "roles"
          - "roles"
          adminId: 6
          id: 1
          createdOn: 5
          status: 5
        password: "password"
        lastAction: "lastAction"
        skilljarEmail: "skilljarEmail"
        lastActionOn: 6
        id: 1
        email: "email"
        contactMethod: "contactMethod"
        acceptEULAOn: 5
        setupWizardStatus: "setupWizardStatus"
        smsEmail: "smsEmail"
        twoFAEnabled: true
        firstName: "firstName"
        phone: "phone"
        createdBy: "createdBy"
        forcePasswordChange: true
        acceptEULA: true
        username: "username"
        status: "status"
  DashboardGroupPaginationResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/DashboardGroupPagination"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        total: 0
        searchId: "searchId"
        items:
        - template: {}
          fullPath: "fullPath"
          userPermission: "userPermission"
          widgetTokens:
          - inheritList:
            - fullpath: "fullpath"
              value: "value"
            - fullpath: "fullpath"
              value: "value"
            name: "name"
            type: "type"
            value: "value"
          - inheritList:
            - fullpath: "fullpath"
              value: "value"
            - fullpath: "fullpath"
              value: "value"
            name: "name"
            type: "type"
            value: "value"
          name: "name"
          numOfDirectSubGroups: 0
          numOfDashboards: 6
          description: "description"
          id: 1
          dashboards:
          - userPermission: "userPermission"
            name: "name"
            sharable: true
            id: 5
          - userPermission: "userPermission"
            name: "name"
            sharable: true
            id: 5
          parentId: 5
          numOfDirectDashboards: 2
        - template: {}
          fullPath: "fullPath"
          userPermission: "userPermission"
          widgetTokens:
          - inheritList:
            - fullpath: "fullpath"
              value: "value"
            - fullpath: "fullpath"
              value: "value"
            name: "name"
            type: "type"
            value: "value"
          - inheritList:
            - fullpath: "fullpath"
              value: "value"
            - fullpath: "fullpath"
              value: "value"
            name: "name"
            type: "type"
            value: "value"
          name: "name"
          numOfDirectSubGroups: 0
          numOfDashboards: 6
          description: "description"
          id: 1
          dashboards:
          - userPermission: "userPermission"
            name: "name"
            sharable: true
            id: 5
          - userPermission: "userPermission"
            name: "name"
            sharable: true
            id: 5
          parentId: 5
          numOfDirectDashboards: 2
      errmsg: "errmsg"
      status: 6
  NetflowGroupGraphWidget:
    allOf:
    - $ref: "#/definitions/WidgetBaseVersion1"
    - type: "object"
      required:
      - "dashboardId"
      - "name"
      - "type"
      properties:
        rowSpan:
          type: "integer"
          format: "int32"
        lastUpdatedBy:
          type: "string"
          readOnly: true
        userPermission:
          type: "string"
          readOnly: true
        colSpan:
          type: "integer"
          format: "int32"
        description:
          type: "string"
        type:
          type: "string"
        columnIdx:
          type: "integer"
          format: "int32"
        dashboardId:
          type: "integer"
          format: "int32"
        deviceGroupId:
          type: "integer"
          format: "int32"
        extra:
          type: "string"
        name:
          type: "string"
        lastUpdatedOn:
          type: "integer"
          format: "int64"
          readOnly: true
        deviceGroupName:
          type: "string"
          readOnly: true
        theme:
          type: "string"
        interval:
          type: "integer"
          format: "int32"
        id:
          type: "integer"
          format: "int32"
        timescale:
          type: "string"
        order:
          type: "integer"
          format: "int32"
    x-discriminator-value: "groupnetflowgraph"
  DeviceDatasourceResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/DeviceDataSource"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        alertStatus: "alertStatus"
        autoDiscovery: true
        dataSourceDisplayName: "dataSourceDisplayName"
        deviceId: 6
        deviceName: "deviceName"
        createdOn: 1
        dataSourceId: 5
        graphs:
        - displayPrio: 5
          name: "name"
          id: 2
          title: "title"
        - displayPrio: 5
          name: "name"
          id: 2
          title: "title"
        sdtAt: "sdtAt"
        nextAutoDiscoveryOn: 7
        id: 9
        alertStatusPriority: 3
        alertDisableStatus: "alertDisableStatus"
        dataSourceDescription: "dataSourceDescription"
        overviewGraphs:
        - displayPrio: 5
          name: "name"
          id: 2
          title: "title"
        - displayPrio: 5
          name: "name"
          id: 2
          title: "title"
        stopMonitoring: true
        assignedOn: 2
        isMultiple: true
        instanceNumber: 4
        updatedOn: 7
        sdtStatus: "sdtStatus"
        dataSourceName: "dataSourceName"
        deviceDisplayName: "deviceDisplayName"
        monitoringInstanceNumber: 1
        groupsDisabledThisSource:
        - userPermission: "userPermission"
          displayName: "displayName"
          id: 1
          type: "type"
        - userPermission: "userPermission"
          displayName: "displayName"
          id: 1
          type: "type"
        groupName: "groupName"
        instanceAutoGroupEnabled: true
        alertingDisabledOn:
          userPermission: "userPermission"
          displayName: "displayName"
          id: 1
          type: "type"
        dataSourceType: "dataSourceType"
        status: 1
      errmsg: "errmsg"
      status: 0
  OpsNotePagination:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      searchId:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/OpsNote"
    example:
      total: 0
      searchId: "searchId"
      items:
      - note: "note"
        createdBy: "createdBy"
        id: "id"
        happenOnInSec: 6
        tags:
        - updateOnInSec: 1
          createdOnInSec: 5
          name: "name"
          id: "id"
        - updateOnInSec: 1
          createdOnInSec: 5
          name: "name"
          id: "id"
      - note: "note"
        createdBy: "createdBy"
        id: "id"
        happenOnInSec: 6
        tags:
        - updateOnInSec: 1
          createdOnInSec: 5
          name: "name"
          id: "id"
        - updateOnInSec: 1
          createdOnInSec: 5
          name: "name"
          id: "id"
  SlaMetric:
    type: "object"
    properties:
      groupName:
        type: "string"
      excludeSDT:
        type: "boolean"
      serviceName:
        type: "string"
  EntityProperty:
    type: "object"
    properties:
      inheritList:
        type: "array"
        items:
          $ref: "#/definitions/InheritanceProp"
      name:
        type: "string"
        readOnly: true
      type:
        type: "string"
        readOnly: true
      value:
        type: "string"
        readOnly: true
    example:
      inheritList:
      - fullpath: "fullpath"
        id: 6
        type: "type"
        value: "value"
      - fullpath: "fullpath"
        id: 6
        type: "type"
        value: "value"
      name: "name"
      type: "type"
      value: "value"
  SDKScriptDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
      required:
      - "groovyScript"
      - "sdkName"
      - "sdkVersion"
      properties:
        groovyScript:
          type: "string"
        sdkVersion:
          type: "string"
        sdkName:
          type: "string"
  RowData:
    type: "object"
    properties:
      cells:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/CellData"
      deviceId:
        type: "integer"
        format: "int32"
        readOnly: true
      deviceDisplayName:
        type: "string"
        readOnly: true
  AlertTrendsReport:
    allOf:
    - $ref: "#/definitions/ReportBase"
    - type: "object"
      required:
      - "metrics"
      properties:
        dateRange:
          type: "string"
        metrics:
          type: "array"
          items:
            $ref: "#/definitions/AlertTrendsMetric"
    x-discriminator-value: "alert trends"
  ReportResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/ReportBase"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        lastmodifyUserId: 6
        delivery: "delivery"
        userPermission: "userPermission"
        lastGenerateOn: 1
        reportLinkNum: 5
        groupId: 5
        format: "format"
        description: "description"
        lastGenerateSize: 2
        customReportTypeId: 7
        type: "type"
        lastGeneratePages: 9
        schedule: "schedule"
        recipients:
        - additionInfo: "additionInfo"
          method: "method"
          type: "type"
          addr: "addr"
        - additionInfo: "additionInfo"
          method: "method"
          type: "type"
          addr: "addr"
        customReportTypeName: "customReportTypeName"
        name: "name"
        enableViewAsOtherUser: true
        lastmodifyUserName: "lastmodifyUserName"
        id: 3
      errmsg: "errmsg"
      status: 0
  LocationData:
    type: "object"
    properties:
      geoInfo:
        type: "string"
        readOnly: true
      selected:
        type: "boolean"
      smgId:
        type: "integer"
        format: "int32"
  RestServiceSLAReport:
    allOf:
    - $ref: "#/definitions/ReportBase"
    - type: "object"
      required:
      - "metrics"
      properties:
        dateRange:
          type: "string"
        metrics:
          type: "array"
          items:
            $ref: "#/definitions/SlaMetric"
  DashboardReport:
    allOf:
    - $ref: "#/definitions/ReportBase"
    - type: "object"
      required:
      - "dashboardId"
      - "dateRange"
      properties:
        dashboardId:
          type: "integer"
          format: "int32"
        dateRange:
          type: "string"
        displayName:
          type: "string"
        widgetExtraData:
          type: "string"
        displayLink:
          type: "boolean"
        dashboardGroupFullPath:
          type: "string"
          readOnly: true
        fromSource:
          type: "integer"
          format: "int32"
        dashboardName:
          type: "string"
          readOnly: true
    x-discriminator-value: "dashboard"
  AlertWidgetData:
    allOf:
    - $ref: "#/definitions/WidgetData"
    - type: "object"
      properties:
        total:
          type: "integer"
          format: "int32"
          readOnly: true
        searchId:
          type: "string"
          readOnly: true
        type:
          type: "string"
          readOnly: true
        items:
          type: "array"
          readOnly: true
          items:
            $ref: "#/definitions/Alert"
    x-discriminator-value: "alert"
  SiteMonitorCheckPointPagination:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      searchId:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/SiteMonitorCheckpoint"
    example:
      total: 0
      searchId: "searchId"
      items:
      - geoInfo: "geoInfo"
        displayPrio: 6
        name: "name"
        isEnabledInRoot: true
        description: "description"
        id: 1
      - geoInfo: "geoInfo"
        displayPrio: 6
        name: "name"
        isEnabledInRoot: true
        description: "description"
        id: 1
  AwsServiceLimitsFromTrustedAdvisorCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "awsServiceName"
      - "period"
      properties:
        period:
          type: "integer"
          format: "int32"
        awsServiceName:
          type: "string"
  CIMAutoDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
      required:
      - "cimClass"
      - "namespace"
      - "property"
      properties:
        cimClass:
          type: "string"
        property:
          type: "string"
        namespace:
          type: "string"
    x-discriminator-value: "ad_cim"
  AwsDynamodbCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "awsAttributeName"
      - "awsDynamodbAttrType"
      - "awsKeyValue"
      - "awsQueryIndexName"
      - "awsQueryIndexType"
      - "awsQueryKeyValue"
      - "awsQueryRangeOp"
      - "awsQueryRangeValue"
      - "awsRangeValue"
      properties:
        awsRangeValue:
          type: "string"
        awsQueryRangeValue:
          type: "string"
        awsDynamodbAttrType:
          type: "string"
        awsQueryRangeOp:
          type: "string"
        awsKeyValue:
          type: "string"
        awsAttributeName:
          type: "string"
        awsQueryIndexType:
          type: "string"
        awsQueryIndexName:
          type: "string"
        awsQueryKeyValue:
          type: "string"
    x-discriminator-value: "awsdynamodb"
  NextUpgradeInfo:
    type: "object"
    properties:
      upgradeTime:
        type: "string"
        readOnly: true
      stable:
        type: "boolean"
        readOnly: true
      majorVersion:
        type: "integer"
        format: "int32"
        readOnly: true
      minorVersion:
        type: "integer"
        format: "int32"
        readOnly: true
      mandatory:
        type: "boolean"
        readOnly: true
      upgradeTimeEpoch:
        type: "integer"
        format: "int64"
        readOnly: true
    example:
      upgradeTime: "upgradeTime"
      stable: true
      majorVersion: 7
      minorVersion: 1
      mandatory: true
      upgradeTimeEpoch: 4
  InternalCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
    x-discriminator-value: "internal"
  ServiceBaseVersion1:
    type: "object"
    discriminator: "type"
  DeviceDataSourceInstanceGroup:
    type: "object"
    required:
    - "description"
    - "name"
    properties:
      alertStatus:
        type: "string"
        readOnly: true
      deviceDataSourceId:
        type: "integer"
        format: "int32"
        readOnly: true
      description:
        type: "string"
      deviceId:
        type: "integer"
        format: "int32"
        readOnly: true
      sdtStatus:
        type: "string"
        readOnly: true
      deviceDisplayName:
        type: "string"
        readOnly: true
      groupsDisabledThisSource:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/TreeNode"
      disabledInstancesNum:
        type: "integer"
        format: "int32"
        readOnly: true
      sdtAt:
        type: "string"
        readOnly: true
      name:
        type: "string"
      createOn:
        type: "integer"
        format: "int64"
        readOnly: true
      alertingDisabledOn:
        readOnly: true
        $ref: "#/definitions/TreeNode"
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      alertStatusPriority:
        type: "integer"
        format: "int32"
        readOnly: true
      alertDisableStatus:
        type: "string"
        readOnly: true
      instancesNum:
        type: "integer"
        format: "int32"
        readOnly: true
    example:
      alertStatus: "alertStatus"
      deviceDataSourceId: 0
      description: "description"
      deviceId: 6
      sdtStatus: "sdtStatus"
      deviceDisplayName: "deviceDisplayName"
      groupsDisabledThisSource:
      - userPermission: "userPermission"
        displayName: "displayName"
        id: 1
        type: "type"
      - userPermission: "userPermission"
        displayName: "displayName"
        id: 1
        type: "type"
      disabledInstancesNum: 1
      sdtAt: "sdtAt"
      name: "name"
      createOn: 5
      alertingDisabledOn:
        userPermission: "userPermission"
        displayName: "displayName"
        id: 1
        type: "type"
      id: 5
      alertStatusPriority: 2
      alertDisableStatus: "alertDisableStatus"
      instancesNum: 7
  AlertRulePagination:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      searchId:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/AlertRule"
    example:
      total: 0
      searchId: "searchId"
      items:
      - datapoint: "datapoint"
        instance: "instance"
        devices:
        - "devices"
        - "devices"
        escalatingChainId: 0
        priority: 6
        suppressAlertAckSdt: true
        datasource: "datasource"
        suppressAlertClear: true
        name: "name"
        id: 1
        levelStr: "levelStr"
        deviceGroups:
        - "deviceGroups"
        - "deviceGroups"
        escalatingChain: "escalatingChain"
        escalationInterval: 5
      - datapoint: "datapoint"
        instance: "instance"
        devices:
        - "devices"
        - "devices"
        escalatingChainId: 0
        priority: 6
        suppressAlertAckSdt: true
        datasource: "datasource"
        suppressAlertClear: true
        name: "name"
        id: 1
        levelStr: "levelStr"
        deviceGroups:
        - "deviceGroups"
        - "deviceGroups"
        escalatingChain: "escalatingChain"
        escalationInterval: 5
  GaugeDataPoint:
    type: "object"
    required:
    - "deviceDisplayName"
    - "deviceGroupFullPath"
    - "instanceName"
    properties:
      rpn:
        type: "string"
      dataSourceId:
        type: "integer"
        format: "int32"
      dataPointName:
        type: "string"
      dataPointId:
        type: "integer"
        format: "int32"
      instanceName:
        type: "string"
      dataSourceFullName:
        type: "string"
      dataSeries:
        type: "string"
      aggregateFunction:
        type: "string"
      deviceGroupFullPath:
        type: "string"
      deviceDisplayName:
        type: "string"
  DeviceDataSourceInstanceData:
    type: "object"
    properties:
      values:
        type: "array"
        readOnly: true
        items:
          type: "array"
          items:
            type: "number"
            format: "double"
      time:
        type: "array"
        readOnly: true
        items:
          type: "integer"
          format: "int64"
      nextPageParams:
        type: "string"
        readOnly: true
      dataSourceName:
        type: "string"
        readOnly: true
    example:
      values:
      - - 0.8008281904610115
        - 0.8008281904610115
      - - 0.8008281904610115
        - 0.8008281904610115
      time:
      - 6
      - 6
      nextPageParams: "nextPageParams"
      dataSourceName: "dataSourceName"
  RolePaginationResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/RolePagination"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        total: 0
        searchId: "searchId"
        items:
        - enableRemoteSessionInCompanyLevel: true
          customHelpLabel: "customHelpLabel"
          customHelpURL: "customHelpURL"
          privileges:
          - objectName: "objectName"
            subOperation: "subOperation"
            operation: "operation"
            objectId: "objectId"
            objectType: "objectType"
          - objectName: "objectName"
            subOperation: "subOperation"
            operation: "operation"
            objectId: "objectId"
            objectType: "objectType"
          associatedUserCount: 0
          name: "name"
          description: "description"
          id: 6
          twoFARequired: true
          requireEULA: true
          acctRequireTwoFA: true
        - enableRemoteSessionInCompanyLevel: true
          customHelpLabel: "customHelpLabel"
          customHelpURL: "customHelpURL"
          privileges:
          - objectName: "objectName"
            subOperation: "subOperation"
            operation: "operation"
            objectId: "objectId"
            objectType: "objectType"
          - objectName: "objectName"
            subOperation: "subOperation"
            operation: "operation"
            objectId: "objectId"
            objectType: "objectType"
          associatedUserCount: 0
          name: "name"
          description: "description"
          id: 6
          twoFARequired: true
          requireEULA: true
          acctRequireTwoFA: true
      errmsg: "errmsg"
      status: 6
  PieChartData:
    type: "object"
    properties:
      colorName:
        type: "string"
        readOnly: true
      dataPointName:
        type: "string"
        readOnly: true
      legend:
        type: "string"
        readOnly: true
      value:
        type: "number"
        format: "double"
        readOnly: true
  ServicePagination:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      searchId:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/ServiceBaseVersion1"
    example:
      total: 0
      searchId: "searchId"
      items:
      - {}
      - {}
  RoleResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/Role"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        enableRemoteSessionInCompanyLevel: true
        customHelpLabel: "customHelpLabel"
        customHelpURL: "customHelpURL"
        privileges:
        - objectName: "objectName"
          subOperation: "subOperation"
          operation: "operation"
          objectId: "objectId"
          objectType: "objectType"
        - objectName: "objectName"
          subOperation: "subOperation"
          operation: "operation"
          objectId: "objectId"
          objectType: "objectType"
        associatedUserCount: 0
        name: "name"
        description: "description"
        id: 6
        twoFARequired: true
        requireEULA: true
        acctRequireTwoFA: true
      errmsg: "errmsg"
      status: 1
  ServiceOverallStatusWidget:
    allOf:
    - $ref: "#/definitions/WidgetBaseVersion1"
    - type: "object"
      required:
      - "dashboardId"
      - "name"
      - "selectedServices"
      - "type"
      properties:
        rowSpan:
          type: "integer"
          format: "int32"
        lastUpdatedBy:
          type: "string"
          readOnly: true
        userPermission:
          type: "string"
          readOnly: true
        serviceSelectMode:
          type: "string"
        colSpan:
          type: "integer"
          format: "int32"
        description:
          type: "string"
        selectedServices:
          type: "array"
          items:
            $ref: "#/definitions/ServiceGroupData"
        type:
          type: "string"
        columnIdx:
          type: "integer"
          format: "int32"
        dashboardId:
          type: "integer"
          format: "int32"
        extra:
          type: "string"
        name:
          type: "string"
        lastUpdatedOn:
          type: "integer"
          format: "int64"
          readOnly: true
        theme:
          type: "string"
        interval:
          type: "integer"
          format: "int32"
        id:
          type: "integer"
          format: "int32"
        timescale:
          type: "string"
        order:
          type: "integer"
          format: "int32"
    x-discriminator-value: "serviceoverallstatus"
  DeviceDatasourceInstanceConfigResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/DeviceDataSourceInstanceConfig"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        instanceName: "instanceName"
        deviceDataSourceId: 0
        configStatus: 6
        version: 1
        deviceId: 5
        deltaConfig:
        - rowNo: 5
          type: "type"
          content: "content"
        - rowNo: 5
          type: "type"
          content: "content"
        deviceDisplayName: "deviceDisplayName"
        dataSourceName: "dataSourceName"
        alerts:
        - alertLevel: 2
          id: "id"
          alertId: "alertId"
          alertSummary: "alertSummary"
          timestamp: 7
        - alertLevel: 2
          id: "id"
          alertId: "alertId"
          alertSummary: "alertSummary"
          timestamp: 7
        dataSourceId: 9
        instanceId: 3
        configErrMsg: "configErrMsg"
        changeStatus: "changeStatus"
        id: "id"
        pollTimestamp: 2
        config: "config"
      errmsg: "errmsg"
      status: 4
  AwsEcsServiceDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
  OpsNoteServiceGroupScopeV1:
    allOf:
    - $ref: "#/definitions/OpsNoteScopeVersion1"
    - type: "object"
      required:
      - "type"
      properties:
        fullPath:
          type: "string"
        groupId:
          type: "integer"
          format: "int32"
        type:
          type: "string"
  CellData:
    type: "object"
    properties:
      alertStatus:
        type: "string"
        readOnly: true
      forecastDay:
        type: "integer"
        format: "int32"
        readOnly: true
      instanceId:
        type: "integer"
        format: "int32"
        readOnly: true
      instanceName:
        type: "string"
        readOnly: true
      alertSeverity:
        type: "string"
      daysUntilAlertList:
        type: "array"
        items:
          $ref: "#/definitions/DaysUntilAlert"
      value:
        type: "number"
        format: "double"
        readOnly: true
  RestCollectorBase:
    type: "object"
    properties:
      userChangeOn:
        type: "integer"
        format: "int64"
        readOnly: true
      confVersion:
        type: "string"
        readOnly: true
      updatedOnLocal:
        type: "string"
        readOnly: true
      hostname:
        type: "string"
        readOnly: true
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      ea:
        type: "boolean"
        readOnly: true
      watchdogUpdatedOnLocal:
        type: "string"
        readOnly: true
      hasFailOverDevice:
        type: "boolean"
        readOnly: true
      collectorGroupName:
        type: "string"
        readOnly: true
      netscanVersion:
        type: "string"
        readOnly: true
      inSDT:
        type: "boolean"
        readOnly: true
      updatedOn:
        type: "integer"
        format: "int64"
        readOnly: true
      automaticUpgradeInfo:
        $ref: "#/definitions/AutomaticUpgradeInfo"
      numberOfHosts:
        type: "integer"
        format: "int32"
        readOnly: true
      collectorConf:
        type: "string"
        readOnly: true
      sbproxyConf:
        type: "string"
        readOnly: true
      lastSentNotificationOnLocal:
        type: "string"
        readOnly: true
      customProperties:
        type: "array"
        items:
          $ref: "#/definitions/NameAndValue"
      predefinedConfig:
        readOnly: true
        $ref: "#/definitions/JSONObject"
      onetimeUpgradeInfo:
        $ref: "#/definitions/OnetimeUpgradeInfo"
      wrapperConf:
        type: "string"
        readOnly: true
      clearSent:
        type: "boolean"
        readOnly: true
      status:
        type: "integer"
        format: "int32"
        readOnly: true
      backupAgentId:
        type: "integer"
        format: "int32"
      specifiedCollectorDeviceGroupId:
        type: "integer"
        format: "int32"
      escalatingChainId:
        type: "integer"
        format: "int32"
      collectorSize:
        type: "string"
        readOnly: true
      ackedOnLocal:
        type: "string"
        readOnly: true
      watchdogConf:
        type: "string"
        readOnly: true
      description:
        type: "string"
      createdOn:
        type: "integer"
        format: "int64"
        readOnly: true
      platform:
        type: "string"
        readOnly: true
      isDown:
        type: "boolean"
        readOnly: true
      userVisibleHostsNum:
        type: "integer"
        format: "int32"
        readOnly: true
      canDowngrade:
        type: "boolean"
        readOnly: true
      ackComment:
        type: "string"
        readOnly: true
      nextUpgradeInfo:
        readOnly: true
        $ref: "#/definitions/NextUpgradeInfo"
      suppressAlertClear:
        type: "boolean"
      nextRecipient:
        type: "integer"
        format: "int32"
        readOnly: true
      ackedOn:
        type: "integer"
        format: "int64"
        readOnly: true
      userChangeOnLocal:
        type: "string"
        readOnly: true
      collectorDeviceId:
        type: "integer"
        format: "int32"
      ackedBy:
        type: "string"
        readOnly: true
      userPermission:
        type: "string"
        readOnly: true
      needAutoCreateCollectorDevice:
        type: "boolean"
      watchdogUpdatedOn:
        type: "integer"
        format: "int64"
        readOnly: true
      canDowngradeReason:
        type: "string"
        readOnly: true
      lastSentNotificationOn:
        type: "integer"
        format: "int64"
        readOnly: true
      acked:
        type: "boolean"
        readOnly: true
      onetimeDowngradeInfo:
        $ref: "#/definitions/DowngradeInfo"
      upTime:
        type: "integer"
        format: "int64"
        readOnly: true
      build:
        type: "string"
        readOnly: true
      previousVersion:
        type: "string"
        readOnly: true
      collectorGroupId:
        type: "integer"
        format: "int32"
      createdOnLocal:
        type: "string"
        readOnly: true
      enableFailBack:
        type: "boolean"
      resendIval:
        type: "integer"
        format: "int32"
      arch:
        type: "string"
        readOnly: true
      enableFailOverOnCollectorDevice:
        type: "boolean"
    example:
      userChangeOn: 0
      confVersion: "confVersion"
      updatedOnLocal: "updatedOnLocal"
      hostname: "hostname"
      id: 6
      ea: true
      watchdogUpdatedOnLocal: "watchdogUpdatedOnLocal"
      hasFailOverDevice: true
      collectorGroupName: "collectorGroupName"
      netscanVersion: "netscanVersion"
      inSDT: true
      updatedOn: 1
      automaticUpgradeInfo:
        dayOfWeek: "dayOfWeek"
        hour: 5
        createdBy: "createdBy"
        level: "level"
        description: "description"
        occurrence: "occurrence"
        type: "type"
        version: "version"
        minute: 5
      numberOfHosts: 2
      collectorConf: "collectorConf"
      sbproxyConf: "sbproxyConf"
      lastSentNotificationOnLocal: "lastSentNotificationOnLocal"
      customProperties:
      - name: "name"
        value: "value"
      - name: "name"
        value: "value"
      predefinedConfig: {}
      onetimeUpgradeInfo:
        createdBy: "createdBy"
        level: "level"
        endEpoch: 7
        description: "description"
        type: "type"
        majorVersion: 9
        minorVersion: 3
        startEpoch: 2
      wrapperConf: "wrapperConf"
      clearSent: true
      status: 4
      backupAgentId: 7
      specifiedCollectorDeviceGroupId: 1
      escalatingChainId: 1
      collectorSize: "collectorSize"
      ackedOnLocal: "ackedOnLocal"
      watchdogConf: "watchdogConf"
      description: "description"
      createdOn: 1
      platform: "platform"
      isDown: true
      userVisibleHostsNum: 6
      canDowngrade: true
      ackComment: "ackComment"
      nextUpgradeInfo:
        upgradeTime: "upgradeTime"
        stable: true
        majorVersion: 7
        minorVersion: 1
        mandatory: true
        upgradeTimeEpoch: 4
      suppressAlertClear: true
      nextRecipient: 5
      ackedOn: 9
      userChangeOnLocal: "userChangeOnLocal"
      collectorDeviceId: 9
      ackedBy: "ackedBy"
      userPermission: "userPermission"
      needAutoCreateCollectorDevice: true
      watchdogUpdatedOn: 6
      canDowngradeReason: "canDowngradeReason"
      lastSentNotificationOn: 8
      acked: true
      onetimeDowngradeInfo:
        createdBy: "createdBy"
        level: "level"
        endEpoch: 9
        description: "description"
        type: "type"
        majorVersion: 6
        minorVersion: 3
        startEpoch: 6
      upTime: 1
      build: "build"
      previousVersion: "previousVersion"
      collectorGroupId: 2
      createdOnLocal: "createdOnLocal"
      enableFailBack: true
      resendIval: 6
      arch: "arch"
      enableFailOverOnCollectorDevice: true
  ESXCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "counters"
      - "entity"
      properties:
        counters:
          type: "array"
          items:
            $ref: "#/definitions/DataSourceAttribute"
        entity:
          type: "string"
    x-discriminator-value: "esx"
  RestCloudAutoVisualInfo:
    type: "object"
    properties:
      accountProperties:
        type: "array"
        items:
          $ref: "#/definitions/NameAndValue"
      devices:
        type: "array"
        items:
          type: "string"
      services:
        type: "array"
        items:
          type: "string"
      type:
        type: "string"
      account:
        type: "string"
      deviceGroupFullPath:
        type: "string"
    example:
      accountProperties:
      - name: "name"
        value: "value"
      - name: "name"
        value: "value"
      devices:
      - "devices"
      - "devices"
      services:
      - "services"
      - "services"
      type: "type"
      account: "account"
      deviceGroupFullPath: "deviceGroupFullPath"
  CollectorGroupPaginationResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/CollectorGroupPagination"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        total: 0
        searchId: "searchId"
        items:
        - customProperties:
          - name: "name"
            value: "value"
          - name: "name"
            value: "value"
          userPermission: "userPermission"
          numOfCollectors: 0
          name: "name"
          description: "description"
          createOn: 6
          id: 1
        - customProperties:
          - name: "name"
            value: "value"
          - name: "name"
            value: "value"
          userPermission: "userPermission"
          numOfCollectors: 0
          name: "name"
          description: "description"
          createOn: 6
          id: 1
      errmsg: "errmsg"
      status: 6
  SLAReport:
    allOf:
    - $ref: "#/definitions/ReportBase"
    - type: "object"
      required:
      - "metrics"
      properties:
        dateRange:
          type: "string"
        displayWithAvailability:
          type: "boolean"
        columns:
          type: "array"
          items:
            $ref: "#/definitions/RestDynamicColumn"
        displaySummary:
          type: "boolean"
        dayInOneWeek:
          type: "string"
        periodInOneDay:
          type: "string"
        metrics:
          type: "array"
          items:
            $ref: "#/definitions/SlaMetric"
        unmonitoredTime:
          type: "integer"
          format: "int32"
    x-discriminator-value: "service level agreement"
  ScriptCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "groovyScript"
      - "linuxCmdline"
      - "linuxScript"
      - "scriptType"
      - "windowsCmdline"
      - "windowsScript"
      properties:
        groovyScript:
          type: "string"
        scriptType:
          type: "string"
        windowsScript:
          type: "string"
        linuxCmdline:
          type: "string"
        linuxScript:
          type: "string"
        windowsCmdline:
          type: "string"
    x-discriminator-value: "script"
  RestNetflowFilters:
    type: "object"
    properties:
      nodeB:
        type: "string"
      protocol:
        type: "string"
      top:
        type: "integer"
        format: "int32"
      ifIdx:
        type: "integer"
        format: "int32"
      ifName:
        type: "string"
      qosType:
        type: "string"
      ports:
        type: "string"
      nodeA:
        type: "string"
      direction:
        type: "string"
  Authentication:
    type: "object"
    required:
    - "password"
    - "type"
    - "userName"
    discriminator: "type"
    properties:
      password:
        type: "string"
      type:
        type: "string"
      userName:
        type: "string"
  ServiceCollector:
    type: "object"
    properties:
      hostname:
        type: "string"
        readOnly: true
      collectorGroupName:
        type: "string"
        readOnly: true
      collectorGroupId:
        type: "integer"
        format: "int32"
        readOnly: true
      description:
        type: "string"
        readOnly: true
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      status:
        type: "string"
        readOnly: true
  OpsNoteScopeVersion1:
    type: "object"
    discriminator: "type"
  NetflowGraphWidget:
    allOf:
    - $ref: "#/definitions/WidgetBaseVersion1"
    - type: "object"
      required:
      - "dashboardId"
      - "name"
      - "type"
      properties:
        rowSpan:
          type: "integer"
          format: "int32"
        lastUpdatedBy:
          type: "string"
          readOnly: true
        userPermission:
          type: "string"
          readOnly: true
        colSpan:
          type: "integer"
          format: "int32"
        description:
          type: "string"
        type:
          type: "string"
        deviceId:
          type: "integer"
          format: "int32"
        graph:
          type: "string"
        deviceDisplayName:
          type: "string"
          readOnly: true
        columnIdx:
          type: "integer"
          format: "int32"
        dashboardId:
          type: "integer"
          format: "int32"
        extra:
          type: "string"
        name:
          type: "string"
        netflowFilter:
          $ref: "#/definitions/RestNetflowFilters"
        lastUpdatedOn:
          type: "integer"
          format: "int64"
          readOnly: true
        theme:
          type: "string"
        interval:
          type: "integer"
          format: "int32"
        id:
          type: "integer"
          format: "int32"
        timescale:
          type: "string"
        order:
          type: "integer"
          format: "int32"
    x-discriminator-value: "netflowgraph"
  DeviceDataSourceInstanceConfigDiff:
    type: "object"
    properties:
      rowNo:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      content:
        type: "string"
    example:
      rowNo: 5
      type: "type"
      content: "content"
  ItemData:
    type: "object"
    properties:
      inSDTAndConfirmedErrorAlert:
        type: "integer"
        format: "int32"
        readOnly: true
      inSDT:
        type: "boolean"
        readOnly: true
      inSDTCriticalAlert:
        type: "integer"
        format: "int32"
        readOnly: true
      confirmedWarnAlert:
        type: "integer"
        format: "int32"
        readOnly: true
      entityId:
        type: "integer"
        format: "int32"
        readOnly: true
      type:
        type: "string"
        readOnly: true
      criticalAlert:
        type: "integer"
        format: "int32"
        readOnly: true
      resourceTemplateType:
        type: "string"
        readOnly: true
      parentId:
        type: "integer"
        format: "int32"
        readOnly: true
      errorAlert:
        type: "integer"
        format: "int32"
        readOnly: true
      confirmedCriticalAlert:
        type: "integer"
        format: "int32"
        readOnly: true
      inSDTWarnAlert:
        type: "integer"
        format: "int32"
        readOnly: true
      inSDTAndConfirmedWarnAlert:
        type: "integer"
        format: "int32"
        readOnly: true
      warnAlert:
        type: "integer"
        format: "int32"
        readOnly: true
      confirmedErrorAlert:
        type: "integer"
        format: "int32"
        readOnly: true
      name:
        type: "string"
        readOnly: true
      inSDTErrorAlert:
        type: "integer"
        format: "int32"
        readOnly: true
      inSDTAndConfirmedCriticalAlert:
        type: "integer"
        format: "int32"
        readOnly: true
  AwsRedShiftDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
  BigNumberInfo:
    type: "object"
    required:
    - "bigNumberItems"
    - "dataPoints"
    - "virtualDataPoints"
    properties:
      virtualDataPoints:
        type: "array"
        items:
          $ref: "#/definitions/VirtualDataPoint"
      counters:
        type: "array"
        items:
          $ref: "#/definitions/Counter"
      dataPoints:
        type: "array"
        items:
          $ref: "#/definitions/BigNumberDataPoint"
      bigNumberItems:
        type: "array"
        items:
          $ref: "#/definitions/BigNumberItem"
  WidgetTokenValue:
    type: "object"
    required:
    - "id"
    - "type"
    properties:
      fullPath:
        type: "string"
        readOnly: true
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      type:
        type: "string"
        readOnly: true
      value:
        type: "string"
  EscalationChainPagination:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      searchId:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/EscalatingChain"
    example:
      total: 0
      searchId: "searchId"
      items:
      - inAlerting: true
        throttlingAlerts: 6
        enableThrottling: true
        destinations:
        - period:
            weekDays:
            - 1
            - 1
            startMinutes: 5
            endMinutes: 5
          stages:
          - - method: "method"
              contact: "contact"
              type: "type"
              addr: "addr"
            - method: "method"
              contact: "contact"
              type: "type"
              addr: "addr"
          - - method: "method"
              contact: "contact"
              type: "type"
              addr: "addr"
            - method: "method"
              contact: "contact"
              type: "type"
              addr: "addr"
          type: "type"
        - period:
            weekDays:
            - 1
            - 1
            startMinutes: 5
            endMinutes: 5
          stages:
          - - method: "method"
              contact: "contact"
              type: "type"
              addr: "addr"
            - method: "method"
              contact: "contact"
              type: "type"
              addr: "addr"
          - - method: "method"
              contact: "contact"
              type: "type"
              addr: "addr"
            - method: "method"
              contact: "contact"
              type: "type"
              addr: "addr"
          type: "type"
        name: "name"
        description: "description"
        id: 2
        ccDestinations:
        - method: "method"
          contact: "contact"
          type: "type"
          addr: "addr"
        - method: "method"
          contact: "contact"
          type: "type"
          addr: "addr"
        throttlingPeriod: 7
      - inAlerting: true
        throttlingAlerts: 6
        enableThrottling: true
        destinations:
        - period:
            weekDays:
            - 1
            - 1
            startMinutes: 5
            endMinutes: 5
          stages:
          - - method: "method"
              contact: "contact"
              type: "type"
              addr: "addr"
            - method: "method"
              contact: "contact"
              type: "type"
              addr: "addr"
          - - method: "method"
              contact: "contact"
              type: "type"
              addr: "addr"
            - method: "method"
              contact: "contact"
              type: "type"
              addr: "addr"
          type: "type"
        - period:
            weekDays:
            - 1
            - 1
            startMinutes: 5
            endMinutes: 5
          stages:
          - - method: "method"
              contact: "contact"
              type: "type"
              addr: "addr"
            - method: "method"
              contact: "contact"
              type: "type"
              addr: "addr"
          - - method: "method"
              contact: "contact"
              type: "type"
              addr: "addr"
            - method: "method"
              contact: "contact"
              type: "type"
              addr: "addr"
          type: "type"
        name: "name"
        description: "description"
        id: 2
        ccDestinations:
        - method: "method"
          contact: "contact"
          type: "type"
          addr: "addr"
        - method: "method"
          contact: "contact"
          type: "type"
          addr: "addr"
        throttlingPeriod: 7
  DeviceGroupData:
    type: "object"
    properties:
      fullPath:
        type: "string"
        readOnly: true
      groupType:
        type: "string"
        readOnly: true
      numOfHosts:
        type: "integer"
        format: "int32"
        readOnly: true
      userPermission:
        type: "string"
        readOnly: true
      name:
        type: "string"
        readOnly: true
      numOfDirectSubGroups:
        type: "integer"
        format: "int64"
        readOnly: true
      description:
        type: "string"
        readOnly: true
      appliesTo:
        type: "string"
        readOnly: true
      numOfDirectDevices:
        type: "integer"
        format: "int64"
        readOnly: true
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      awsRegionsInfo:
        type: "string"
        readOnly: true
      azureRegionsInfo:
        type: "string"
        readOnly: true
    example:
      fullPath: "fullPath"
      groupType: "groupType"
      numOfHosts: 4
      userPermission: "userPermission"
      name: "name"
      numOfDirectSubGroups: 7
      description: "description"
      appliesTo: "appliesTo"
      numOfDirectDevices: 1
      id: 1
      awsRegionsInfo: "awsRegionsInfo"
      azureRegionsInfo: "azureRegionsInfo"
  PropertyMatchRule:
    type: "object"
    properties:
      underscore:
        type: "boolean"
      caseInsensitive:
        type: "boolean"
  DeviceGroup:
    type: "object"
    required:
    - "name"
    properties:
      fullPath:
        type: "string"
        readOnly: true
      alertStatus:
        type: "string"
        readOnly: true
      groupType:
        type: "string"
      numOfAWSDevices:
        type: "integer"
        format: "int64"
        readOnly: true
      description:
        type: "string"
      appliesTo:
        type: "string"
      disableAlerting:
        type: "boolean"
      autoVisualResult:
        readOnly: true
        $ref: "#/definitions/RestAutoVisualResult"
      awsRegionsInfo:
        type: "string"
        readOnly: true
      createdOn:
        type: "integer"
        format: "int64"
        readOnly: true
      hasNetflowEnabledDevices:
        type: "boolean"
        readOnly: true
      numOfAzureDevices:
        type: "integer"
        format: "int64"
        readOnly: true
      clusterAlertStatusPriority:
        type: "integer"
        format: "int32"
        readOnly: true
      defaultCollectorDescription:
        type: "string"
        readOnly: true
      defaultCollectorId:
        type: "integer"
        format: "int32"
      awsTestResult:
        readOnly: true
        $ref: "#/definitions/RestAwsAccountTestResult"
      extra:
        type: "string"
        description: "This is a JSON string"
      numOfDirectSubGroups:
        type: "integer"
        format: "int64"
        readOnly: true
      subGroups:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/DeviceGroupData"
      numOfDirectDevices:
        type: "integer"
        format: "int64"
        readOnly: true
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      enableNetflow:
        type: "boolean"
      alertStatusPriority:
        type: "integer"
        format: "int32"
        readOnly: true
      alertDisableStatus:
        type: "string"
        readOnly: true
      azureTestResultCode:
        type: "integer"
        format: "int32"
        readOnly: true
      effectiveAlertEnabled:
        type: "boolean"
        readOnly: true
      clusterAlertStatus:
        type: "string"
        readOnly: true
      userPermission:
        type: "string"
        readOnly: true
      groupStatus:
        type: "string"
        readOnly: true
      azureTestResult:
        readOnly: true
        $ref: "#/definitions/RestAzureAccountTestResult"
      sdtStatus:
        type: "string"
        readOnly: true
      parentId:
        type: "integer"
        format: "int32"
      awsTestResultCode:
        type: "integer"
        format: "int32"
        readOnly: true
      customProperties:
        type: "array"
        items:
          $ref: "#/definitions/NameAndValue"
      numOfHosts:
        type: "integer"
        format: "int64"
        readOnly: true
      name:
        type: "string"
      alertingDisabledOn:
        readOnly: true
        $ref: "#/definitions/TreeNode"
      azureRegionsInfo:
        type: "string"
        readOnly: true
    example:
      fullPath: "fullPath"
      alertStatus: "alertStatus"
      groupType: "groupType"
      numOfAWSDevices: 0
      description: "description"
      appliesTo: "appliesTo"
      disableAlerting: true
      autoVisualResult:
        autoDashboardResult:
          createdDashboardGroup:
            template: {}
            fullPath: "fullPath"
            userPermission: "userPermission"
            widgetTokens:
            - inheritList:
              - fullpath: "fullpath"
                value: "value"
              - fullpath: "fullpath"
                value: "value"
              name: "name"
              type: "type"
              value: "value"
            - inheritList:
              - fullpath: "fullpath"
                value: "value"
              - fullpath: "fullpath"
                value: "value"
              name: "name"
              type: "type"
              value: "value"
            name: "name"
            numOfDirectSubGroups: 0
            numOfDashboards: 6
            description: "description"
            id: 1
            dashboards:
            - userPermission: "userPermission"
              name: "name"
              sharable: true
              id: 5
            - userPermission: "userPermission"
              name: "name"
              sharable: true
              id: 5
            parentId: 5
            numOfDirectDashboards: 2
          createdDashboards:
          - owner: "owner"
            template: {}
            userPermission: "userPermission"
            groupId: 6
            fullName: "fullName"
            description: "description"
            sharable: true
            widgetsOrder: "widgetsOrder"
            groupName: "groupName"
            widgetTokens:
            - inheritList:
              - fullpath: "fullpath"
                value: "value"
              - fullpath: "fullpath"
                value: "value"
              name: "name"
              type: "type"
              value: "value"
            - inheritList:
              - fullpath: "fullpath"
                value: "value"
              - fullpath: "fullpath"
                value: "value"
              name: "name"
              type: "type"
              value: "value"
            name: "name"
            id: 1
            groupFullPath: "groupFullPath"
          - owner: "owner"
            template: {}
            userPermission: "userPermission"
            groupId: 6
            fullName: "fullName"
            description: "description"
            sharable: true
            widgetsOrder: "widgetsOrder"
            groupName: "groupName"
            widgetTokens:
            - inheritList:
              - fullpath: "fullpath"
                value: "value"
              - fullpath: "fullpath"
                value: "value"
              name: "name"
              type: "type"
              value: "value"
            - inheritList:
              - fullpath: "fullpath"
                value: "value"
              - fullpath: "fullpath"
                value: "value"
              name: "name"
              type: "type"
              value: "value"
            name: "name"
            id: 1
            groupFullPath: "groupFullPath"
          errMsg: "errMsg"
        autoReportResult:
          createdReports:
          - lastmodifyUserId: 6
            delivery: "delivery"
            userPermission: "userPermission"
            lastGenerateOn: 1
            reportLinkNum: 5
            groupId: 5
            format: "format"
            description: "description"
            lastGenerateSize: 2
            customReportTypeId: 7
            type: "type"
            lastGeneratePages: 9
            schedule: "schedule"
            recipients:
            - additionInfo: "additionInfo"
              method: "method"
              type: "type"
              addr: "addr"
            - additionInfo: "additionInfo"
              method: "method"
              type: "type"
              addr: "addr"
            customReportTypeName: "customReportTypeName"
            name: "name"
            enableViewAsOtherUser: true
            lastmodifyUserName: "lastmodifyUserName"
            id: 3
          - lastmodifyUserId: 6
            delivery: "delivery"
            userPermission: "userPermission"
            lastGenerateOn: 1
            reportLinkNum: 5
            groupId: 5
            format: "format"
            description: "description"
            lastGenerateSize: 2
            customReportTypeId: 7
            type: "type"
            lastGeneratePages: 9
            schedule: "schedule"
            recipients:
            - additionInfo: "additionInfo"
              method: "method"
              type: "type"
              addr: "addr"
            - additionInfo: "additionInfo"
              method: "method"
              type: "type"
              addr: "addr"
            customReportTypeName: "customReportTypeName"
            name: "name"
            enableViewAsOtherUser: true
            lastmodifyUserName: "lastmodifyUserName"
            id: 3
          errMsg: "errMsg"
          createdReportGroup:
            userPermission: "userPermission"
            name: "name"
            description: "description"
            id: 5
            reportsCount: 5
        errMsg: "errMsg"
      awsRegionsInfo: "awsRegionsInfo"
      createdOn: 2
      hasNetflowEnabledDevices: true
      numOfAzureDevices: 7
      clusterAlertStatusPriority: 9
      defaultCollectorDescription: "defaultCollectorDescription"
      defaultCollectorId: 3
      awsTestResult:
        noPermissionServices:
        - "noPermissionServices"
        - "noPermissionServices"
        detailLink: "detailLink"
        nonPermissionErrors:
        - "nonPermissionErrors"
        - "nonPermissionErrors"
      extra: "extra"
      numOfDirectSubGroups: 2
      subGroups:
      - fullPath: "fullPath"
        groupType: "groupType"
        numOfHosts: 4
        userPermission: "userPermission"
        name: "name"
        numOfDirectSubGroups: 7
        description: "description"
        appliesTo: "appliesTo"
        numOfDirectDevices: 1
        id: 1
        awsRegionsInfo: "awsRegionsInfo"
        azureRegionsInfo: "azureRegionsInfo"
      - fullPath: "fullPath"
        groupType: "groupType"
        numOfHosts: 4
        userPermission: "userPermission"
        name: "name"
        numOfDirectSubGroups: 7
        description: "description"
        appliesTo: "appliesTo"
        numOfDirectDevices: 1
        id: 1
        awsRegionsInfo: "awsRegionsInfo"
        azureRegionsInfo: "azureRegionsInfo"
      numOfDirectDevices: 1
      id: 6
      enableNetflow: true
      alertStatusPriority: 7
      alertDisableStatus: "alertDisableStatus"
      azureTestResultCode: 1
      effectiveAlertEnabled: true
      clusterAlertStatus: "clusterAlertStatus"
      userPermission: "userPermission"
      groupStatus: "groupStatus"
      azureTestResult:
        noPermissionServices: {}
        detailLink: "detailLink"
      sdtStatus: "sdtStatus"
      parentId: 4
      awsTestResultCode: 5
      customProperties:
      - name: "name"
        value: "value"
      - name: "name"
        value: "value"
      numOfHosts: 9
      name: "name"
      alertingDisabledOn:
        userPermission: "userPermission"
        displayName: "displayName"
        id: 1
        type: "type"
      azureRegionsInfo: "azureRegionsInfo"
  OpsNoteTagBase:
    type: "object"
    required:
    - "name"
    properties:
      updateOnInSec:
        type: "integer"
        format: "int64"
        readOnly: true
      createdOnInSec:
        type: "integer"
        format: "int64"
        readOnly: true
      name:
        type: "string"
      id:
        type: "string"
        readOnly: true
    example:
      updateOnInSec: 1
      createdOnInSec: 5
      name: "name"
      id: "id"
  EscalatingChain:
    type: "object"
    required:
    - "destinations"
    - "enableThrottling"
    - "name"
    - "throttlingAlerts"
    - "throttlingPeriod"
    properties:
      inAlerting:
        type: "boolean"
        readOnly: true
      throttlingAlerts:
        type: "integer"
        format: "int32"
      enableThrottling:
        type: "boolean"
      destinations:
        type: "array"
        items:
          $ref: "#/definitions/Chain"
      name:
        type: "string"
      description:
        type: "string"
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      ccDestinations:
        type: "array"
        items:
          $ref: "#/definitions/Recipient"
      throttlingPeriod:
        type: "integer"
        format: "int32"
    example:
      inAlerting: true
      throttlingAlerts: 6
      enableThrottling: true
      destinations:
      - period:
          weekDays:
          - 1
          - 1
          startMinutes: 5
          endMinutes: 5
        stages:
        - - method: "method"
            contact: "contact"
            type: "type"
            addr: "addr"
          - method: "method"
            contact: "contact"
            type: "type"
            addr: "addr"
        - - method: "method"
            contact: "contact"
            type: "type"
            addr: "addr"
          - method: "method"
            contact: "contact"
            type: "type"
            addr: "addr"
        type: "type"
      - period:
          weekDays:
          - 1
          - 1
          startMinutes: 5
          endMinutes: 5
        stages:
        - - method: "method"
            contact: "contact"
            type: "type"
            addr: "addr"
          - method: "method"
            contact: "contact"
            type: "type"
            addr: "addr"
        - - method: "method"
            contact: "contact"
            type: "type"
            addr: "addr"
          - method: "method"
            contact: "contact"
            type: "type"
            addr: "addr"
        type: "type"
      name: "name"
      description: "description"
      id: 2
      ccDestinations:
      - method: "method"
        contact: "contact"
        type: "type"
        addr: "addr"
      - method: "method"
        contact: "contact"
        type: "type"
        addr: "addr"
      throttlingPeriod: 7
  ILP:
    type: "object"
    required:
    - "lmName"
    - "wmiName"
    properties:
      wmiName:
        type: "string"
      lmName:
        type: "string"
  AlertAck:
    type: "object"
    required:
    - "ackComment"
    properties:
      ackComment:
        type: "string"
    example:
      ackComment: "ackComment"
  WebServiceReport:
    allOf:
    - $ref: "#/definitions/ReportBase"
    - type: "object"
      required:
      - "servicesValType"
      properties:
        includeTypes:
          type: "array"
          items:
            type: "integer"
            format: "int32"
        exclude100Availability:
          type: "boolean"
        servicesValType:
          type: "string"
        displayType:
          type: "integer"
          format: "int32"
        excludeSDT:
          type: "boolean"
        dateRange:
          type: "string"
        servicesVal:
          type: "string"
    x-discriminator-value: "website service overview"
  ServiceCheckPoint:
    type: "object"
    properties:
      geoInfo:
        type: "string"
        readOnly: true
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      smgId:
        type: "integer"
        format: "int32"
        readOnly: true
  OpsNotePaginationResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/OpsNotePagination"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        total: 0
        searchId: "searchId"
        items:
        - note: "note"
          createdBy: "createdBy"
          id: "id"
          happenOnInSec: 6
          tags:
          - updateOnInSec: 1
            createdOnInSec: 5
            name: "name"
            id: "id"
          - updateOnInSec: 1
            createdOnInSec: 5
            name: "name"
            id: "id"
        - note: "note"
          createdBy: "createdBy"
          id: "id"
          happenOnInSec: 6
          tags:
          - updateOnInSec: 1
            createdOnInSec: 5
            name: "name"
            id: "id"
          - updateOnInSec: 1
            createdOnInSec: 5
            name: "name"
            id: "id"
      errmsg: "errmsg"
      status: 5
  WidgetBaseVersion1:
    type: "object"
    discriminator: "type"
  Counter:
    type: "object"
    properties:
      name:
        type: "string"
      appliesTo:
        type: "string"
  CloudWatchAutoDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
      required:
      - "clusterDimension"
      - "namespace"
      - "nodeDimension"
      properties:
        clusterDimension:
          type: "string"
        nodeDimension:
          type: "string"
        namespace:
          type: "string"
    x-discriminator-value: "ad_cloudwatch"
  DeviceResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/Device"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        alertStatus: "alertStatus"
        netflowCollectorGroupName: "netflowCollectorGroupName"
        azureState: 6
        relatedDeviceId: 1
        displayName: "displayName"
        link: "link"
        awsState: 5
        description: "description"
        disableAlerting: true
        netflowCollectorGroupId: 5
        createdOn: 2
        ancestorHasDisabledLogicModule: true
        systemProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        hostStatus: "hostStatus"
        autoPropsUpdatedOn: 7
        scanConfigId: 9
        inheritedProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        id: 3
        enableNetflow: true
        lastDataTime: 2
        alertStatusPriority: 4
        alertDisableStatus: "alertDisableStatus"
        hostGroupIds: "hostGroupIds"
        upTimeInSeconds: 7
        deviceType: 1
        currentCollectorId: 1
        netflowCollectorDescription: "netflowCollectorDescription"
        netflowCollectorId: 1
        userPermission: "userPermission"
        hasDisabledSubResource: true
        autoPropsAssignedOn: 6
        updatedOn: 7
        preferredCollectorGroupName: "preferredCollectorGroupName"
        sdtStatus: "sdtStatus"
        preferredCollectorGroupId: 1
        autoProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        customProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        toDeleteTimeInMs: 4
        collectorDescription: "collectorDescription"
        preferredCollectorId: 5
        lastRawdataTime: 9
        name: "name"
        alertingDisabledOn:
          userPermission: "userPermission"
          displayName: "displayName"
          id: 1
          type: "type"
        deletedTimeInMs: 9
      errmsg: "errmsg"
      status: 0
  ColorThreshold:
    type: "object"
    required:
    - "level"
    - "relation"
    - "threshold"
    properties:
      level:
        type: "integer"
        format: "int32"
      threshold:
        type: "number"
        format: "double"
      relation:
        type: "string"
  NetAppCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "netAppAPI"
      - "netAppAggregate"
      - "netAppIndex"
      - "netAppInstance"
      - "netAppObject"
      - "netAppType"
      - "netAppXML"
      - "netAppXMLBulk"
      - "netAppXMLBulkLocator"
      - "netAppXMLIndex"
      - "netAppXMLInstance"
      - "netAppXMLLocator"
      properties:
        netAppType:
          type: "string"
        ip:
          type: "string"
          readOnly: true
        netAppInstance:
          type: "string"
        netAppXMLBulkLocator:
          type: "string"
        netAppXML:
          type: "string"
        netAppAPI:
          type: "string"
        params:
          $ref: "#/definitions/JSONArray"
        netAppAggregate:
          type: "string"
        netAppXMLIndex:
          type: "string"
        netAppXMLInstance:
          type: "string"
        netAppIndex:
          type: "string"
        netAppXMLBulk:
          type: "string"
        netAppObject:
          type: "string"
        netAppXMLLocator:
          type: "string"
    x-discriminator-value: "netapp"
  CollectorPaginationResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/CollectorPagination"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        total: 0
        searchId: "searchId"
        items:
        - userChangeOn: 0
          confVersion: "confVersion"
          updatedOnLocal: "updatedOnLocal"
          hostname: "hostname"
          id: 6
          ea: true
          watchdogUpdatedOnLocal: "watchdogUpdatedOnLocal"
          hasFailOverDevice: true
          collectorGroupName: "collectorGroupName"
          netscanVersion: "netscanVersion"
          inSDT: true
          updatedOn: 1
          automaticUpgradeInfo:
            dayOfWeek: "dayOfWeek"
            hour: 5
            createdBy: "createdBy"
            level: "level"
            description: "description"
            occurrence: "occurrence"
            type: "type"
            version: "version"
            minute: 5
          numberOfHosts: 2
          collectorConf: "collectorConf"
          sbproxyConf: "sbproxyConf"
          lastSentNotificationOnLocal: "lastSentNotificationOnLocal"
          customProperties:
          - name: "name"
            value: "value"
          - name: "name"
            value: "value"
          predefinedConfig: {}
          onetimeUpgradeInfo:
            createdBy: "createdBy"
            level: "level"
            endEpoch: 7
            description: "description"
            type: "type"
            majorVersion: 9
            minorVersion: 3
            startEpoch: 2
          wrapperConf: "wrapperConf"
          clearSent: true
          status: 4
          backupAgentId: 7
          specifiedCollectorDeviceGroupId: 1
          escalatingChainId: 1
          collectorSize: "collectorSize"
          ackedOnLocal: "ackedOnLocal"
          watchdogConf: "watchdogConf"
          description: "description"
          createdOn: 1
          platform: "platform"
          isDown: true
          userVisibleHostsNum: 6
          canDowngrade: true
          ackComment: "ackComment"
          nextUpgradeInfo:
            upgradeTime: "upgradeTime"
            stable: true
            majorVersion: 7
            minorVersion: 1
            mandatory: true
            upgradeTimeEpoch: 4
          suppressAlertClear: true
          nextRecipient: 5
          ackedOn: 9
          userChangeOnLocal: "userChangeOnLocal"
          collectorDeviceId: 9
          ackedBy: "ackedBy"
          userPermission: "userPermission"
          needAutoCreateCollectorDevice: true
          watchdogUpdatedOn: 6
          canDowngradeReason: "canDowngradeReason"
          lastSentNotificationOn: 8
          acked: true
          onetimeDowngradeInfo:
            createdBy: "createdBy"
            level: "level"
            endEpoch: 9
            description: "description"
            type: "type"
            majorVersion: 6
            minorVersion: 3
            startEpoch: 6
          upTime: 1
          build: "build"
          previousVersion: "previousVersion"
          collectorGroupId: 2
          createdOnLocal: "createdOnLocal"
          enableFailBack: true
          resendIval: 6
          arch: "arch"
          enableFailOverOnCollectorDevice: true
        - userChangeOn: 0
          confVersion: "confVersion"
          updatedOnLocal: "updatedOnLocal"
          hostname: "hostname"
          id: 6
          ea: true
          watchdogUpdatedOnLocal: "watchdogUpdatedOnLocal"
          hasFailOverDevice: true
          collectorGroupName: "collectorGroupName"
          netscanVersion: "netscanVersion"
          inSDT: true
          updatedOn: 1
          automaticUpgradeInfo:
            dayOfWeek: "dayOfWeek"
            hour: 5
            createdBy: "createdBy"
            level: "level"
            description: "description"
            occurrence: "occurrence"
            type: "type"
            version: "version"
            minute: 5
          numberOfHosts: 2
          collectorConf: "collectorConf"
          sbproxyConf: "sbproxyConf"
          lastSentNotificationOnLocal: "lastSentNotificationOnLocal"
          customProperties:
          - name: "name"
            value: "value"
          - name: "name"
            value: "value"
          predefinedConfig: {}
          onetimeUpgradeInfo:
            createdBy: "createdBy"
            level: "level"
            endEpoch: 7
            description: "description"
            type: "type"
            majorVersion: 9
            minorVersion: 3
            startEpoch: 2
          wrapperConf: "wrapperConf"
          clearSent: true
          status: 4
          backupAgentId: 7
          specifiedCollectorDeviceGroupId: 1
          escalatingChainId: 1
          collectorSize: "collectorSize"
          ackedOnLocal: "ackedOnLocal"
          watchdogConf: "watchdogConf"
          description: "description"
          createdOn: 1
          platform: "platform"
          isDown: true
          userVisibleHostsNum: 6
          canDowngrade: true
          ackComment: "ackComment"
          nextUpgradeInfo:
            upgradeTime: "upgradeTime"
            stable: true
            majorVersion: 7
            minorVersion: 1
            mandatory: true
            upgradeTimeEpoch: 4
          suppressAlertClear: true
          nextRecipient: 5
          ackedOn: 9
          userChangeOnLocal: "userChangeOnLocal"
          collectorDeviceId: 9
          ackedBy: "ackedBy"
          userPermission: "userPermission"
          needAutoCreateCollectorDevice: true
          watchdogUpdatedOn: 6
          canDowngradeReason: "canDowngradeReason"
          lastSentNotificationOn: 8
          acked: true
          onetimeDowngradeInfo:
            createdBy: "createdBy"
            level: "level"
            endEpoch: 9
            description: "description"
            type: "type"
            majorVersion: 6
            minorVersion: 3
            startEpoch: 6
          upTime: 1
          build: "build"
          previousVersion: "previousVersion"
          collectorGroupId: 2
          createdOnLocal: "createdOnLocal"
          enableFailBack: true
          resendIval: 6
          arch: "arch"
          enableFailOverOnCollectorDevice: true
      errmsg: "errmsg"
      status: 6
  DashboardGroupPagination:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      searchId:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/DashboardGroup"
    example:
      total: 0
      searchId: "searchId"
      items:
      - template: {}
        fullPath: "fullPath"
        userPermission: "userPermission"
        widgetTokens:
        - inheritList:
          - fullpath: "fullpath"
            value: "value"
          - fullpath: "fullpath"
            value: "value"
          name: "name"
          type: "type"
          value: "value"
        - inheritList:
          - fullpath: "fullpath"
            value: "value"
          - fullpath: "fullpath"
            value: "value"
          name: "name"
          type: "type"
          value: "value"
        name: "name"
        numOfDirectSubGroups: 0
        numOfDashboards: 6
        description: "description"
        id: 1
        dashboards:
        - userPermission: "userPermission"
          name: "name"
          sharable: true
          id: 5
        - userPermission: "userPermission"
          name: "name"
          sharable: true
          id: 5
        parentId: 5
        numOfDirectDashboards: 2
      - template: {}
        fullPath: "fullPath"
        userPermission: "userPermission"
        widgetTokens:
        - inheritList:
          - fullpath: "fullpath"
            value: "value"
          - fullpath: "fullpath"
            value: "value"
          name: "name"
          type: "type"
          value: "value"
        - inheritList:
          - fullpath: "fullpath"
            value: "value"
          - fullpath: "fullpath"
            value: "value"
          name: "name"
          type: "type"
          value: "value"
        name: "name"
        numOfDirectSubGroups: 0
        numOfDashboards: 6
        description: "description"
        id: 1
        dashboards:
        - userPermission: "userPermission"
          name: "name"
          sharable: true
          id: 5
        - userPermission: "userPermission"
          name: "name"
          sharable: true
          id: 5
        parentId: 5
        numOfDirectDashboards: 2
  DeviceDataSource:
    type: "object"
    properties:
      alertStatus:
        type: "string"
        readOnly: true
      autoDiscovery:
        type: "boolean"
        readOnly: true
      dataSourceDisplayName:
        type: "string"
        readOnly: true
      deviceId:
        type: "integer"
        format: "int32"
        readOnly: true
      deviceName:
        type: "string"
        readOnly: true
      createdOn:
        type: "integer"
        format: "int64"
        readOnly: true
      dataSourceId:
        type: "integer"
        format: "int32"
        readOnly: true
      graphs:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/DeviceDatasourceGraph"
      sdtAt:
        type: "string"
        readOnly: true
      nextAutoDiscoveryOn:
        type: "integer"
        format: "int64"
        readOnly: true
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      alertStatusPriority:
        type: "integer"
        format: "int32"
        readOnly: true
      alertDisableStatus:
        type: "string"
        readOnly: true
      dataSourceDescription:
        type: "string"
        readOnly: true
      overviewGraphs:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/DeviceDatasourceGraph"
      stopMonitoring:
        type: "boolean"
        readOnly: true
      assignedOn:
        type: "integer"
        format: "int64"
        readOnly: true
      isMultiple:
        type: "boolean"
        readOnly: true
      instanceNumber:
        type: "integer"
        format: "int32"
        readOnly: true
      updatedOn:
        type: "integer"
        format: "int64"
        readOnly: true
      sdtStatus:
        type: "string"
        readOnly: true
      dataSourceName:
        type: "string"
        readOnly: true
      deviceDisplayName:
        type: "string"
        readOnly: true
      monitoringInstanceNumber:
        type: "integer"
        format: "int32"
        readOnly: true
      groupsDisabledThisSource:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/TreeNode"
      groupName:
        type: "string"
        readOnly: true
      instanceAutoGroupEnabled:
        type: "boolean"
        readOnly: true
      alertingDisabledOn:
        readOnly: true
        $ref: "#/definitions/TreeNode"
      dataSourceType:
        type: "string"
        readOnly: true
      status:
        type: "integer"
        format: "int32"
        readOnly: true
    example:
      alertStatus: "alertStatus"
      autoDiscovery: true
      dataSourceDisplayName: "dataSourceDisplayName"
      deviceId: 6
      deviceName: "deviceName"
      createdOn: 1
      dataSourceId: 5
      graphs:
      - displayPrio: 5
        name: "name"
        id: 2
        title: "title"
      - displayPrio: 5
        name: "name"
        id: 2
        title: "title"
      sdtAt: "sdtAt"
      nextAutoDiscoveryOn: 7
      id: 9
      alertStatusPriority: 3
      alertDisableStatus: "alertDisableStatus"
      dataSourceDescription: "dataSourceDescription"
      overviewGraphs:
      - displayPrio: 5
        name: "name"
        id: 2
        title: "title"
      - displayPrio: 5
        name: "name"
        id: 2
        title: "title"
      stopMonitoring: true
      assignedOn: 2
      isMultiple: true
      instanceNumber: 4
      updatedOn: 7
      sdtStatus: "sdtStatus"
      dataSourceName: "dataSourceName"
      deviceDisplayName: "deviceDisplayName"
      monitoringInstanceNumber: 1
      groupsDisabledThisSource:
      - userPermission: "userPermission"
        displayName: "displayName"
        id: 1
        type: "type"
      - userPermission: "userPermission"
        displayName: "displayName"
        id: 1
        type: "type"
      groupName: "groupName"
      instanceAutoGroupEnabled: true
      alertingDisabledOn:
        userPermission: "userPermission"
        displayName: "displayName"
        id: 1
        type: "type"
      dataSourceType: "dataSourceType"
      status: 1
  AzureStorageServiceLimitsCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "period"
      properties:
        period:
          type: "integer"
          format: "int32"
  ReportBase:
    type: "object"
    required:
    - "groupId"
    - "name"
    discriminator: "type"
    properties:
      lastmodifyUserId:
        type: "integer"
        format: "int32"
        readOnly: true
      delivery:
        type: "string"
      userPermission:
        type: "string"
        readOnly: true
      lastGenerateOn:
        type: "integer"
        format: "int64"
        readOnly: true
      reportLinkNum:
        type: "integer"
        format: "int32"
        readOnly: true
      groupId:
        type: "integer"
        format: "int32"
      format:
        type: "string"
      description:
        type: "string"
      lastGenerateSize:
        type: "integer"
        format: "int64"
        readOnly: true
      customReportTypeId:
        type: "integer"
        format: "int32"
        readOnly: true
      type:
        type: "string"
      lastGeneratePages:
        type: "integer"
        format: "int32"
        readOnly: true
      schedule:
        type: "string"
      recipients:
        type: "array"
        items:
          $ref: "#/definitions/ReportRecipient"
      customReportTypeName:
        type: "string"
        readOnly: true
      name:
        type: "string"
      enableViewAsOtherUser:
        type: "boolean"
        readOnly: true
      lastmodifyUserName:
        type: "string"
        readOnly: true
      id:
        type: "integer"
        format: "int32"
        readOnly: true
    example:
      lastmodifyUserId: 6
      delivery: "delivery"
      userPermission: "userPermission"
      lastGenerateOn: 1
      reportLinkNum: 5
      groupId: 5
      format: "format"
      description: "description"
      lastGenerateSize: 2
      customReportTypeId: 7
      type: "type"
      lastGeneratePages: 9
      schedule: "schedule"
      recipients:
      - additionInfo: "additionInfo"
        method: "method"
        type: "type"
        addr: "addr"
      - additionInfo: "additionInfo"
        method: "method"
        type: "type"
        addr: "addr"
      customReportTypeName: "customReportTypeName"
      name: "name"
      enableViewAsOtherUser: true
      lastmodifyUserName: "lastmodifyUserName"
      id: 3
  AwsServiceRegionDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
      required:
      - "awsServiceName"
      properties:
        awsServiceName:
          type: "string"
  DatasourcePagination:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      searchId:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/DataSource"
    example:
      total: 0
      searchId: "searchId"
      items:
      - collectorAttribute:
          name: "name"
        autoDiscoveryConfig:
          persistentInstance: true
          scheduleInterval: 6
          deleteInactiveInstance: true
          method:
            name: "name"
          instanceAutoGroupMethod: "instanceAutoGroupMethod"
          instanceAutoGroupMethodParams: "instanceAutoGroupMethodParams"
          filters:
          - comment: "comment"
            attribute: "attribute"
            operation: "operation"
            value: "value"
          - comment: "comment"
            attribute: "attribute"
            operation: "operation"
            value: "value"
          disableInstance: true
        displayName: "displayName"
        description: "description"
        appliesTo: "appliesTo"
        enableAutoDiscovery: true
        technology: "technology"
        published: 1
        version: 5
        tags: "tags"
        auditVersion: 5
        hasMultiInstances: true
        collectMethod: "collectMethod"
        collectInterval: 2
        name: "name"
        dataPoints:
        - alertForNoData: 7
          maxValue: "maxValue"
          dataType: 9
          postProcessorMethod: "postProcessorMethod"
          postProcessorParam: "postProcessorParam"
          maxDigits: 3
          rawDataFieldName: "rawDataFieldName"
          description: "description"
          alertClearTransitionInterval: 2
          userParam3: "userParam3"
          userParam2: "userParam2"
          type: 4
          alertExprNote: "alertExprNote"
          dataSourceId: 7
          minValue: "minValue"
          alertBody: "alertBody"
          userParam1: "userParam1"
          name: "name"
          alertSubject: "alertSubject"
          id: 1
          alertTransitionInterval: 1
          alertExpr: "alertExpr"
        - alertForNoData: 7
          maxValue: "maxValue"
          dataType: 9
          postProcessorMethod: "postProcessorMethod"
          postProcessorParam: "postProcessorParam"
          maxDigits: 3
          rawDataFieldName: "rawDataFieldName"
          description: "description"
          alertClearTransitionInterval: 2
          userParam3: "userParam3"
          userParam2: "userParam2"
          type: 4
          alertExprNote: "alertExprNote"
          dataSourceId: 7
          minValue: "minValue"
          alertBody: "alertBody"
          userParam1: "userParam1"
          name: "name"
          alertSubject: "alertSubject"
          id: 1
          alertTransitionInterval: 1
          alertExpr: "alertExpr"
        id: 1
        group: "group"
      - collectorAttribute:
          name: "name"
        autoDiscoveryConfig:
          persistentInstance: true
          scheduleInterval: 6
          deleteInactiveInstance: true
          method:
            name: "name"
          instanceAutoGroupMethod: "instanceAutoGroupMethod"
          instanceAutoGroupMethodParams: "instanceAutoGroupMethodParams"
          filters:
          - comment: "comment"
            attribute: "attribute"
            operation: "operation"
            value: "value"
          - comment: "comment"
            attribute: "attribute"
            operation: "operation"
            value: "value"
          disableInstance: true
        displayName: "displayName"
        description: "description"
        appliesTo: "appliesTo"
        enableAutoDiscovery: true
        technology: "technology"
        published: 1
        version: 5
        tags: "tags"
        auditVersion: 5
        hasMultiInstances: true
        collectMethod: "collectMethod"
        collectInterval: 2
        name: "name"
        dataPoints:
        - alertForNoData: 7
          maxValue: "maxValue"
          dataType: 9
          postProcessorMethod: "postProcessorMethod"
          postProcessorParam: "postProcessorParam"
          maxDigits: 3
          rawDataFieldName: "rawDataFieldName"
          description: "description"
          alertClearTransitionInterval: 2
          userParam3: "userParam3"
          userParam2: "userParam2"
          type: 4
          alertExprNote: "alertExprNote"
          dataSourceId: 7
          minValue: "minValue"
          alertBody: "alertBody"
          userParam1: "userParam1"
          name: "name"
          alertSubject: "alertSubject"
          id: 1
          alertTransitionInterval: 1
          alertExpr: "alertExpr"
        - alertForNoData: 7
          maxValue: "maxValue"
          dataType: 9
          postProcessorMethod: "postProcessorMethod"
          postProcessorParam: "postProcessorParam"
          maxDigits: 3
          rawDataFieldName: "rawDataFieldName"
          description: "description"
          alertClearTransitionInterval: 2
          userParam3: "userParam3"
          userParam2: "userParam2"
          type: 4
          alertExprNote: "alertExprNote"
          dataSourceId: 7
          minValue: "minValue"
          alertBody: "alertBody"
          userParam1: "userParam1"
          name: "name"
          alertSubject: "alertSubject"
          id: 1
          alertTransitionInterval: 1
          alertExpr: "alertExpr"
        id: 1
        group: "group"
  NetflowEndpoint:
    allOf:
    - $ref: "#/definitions/NetflowDataBase"
    - type: "object"
      properties:
        lastSeen:
          type: "integer"
          format: "int64"
          readOnly: true
        percentUsage:
          type: "number"
          format: "double"
          readOnly: true
        IP:
          type: "string"
          readOnly: true
        usage:
          type: "number"
          format: "double"
          readOnly: true
        dns:
          type: "string"
          readOnly: true
        type:
          type: "string"
          readOnly: true
    x-discriminator-value: "endpoint"
  Device:
    type: "object"
    required:
    - "displayName"
    - "hostGroupIds"
    - "name"
    - "preferredCollectorId"
    properties:
      alertStatus:
        type: "string"
        readOnly: true
      netflowCollectorGroupName:
        type: "string"
        readOnly: true
      azureState:
        type: "integer"
        format: "int32"
        readOnly: true
      relatedDeviceId:
        type: "integer"
        format: "int32"
      displayName:
        type: "string"
      link:
        type: "string"
      awsState:
        type: "integer"
        format: "int32"
        readOnly: true
      description:
        type: "string"
      disableAlerting:
        type: "boolean"
      netflowCollectorGroupId:
        type: "integer"
        format: "int32"
        readOnly: true
      createdOn:
        type: "integer"
        format: "int64"
        readOnly: true
      ancestorHasDisabledLogicModule:
        type: "boolean"
        readOnly: true
      systemProperties:
        type: "array"
        items:
          $ref: "#/definitions/NameAndValue"
      hostStatus:
        type: "string"
        readOnly: true
      autoPropsUpdatedOn:
        type: "integer"
        format: "int64"
        readOnly: true
      scanConfigId:
        type: "integer"
        format: "int32"
      inheritedProperties:
        type: "array"
        items:
          $ref: "#/definitions/NameAndValue"
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      enableNetflow:
        type: "boolean"
      lastDataTime:
        type: "integer"
        format: "int64"
        readOnly: true
      alertStatusPriority:
        type: "integer"
        format: "int32"
        readOnly: true
      alertDisableStatus:
        type: "string"
        readOnly: true
      hostGroupIds:
        type: "string"
      upTimeInSeconds:
        type: "integer"
        format: "int64"
        readOnly: true
      deviceType:
        type: "integer"
        format: "int32"
      currentCollectorId:
        type: "integer"
        format: "int32"
      netflowCollectorDescription:
        type: "string"
        readOnly: true
      netflowCollectorId:
        type: "integer"
        format: "int32"
      userPermission:
        type: "string"
        readOnly: true
      hasDisabledSubResource:
        type: "boolean"
        readOnly: true
      autoPropsAssignedOn:
        type: "integer"
        format: "int64"
        readOnly: true
      updatedOn:
        type: "integer"
        format: "int64"
        readOnly: true
      preferredCollectorGroupName:
        type: "string"
        readOnly: true
      sdtStatus:
        type: "string"
        readOnly: true
      preferredCollectorGroupId:
        type: "integer"
        format: "int32"
        readOnly: true
      autoProperties:
        type: "array"
        items:
          $ref: "#/definitions/NameAndValue"
      customProperties:
        type: "array"
        items:
          $ref: "#/definitions/NameAndValue"
      toDeleteTimeInMs:
        type: "integer"
        format: "int64"
        readOnly: true
      collectorDescription:
        type: "string"
        readOnly: true
      preferredCollectorId:
        type: "integer"
        format: "int32"
      lastRawdataTime:
        type: "integer"
        format: "int64"
        readOnly: true
      name:
        type: "string"
      alertingDisabledOn:
        readOnly: true
        $ref: "#/definitions/TreeNode"
      deletedTimeInMs:
        type: "integer"
        format: "int64"
        readOnly: true
    example:
      alertStatus: "alertStatus"
      netflowCollectorGroupName: "netflowCollectorGroupName"
      azureState: 6
      relatedDeviceId: 1
      displayName: "displayName"
      link: "link"
      awsState: 5
      description: "description"
      disableAlerting: true
      netflowCollectorGroupId: 5
      createdOn: 2
      ancestorHasDisabledLogicModule: true
      systemProperties:
      - name: "name"
        value: "value"
      - name: "name"
        value: "value"
      hostStatus: "hostStatus"
      autoPropsUpdatedOn: 7
      scanConfigId: 9
      inheritedProperties:
      - name: "name"
        value: "value"
      - name: "name"
        value: "value"
      id: 3
      enableNetflow: true
      lastDataTime: 2
      alertStatusPriority: 4
      alertDisableStatus: "alertDisableStatus"
      hostGroupIds: "hostGroupIds"
      upTimeInSeconds: 7
      deviceType: 1
      currentCollectorId: 1
      netflowCollectorDescription: "netflowCollectorDescription"
      netflowCollectorId: 1
      userPermission: "userPermission"
      hasDisabledSubResource: true
      autoPropsAssignedOn: 6
      updatedOn: 7
      preferredCollectorGroupName: "preferredCollectorGroupName"
      sdtStatus: "sdtStatus"
      preferredCollectorGroupId: 1
      autoProperties:
      - name: "name"
        value: "value"
      - name: "name"
        value: "value"
      customProperties:
      - name: "name"
        value: "value"
      - name: "name"
        value: "value"
      toDeleteTimeInMs: 4
      collectorDescription: "collectorDescription"
      preferredCollectorId: 5
      lastRawdataTime: 9
      name: "name"
      alertingDisabledOn:
        userPermission: "userPermission"
        displayName: "displayName"
        id: 1
        type: "type"
      deletedTimeInMs: 9
  DeviceNOCWidget:
    allOf:
    - $ref: "#/definitions/WidgetBaseVersion1"
    - type: "object"
      required:
      - "dashboardId"
      - "items"
      - "name"
      - "type"
      properties:
        rowSpan:
          type: "integer"
          format: "int32"
        lastUpdatedBy:
          type: "string"
          readOnly: true
        ackChecked:
          type: "boolean"
        userPermission:
          type: "string"
          readOnly: true
        colSpan:
          type: "integer"
          format: "int32"
        displayWarnAlert:
          type: "boolean"
        description:
          type: "string"
        type:
          type: "string"
        displayErrorAlert:
          type: "boolean"
        columnIdx:
          type: "integer"
          format: "int32"
        dashboardId:
          type: "integer"
          format: "int32"
        extra:
          type: "string"
        displayColumn:
          type: "integer"
          format: "int32"
        name:
          type: "string"
        displayCriticalAlert:
          type: "boolean"
        lastUpdatedOn:
          type: "integer"
          format: "int64"
          readOnly: true
        theme:
          type: "string"
        interval:
          type: "integer"
          format: "int32"
        sortBy:
          type: "string"
        id:
          type: "integer"
          format: "int32"
        timescale:
          type: "string"
        sdtChecked:
          type: "boolean"
        items:
          type: "array"
          items:
            $ref: "#/definitions/DeviceNOCItem"
        order:
          type: "integer"
          format: "int32"
    x-discriminator-value: "devicenoc"
  Period:
    type: "object"
    required:
    - "endMinutes"
    - "startMinutes"
    - "weekDays"
    properties:
      weekDays:
        type: "array"
        items:
          type: "integer"
          format: "int32"
      startMinutes:
        type: "integer"
        format: "int32"
      endMinutes:
        type: "integer"
        format: "int32"
    example:
      weekDays:
      - 1
      - 1
      startMinutes: 5
      endMinutes: 5
  DeviceDatasourceDataResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/DeviceDataSourceData"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        instances:
          key:
            values:
            - - 0.8008281904610115
              - 0.8008281904610115
            - - 0.8008281904610115
              - 0.8008281904610115
            time:
            - 6
            - 6
            nextPageParams: "nextPageParams"
        dataPoints:
        - "dataPoints"
        - "dataPoints"
        nextPageParams: "nextPageParams"
        dataSourceName: "dataSourceName"
      errmsg: "errmsg"
      status: 1
  RestUserReport:
    allOf:
    - $ref: "#/definitions/ReportBase"
    - type: "object"
      properties:
        sortedBy:
          type: "string"
        columns:
          type: "array"
          items:
            $ref: "#/definitions/RestDynamicColumn"
        userFilter:
          $ref: "#/definitions/RestUserFilter"
  Recipient:
    type: "object"
    required:
    - "method"
    - "type"
    properties:
      method:
        type: "string"
      contact:
        type: "string"
      type:
        type: "string"
      addr:
        type: "string"
    example:
      method: "method"
      contact: "contact"
      type: "type"
      addr: "addr"
  GroupData:
    type: "object"
    properties:
      alertStatus:
        type: "string"
        readOnly: true
      fullPath:
        type: "string"
        readOnly: true
      stopMonitoring:
        type: "boolean"
        readOnly: true
      userPermission:
        type: "string"
        readOnly: true
      name:
        type: "string"
        readOnly: true
      numOfDirectSubGroups:
        type: "integer"
        format: "int32"
        readOnly: true
      description:
        type: "string"
        readOnly: true
      disableAlerting:
        type: "boolean"
        readOnly: true
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      alertDisableStatus:
        type: "string"
        readOnly: true
      sdtStatus:
        type: "string"
        readOnly: true
    example:
      alertStatus: "alertStatus"
      fullPath: "fullPath"
      stopMonitoring: true
      userPermission: "userPermission"
      name: "name"
      numOfDirectSubGroups: 5
      description: "description"
      disableAlerting: true
      id: 5
      alertDisableStatus: "alertDisableStatus"
      sdtStatus: "sdtStatus"
  DeviceGroupDataSourceDataPointConfig:
    type: "object"
    required:
    - "alertExpr"
    - "disableAlerting"
    properties:
      globalAlertExpr:
        type: "string"
        readOnly: true
      dataPointName:
        type: "string"
        readOnly: true
      dataPointId:
        type: "integer"
        format: "int32"
        readOnly: true
      disableAlerting:
        type: "boolean"
      alertExprNote:
        type: "string"
      alertExpr:
        type: "string"
      dataPointDescription:
        type: "string"
        readOnly: true
    example:
      globalAlertExpr: "globalAlertExpr"
      dataPointName: "dataPointName"
      dataPointId: 0
      disableAlerting: true
      alertExprNote: "alertExprNote"
      alertExpr: "alertExpr"
      dataPointDescription: "dataPointDescription"
  AdminResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/Admin"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        lastName: "lastName"
        note: "note"
        viewPermission: "viewPermission"
        timezone: "timezone"
        roles:
        - enableRemoteSessionInCompanyLevel: true
          customHelpLabel: "customHelpLabel"
          customHelpURL: "customHelpURL"
          privileges:
          - objectName: "objectName"
            subOperation: "subOperation"
            operation: "operation"
            objectId: "objectId"
            objectType: "objectType"
          - objectName: "objectName"
            subOperation: "subOperation"
            operation: "operation"
            objectId: "objectId"
            objectType: "objectType"
          associatedUserCount: 0
          name: "name"
          description: "description"
          id: 6
          twoFARequired: true
          requireEULA: true
          acctRequireTwoFA: true
        - enableRemoteSessionInCompanyLevel: true
          customHelpLabel: "customHelpLabel"
          customHelpURL: "customHelpURL"
          privileges:
          - objectName: "objectName"
            subOperation: "subOperation"
            operation: "operation"
            objectId: "objectId"
            objectType: "objectType"
          - objectName: "objectName"
            subOperation: "subOperation"
            operation: "operation"
            objectId: "objectId"
            objectType: "objectType"
          associatedUserCount: 0
          name: "name"
          description: "description"
          id: 6
          twoFARequired: true
          requireEULA: true
          acctRequireTwoFA: true
        lastLoginOn: 0
        lastActionOnLocal: "lastActionOnLocal"
        smsEmailFormat: "smsEmailFormat"
        apionly: true
        apiTokens:
        - accessId: "accessId"
          adminName: "adminName"
          note: "note"
          lastUsedOn: 0
          accessKey: "accessKey"
          createdBy: "createdBy"
          roles:
          - "roles"
          - "roles"
          adminId: 6
          id: 1
          createdOn: 5
          status: 5
        - accessId: "accessId"
          adminName: "adminName"
          note: "note"
          lastUsedOn: 0
          accessKey: "accessKey"
          createdBy: "createdBy"
          roles:
          - "roles"
          - "roles"
          adminId: 6
          id: 1
          createdOn: 5
          status: 5
        password: "password"
        lastAction: "lastAction"
        skilljarEmail: "skilljarEmail"
        lastActionOn: 6
        id: 1
        email: "email"
        contactMethod: "contactMethod"
        acceptEULAOn: 5
        setupWizardStatus: "setupWizardStatus"
        smsEmail: "smsEmail"
        twoFAEnabled: true
        firstName: "firstName"
        phone: "phone"
        createdBy: "createdBy"
        forcePasswordChange: true
        acceptEULA: true
        username: "username"
        status: "status"
      errmsg: "errmsg"
      status: 5
  AlertWidget:
    allOf:
    - $ref: "#/definitions/WidgetBaseVersion1"
    - type: "object"
      required:
      - "dashboardId"
      - "name"
      - "type"
      properties:
        rowSpan:
          type: "integer"
          format: "int32"
        lastUpdatedBy:
          type: "string"
          readOnly: true
        userPermission:
          type: "string"
          readOnly: true
        colSpan:
          type: "integer"
          format: "int32"
        description:
          type: "string"
        filters:
          $ref: "#/definitions/AlertFilters"
        type:
          type: "string"
        columnIdx:
          type: "integer"
          format: "int32"
        dashboardId:
          type: "integer"
          format: "int32"
        extra:
          type: "string"
        name:
          type: "string"
        lastUpdatedOn:
          type: "integer"
          format: "int64"
          readOnly: true
        theme:
          type: "string"
        interval:
          type: "integer"
          format: "int32"
        id:
          type: "integer"
          format: "int32"
        timescale:
          type: "string"
        parsedFilters:
          $ref: "#/definitions/AlertFilters"
        order:
          type: "integer"
          format: "int32"
    x-discriminator-value: "alert"
  VirtualDataPoint:
    type: "object"
    properties:
      rpn:
        type: "string"
      name:
        type: "string"
  NetflowGroupWidget:
    allOf:
    - $ref: "#/definitions/WidgetBaseVersion1"
    - type: "object"
      required:
      - "dashboardId"
      - "deviceGroupId"
      - "name"
      - "type"
      properties:
        rowSpan:
          type: "integer"
          format: "int32"
        lastUpdatedBy:
          type: "string"
          readOnly: true
        userPermission:
          type: "string"
          readOnly: true
        colSpan:
          type: "integer"
          format: "int32"
        dataType:
          type: "string"
        description:
          type: "string"
        qosType:
          type: "string"
        type:
          type: "string"
        columnIdx:
          type: "integer"
          format: "int32"
        rowFilters:
          type: "string"
        dashboardId:
          type: "integer"
          format: "int32"
        deviceGroupId:
          type: "integer"
          format: "int32"
        extra:
          type: "string"
        name:
          type: "string"
        lastUpdatedOn:
          type: "integer"
          format: "int64"
          readOnly: true
        deviceGroupName:
          type: "string"
          readOnly: true
        theme:
          type: "string"
        interval:
          type: "integer"
          format: "int32"
        id:
          type: "integer"
          format: "int32"
        timescale:
          type: "string"
        order:
          type: "integer"
          format: "int32"
    x-discriminator-value: "groupnetflow"
  GoogleMapWidget:
    allOf:
    - $ref: "#/definitions/WidgetBaseVersion1"
    - type: "object"
      required:
      - "dashboardId"
      - "mapPoints"
      - "name"
      - "type"
      properties:
        rowSpan:
          type: "integer"
          format: "int32"
        lastUpdatedBy:
          type: "string"
          readOnly: true
        ackChecked:
          type: "boolean"
        userPermission:
          type: "string"
          readOnly: true
        colSpan:
          type: "integer"
          format: "int32"
        displayWarnAlert:
          type: "boolean"
        description:
          type: "string"
        type:
          type: "string"
        displayErrorAlert:
          type: "boolean"
        columnIdx:
          type: "integer"
          format: "int32"
        dashboardId:
          type: "integer"
          format: "int32"
        extra:
          type: "string"
        name:
          type: "string"
        displayCriticalAlert:
          type: "boolean"
        lastUpdatedOn:
          type: "integer"
          format: "int64"
          readOnly: true
        theme:
          type: "string"
        interval:
          type: "integer"
          format: "int32"
        id:
          type: "integer"
          format: "int32"
        timescale:
          type: "string"
        sdtChecked:
          type: "boolean"
        order:
          type: "integer"
          format: "int32"
        mapPoints:
          type: "array"
          items:
            $ref: "#/definitions/PointSource"
    x-discriminator-value: "gmap"
  ESXAutoDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
      required:
      - "entity"
      properties:
        entity:
          type: "string"
    x-discriminator-value: "ad_esx"
  OpsNoteResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/OpsNote"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        note: "note"
        createdBy: "createdBy"
        id: "id"
        happenOnInSec: 6
        tags:
        - updateOnInSec: 1
          createdOnInSec: 5
          name: "name"
          id: "id"
        - updateOnInSec: 1
          createdOnInSec: 5
          name: "name"
          id: "id"
      errmsg: "errmsg"
      status: 0
  FlashWidget:
    allOf:
    - $ref: "#/definitions/WidgetBaseVersion1"
    - type: "object"
      required:
      - "dashboardId"
      - "name"
      - "type"
      - "url"
      properties:
        rowSpan:
          type: "integer"
          format: "int32"
        lastUpdatedBy:
          type: "string"
          readOnly: true
        userPermission:
          type: "string"
          readOnly: true
        colSpan:
          type: "integer"
          format: "int32"
        description:
          type: "string"
        type:
          type: "string"
        url:
          type: "string"
        columnIdx:
          type: "integer"
          format: "int32"
        dashboardId:
          type: "integer"
          format: "int32"
        extra:
          type: "string"
        name:
          type: "string"
        lastUpdatedOn:
          type: "integer"
          format: "int64"
          readOnly: true
        theme:
          type: "string"
        interval:
          type: "integer"
          format: "int32"
        id:
          type: "integer"
          format: "int32"
        timescale:
          type: "string"
        order:
          type: "integer"
          format: "int32"
        height:
          type: "integer"
          format: "int32"
    x-discriminator-value: "flash"
  CollectorAutoDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
      required:
      - "collectorId"
      properties:
        collectorId:
          type: "string"
    x-discriminator-value: "ad_collector"
  RestRoleReport:
    allOf:
    - $ref: "#/definitions/ReportBase"
    - type: "object"
      properties:
        columns:
          type: "array"
          items:
            $ref: "#/definitions/RestDynamicColumn"
        displayFormat:
          type: "string"
  DeviceGroupDataSourceAlertConfig:
    type: "object"
    properties:
      datasourceType:
        type: "string"
        readOnly: true
      dpConfig:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/DeviceGroupDataSourceDataPointConfig"
    example:
      datasourceType: "datasourceType"
      dpConfig:
      - globalAlertExpr: "globalAlertExpr"
        dataPointName: "dataPointName"
        dataPointId: 0
        disableAlerting: true
        alertExprNote: "alertExprNote"
        alertExpr: "alertExpr"
        dataPointDescription: "dataPointDescription"
      - globalAlertExpr: "globalAlertExpr"
        dataPointName: "dataPointName"
        dataPointId: 0
        disableAlerting: true
        alertExprNote: "alertExprNote"
        alertExpr: "alertExpr"
        dataPointDescription: "dataPointDescription"
  RestAutoReportResult:
    type: "object"
    properties:
      createdReports:
        type: "array"
        items:
          $ref: "#/definitions/ReportBase"
      errMsg:
        type: "string"
      createdReportGroup:
        $ref: "#/definitions/RestReportGroup"
    example:
      createdReports:
      - lastmodifyUserId: 6
        delivery: "delivery"
        userPermission: "userPermission"
        lastGenerateOn: 1
        reportLinkNum: 5
        groupId: 5
        format: "format"
        description: "description"
        lastGenerateSize: 2
        customReportTypeId: 7
        type: "type"
        lastGeneratePages: 9
        schedule: "schedule"
        recipients:
        - additionInfo: "additionInfo"
          method: "method"
          type: "type"
          addr: "addr"
        - additionInfo: "additionInfo"
          method: "method"
          type: "type"
          addr: "addr"
        customReportTypeName: "customReportTypeName"
        name: "name"
        enableViewAsOtherUser: true
        lastmodifyUserName: "lastmodifyUserName"
        id: 3
      - lastmodifyUserId: 6
        delivery: "delivery"
        userPermission: "userPermission"
        lastGenerateOn: 1
        reportLinkNum: 5
        groupId: 5
        format: "format"
        description: "description"
        lastGenerateSize: 2
        customReportTypeId: 7
        type: "type"
        lastGeneratePages: 9
        schedule: "schedule"
        recipients:
        - additionInfo: "additionInfo"
          method: "method"
          type: "type"
          addr: "addr"
        - additionInfo: "additionInfo"
          method: "method"
          type: "type"
          addr: "addr"
        customReportTypeName: "customReportTypeName"
        name: "name"
        enableViewAsOtherUser: true
        lastmodifyUserName: "lastmodifyUserName"
        id: 3
      errMsg: "errMsg"
      createdReportGroup:
        userPermission: "userPermission"
        name: "name"
        description: "description"
        id: 5
        reportsCount: 5
  XENCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "xenEntity"
      properties:
        counters:
          type: "array"
          items:
            $ref: "#/definitions/DataSourceAttribute"
        xenEntity:
          type: "string"
    x-discriminator-value: "xen"
  PointSource:
    type: "object"
    required:
    - "deviceGroupFullPath"
    properties:
      hasLocation:
        type: "boolean"
        readOnly: true
      type:
        type: "string"
      deviceGroupFullPath:
        type: "string"
      deviceDisplayName:
        type: "string"
  DashboardGroup:
    type: "object"
    required:
    - "name"
    properties:
      template:
        $ref: "#/definitions/JSONObject"
      fullPath:
        type: "string"
        readOnly: true
      userPermission:
        type: "string"
        readOnly: true
      widgetTokens:
        type: "array"
        items:
          $ref: "#/definitions/WidgetToken"
      name:
        type: "string"
      numOfDirectSubGroups:
        type: "integer"
        format: "int64"
        readOnly: true
      numOfDashboards:
        type: "integer"
        format: "int64"
        readOnly: true
      description:
        type: "string"
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      dashboards:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/DashboardData"
      parentId:
        type: "integer"
        format: "int32"
      numOfDirectDashboards:
        type: "integer"
        format: "int64"
        readOnly: true
    example:
      template: {}
      fullPath: "fullPath"
      userPermission: "userPermission"
      widgetTokens:
      - inheritList:
        - fullpath: "fullpath"
          value: "value"
        - fullpath: "fullpath"
          value: "value"
        name: "name"
        type: "type"
        value: "value"
      - inheritList:
        - fullpath: "fullpath"
          value: "value"
        - fullpath: "fullpath"
          value: "value"
        name: "name"
        type: "type"
        value: "value"
      name: "name"
      numOfDirectSubGroups: 0
      numOfDashboards: 6
      description: "description"
      id: 1
      dashboards:
      - userPermission: "userPermission"
        name: "name"
        sharable: true
        id: 5
      - userPermission: "userPermission"
        name: "name"
        sharable: true
        id: 5
      parentId: 5
      numOfDirectDashboards: 2
  CustomerGraphWidget:
    allOf:
    - $ref: "#/definitions/WidgetBaseVersion1"
    - type: "object"
      required:
      - "dashboardId"
      - "graphInfo"
      - "name"
      - "type"
      properties:
        rowSpan:
          type: "integer"
          format: "int32"
        lastUpdatedBy:
          type: "string"
          readOnly: true
        userPermission:
          type: "string"
          readOnly: true
        colSpan:
          type: "integer"
          format: "int32"
        description:
          type: "string"
        type:
          type: "string"
        columnIdx:
          type: "integer"
          format: "int32"
        dashboardId:
          type: "integer"
          format: "int32"
        extra:
          type: "string"
        name:
          type: "string"
        lastUpdatedOn:
          type: "integer"
          format: "int64"
          readOnly: true
        theme:
          type: "string"
        interval:
          type: "integer"
          format: "int32"
        graphInfo:
          $ref: "#/definitions/CustomGraph"
        id:
          type: "integer"
          format: "int32"
        timescale:
          type: "string"
        order:
          type: "integer"
          format: "int32"
    x-discriminator-value: "cgraph"
  AlertReport:
    allOf:
    - $ref: "#/definitions/ReportBase"
    - type: "object"
      properties:
        activeOnly:
          type: "boolean"
        sortedBy:
          type: "string"
        chain:
          type: "string"
        dateRange:
          type: "string"
        level:
          type: "string"
        timing:
          type: "string"
        columns:
          type: "array"
          items:
            $ref: "#/definitions/RestDynamicColumn"
        dataPoint:
          type: "string"
        sdtFilter:
          type: "string"
        rule:
          type: "string"
        ackFilter:
          type: "string"
        deviceDisplayName:
          type: "string"
        summaryOnly:
          type: "boolean"
        dataSourceInstanceName:
          type: "string"
        dataSource:
          type: "string"
        groupFullPath:
          type: "string"
        includePreexist:
          type: "boolean"
    x-discriminator-value: "alert"
  Macro:
    type: "object"
    required:
    - "value"
    - "variable"
    properties:
      variable:
        type: "string"
      description:
        type: "string"
      value:
        type: "string"
  EC2ScheduledEventAutoDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
  BigNumberWidget:
    allOf:
    - $ref: "#/definitions/WidgetBaseVersion1"
    - type: "object"
      required:
      - "bigNumberInfo"
      - "dashboardId"
      - "name"
      - "type"
      properties:
        rowSpan:
          type: "integer"
          format: "int32"
        lastUpdatedBy:
          type: "string"
          readOnly: true
        bigNumberInfo:
          $ref: "#/definitions/BigNumberInfo"
        userPermission:
          type: "string"
          readOnly: true
        colSpan:
          type: "integer"
          format: "int32"
        description:
          type: "string"
        type:
          type: "string"
        columnIdx:
          type: "integer"
          format: "int32"
        dashboardId:
          type: "integer"
          format: "int32"
        extra:
          type: "string"
        name:
          type: "string"
        lastUpdatedOn:
          type: "integer"
          format: "int64"
          readOnly: true
        theme:
          type: "string"
        interval:
          type: "integer"
          format: "int32"
        id:
          type: "integer"
          format: "int32"
        timescale:
          type: "string"
        order:
          type: "integer"
          format: "int32"
    x-discriminator-value: "bignumber"
  DeviceGroupPagination:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      searchId:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/DeviceGroup"
    example:
      total: 0
      searchId: "searchId"
      items:
      - fullPath: "fullPath"
        alertStatus: "alertStatus"
        groupType: "groupType"
        numOfAWSDevices: 0
        description: "description"
        appliesTo: "appliesTo"
        disableAlerting: true
        autoVisualResult:
          autoDashboardResult:
            createdDashboardGroup:
              template: {}
              fullPath: "fullPath"
              userPermission: "userPermission"
              widgetTokens:
              - inheritList:
                - fullpath: "fullpath"
                  value: "value"
                - fullpath: "fullpath"
                  value: "value"
                name: "name"
                type: "type"
                value: "value"
              - inheritList:
                - fullpath: "fullpath"
                  value: "value"
                - fullpath: "fullpath"
                  value: "value"
                name: "name"
                type: "type"
                value: "value"
              name: "name"
              numOfDirectSubGroups: 0
              numOfDashboards: 6
              description: "description"
              id: 1
              dashboards:
              - userPermission: "userPermission"
                name: "name"
                sharable: true
                id: 5
              - userPermission: "userPermission"
                name: "name"
                sharable: true
                id: 5
              parentId: 5
              numOfDirectDashboards: 2
            createdDashboards:
            - owner: "owner"
              template: {}
              userPermission: "userPermission"
              groupId: 6
              fullName: "fullName"
              description: "description"
              sharable: true
              widgetsOrder: "widgetsOrder"
              groupName: "groupName"
              widgetTokens:
              - inheritList:
                - fullpath: "fullpath"
                  value: "value"
                - fullpath: "fullpath"
                  value: "value"
                name: "name"
                type: "type"
                value: "value"
              - inheritList:
                - fullpath: "fullpath"
                  value: "value"
                - fullpath: "fullpath"
                  value: "value"
                name: "name"
                type: "type"
                value: "value"
              name: "name"
              id: 1
              groupFullPath: "groupFullPath"
            - owner: "owner"
              template: {}
              userPermission: "userPermission"
              groupId: 6
              fullName: "fullName"
              description: "description"
              sharable: true
              widgetsOrder: "widgetsOrder"
              groupName: "groupName"
              widgetTokens:
              - inheritList:
                - fullpath: "fullpath"
                  value: "value"
                - fullpath: "fullpath"
                  value: "value"
                name: "name"
                type: "type"
                value: "value"
              - inheritList:
                - fullpath: "fullpath"
                  value: "value"
                - fullpath: "fullpath"
                  value: "value"
                name: "name"
                type: "type"
                value: "value"
              name: "name"
              id: 1
              groupFullPath: "groupFullPath"
            errMsg: "errMsg"
          autoReportResult:
            createdReports:
            - lastmodifyUserId: 6
              delivery: "delivery"
              userPermission: "userPermission"
              lastGenerateOn: 1
              reportLinkNum: 5
              groupId: 5
              format: "format"
              description: "description"
              lastGenerateSize: 2
              customReportTypeId: 7
              type: "type"
              lastGeneratePages: 9
              schedule: "schedule"
              recipients:
              - additionInfo: "additionInfo"
                method: "method"
                type: "type"
                addr: "addr"
              - additionInfo: "additionInfo"
                method: "method"
                type: "type"
                addr: "addr"
              customReportTypeName: "customReportTypeName"
              name: "name"
              enableViewAsOtherUser: true
              lastmodifyUserName: "lastmodifyUserName"
              id: 3
            - lastmodifyUserId: 6
              delivery: "delivery"
              userPermission: "userPermission"
              lastGenerateOn: 1
              reportLinkNum: 5
              groupId: 5
              format: "format"
              description: "description"
              lastGenerateSize: 2
              customReportTypeId: 7
              type: "type"
              lastGeneratePages: 9
              schedule: "schedule"
              recipients:
              - additionInfo: "additionInfo"
                method: "method"
                type: "type"
                addr: "addr"
              - additionInfo: "additionInfo"
                method: "method"
                type: "type"
                addr: "addr"
              customReportTypeName: "customReportTypeName"
              name: "name"
              enableViewAsOtherUser: true
              lastmodifyUserName: "lastmodifyUserName"
              id: 3
            errMsg: "errMsg"
            createdReportGroup:
              userPermission: "userPermission"
              name: "name"
              description: "description"
              id: 5
              reportsCount: 5
          errMsg: "errMsg"
        awsRegionsInfo: "awsRegionsInfo"
        createdOn: 2
        hasNetflowEnabledDevices: true
        numOfAzureDevices: 7
        clusterAlertStatusPriority: 9
        defaultCollectorDescription: "defaultCollectorDescription"
        defaultCollectorId: 3
        awsTestResult:
          noPermissionServices:
          - "noPermissionServices"
          - "noPermissionServices"
          detailLink: "detailLink"
          nonPermissionErrors:
          - "nonPermissionErrors"
          - "nonPermissionErrors"
        extra: "extra"
        numOfDirectSubGroups: 2
        subGroups:
        - fullPath: "fullPath"
          groupType: "groupType"
          numOfHosts: 4
          userPermission: "userPermission"
          name: "name"
          numOfDirectSubGroups: 7
          description: "description"
          appliesTo: "appliesTo"
          numOfDirectDevices: 1
          id: 1
          awsRegionsInfo: "awsRegionsInfo"
          azureRegionsInfo: "azureRegionsInfo"
        - fullPath: "fullPath"
          groupType: "groupType"
          numOfHosts: 4
          userPermission: "userPermission"
          name: "name"
          numOfDirectSubGroups: 7
          description: "description"
          appliesTo: "appliesTo"
          numOfDirectDevices: 1
          id: 1
          awsRegionsInfo: "awsRegionsInfo"
          azureRegionsInfo: "azureRegionsInfo"
        numOfDirectDevices: 1
        id: 6
        enableNetflow: true
        alertStatusPriority: 7
        alertDisableStatus: "alertDisableStatus"
        azureTestResultCode: 1
        effectiveAlertEnabled: true
        clusterAlertStatus: "clusterAlertStatus"
        userPermission: "userPermission"
        groupStatus: "groupStatus"
        azureTestResult:
          noPermissionServices: {}
          detailLink: "detailLink"
        sdtStatus: "sdtStatus"
        parentId: 4
        awsTestResultCode: 5
        customProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        numOfHosts: 9
        name: "name"
        alertingDisabledOn:
          userPermission: "userPermission"
          displayName: "displayName"
          id: 1
          type: "type"
        azureRegionsInfo: "azureRegionsInfo"
      - fullPath: "fullPath"
        alertStatus: "alertStatus"
        groupType: "groupType"
        numOfAWSDevices: 0
        description: "description"
        appliesTo: "appliesTo"
        disableAlerting: true
        autoVisualResult:
          autoDashboardResult:
            createdDashboardGroup:
              template: {}
              fullPath: "fullPath"
              userPermission: "userPermission"
              widgetTokens:
              - inheritList:
                - fullpath: "fullpath"
                  value: "value"
                - fullpath: "fullpath"
                  value: "value"
                name: "name"
                type: "type"
                value: "value"
              - inheritList:
                - fullpath: "fullpath"
                  value: "value"
                - fullpath: "fullpath"
                  value: "value"
                name: "name"
                type: "type"
                value: "value"
              name: "name"
              numOfDirectSubGroups: 0
              numOfDashboards: 6
              description: "description"
              id: 1
              dashboards:
              - userPermission: "userPermission"
                name: "name"
                sharable: true
                id: 5
              - userPermission: "userPermission"
                name: "name"
                sharable: true
                id: 5
              parentId: 5
              numOfDirectDashboards: 2
            createdDashboards:
            - owner: "owner"
              template: {}
              userPermission: "userPermission"
              groupId: 6
              fullName: "fullName"
              description: "description"
              sharable: true
              widgetsOrder: "widgetsOrder"
              groupName: "groupName"
              widgetTokens:
              - inheritList:
                - fullpath: "fullpath"
                  value: "value"
                - fullpath: "fullpath"
                  value: "value"
                name: "name"
                type: "type"
                value: "value"
              - inheritList:
                - fullpath: "fullpath"
                  value: "value"
                - fullpath: "fullpath"
                  value: "value"
                name: "name"
                type: "type"
                value: "value"
              name: "name"
              id: 1
              groupFullPath: "groupFullPath"
            - owner: "owner"
              template: {}
              userPermission: "userPermission"
              groupId: 6
              fullName: "fullName"
              description: "description"
              sharable: true
              widgetsOrder: "widgetsOrder"
              groupName: "groupName"
              widgetTokens:
              - inheritList:
                - fullpath: "fullpath"
                  value: "value"
                - fullpath: "fullpath"
                  value: "value"
                name: "name"
                type: "type"
                value: "value"
              - inheritList:
                - fullpath: "fullpath"
                  value: "value"
                - fullpath: "fullpath"
                  value: "value"
                name: "name"
                type: "type"
                value: "value"
              name: "name"
              id: 1
              groupFullPath: "groupFullPath"
            errMsg: "errMsg"
          autoReportResult:
            createdReports:
            - lastmodifyUserId: 6
              delivery: "delivery"
              userPermission: "userPermission"
              lastGenerateOn: 1
              reportLinkNum: 5
              groupId: 5
              format: "format"
              description: "description"
              lastGenerateSize: 2
              customReportTypeId: 7
              type: "type"
              lastGeneratePages: 9
              schedule: "schedule"
              recipients:
              - additionInfo: "additionInfo"
                method: "method"
                type: "type"
                addr: "addr"
              - additionInfo: "additionInfo"
                method: "method"
                type: "type"
                addr: "addr"
              customReportTypeName: "customReportTypeName"
              name: "name"
              enableViewAsOtherUser: true
              lastmodifyUserName: "lastmodifyUserName"
              id: 3
            - lastmodifyUserId: 6
              delivery: "delivery"
              userPermission: "userPermission"
              lastGenerateOn: 1
              reportLinkNum: 5
              groupId: 5
              format: "format"
              description: "description"
              lastGenerateSize: 2
              customReportTypeId: 7
              type: "type"
              lastGeneratePages: 9
              schedule: "schedule"
              recipients:
              - additionInfo: "additionInfo"
                method: "method"
                type: "type"
                addr: "addr"
              - additionInfo: "additionInfo"
                method: "method"
                type: "type"
                addr: "addr"
              customReportTypeName: "customReportTypeName"
              name: "name"
              enableViewAsOtherUser: true
              lastmodifyUserName: "lastmodifyUserName"
              id: 3
            errMsg: "errMsg"
            createdReportGroup:
              userPermission: "userPermission"
              name: "name"
              description: "description"
              id: 5
              reportsCount: 5
          errMsg: "errMsg"
        awsRegionsInfo: "awsRegionsInfo"
        createdOn: 2
        hasNetflowEnabledDevices: true
        numOfAzureDevices: 7
        clusterAlertStatusPriority: 9
        defaultCollectorDescription: "defaultCollectorDescription"
        defaultCollectorId: 3
        awsTestResult:
          noPermissionServices:
          - "noPermissionServices"
          - "noPermissionServices"
          detailLink: "detailLink"
          nonPermissionErrors:
          - "nonPermissionErrors"
          - "nonPermissionErrors"
        extra: "extra"
        numOfDirectSubGroups: 2
        subGroups:
        - fullPath: "fullPath"
          groupType: "groupType"
          numOfHosts: 4
          userPermission: "userPermission"
          name: "name"
          numOfDirectSubGroups: 7
          description: "description"
          appliesTo: "appliesTo"
          numOfDirectDevices: 1
          id: 1
          awsRegionsInfo: "awsRegionsInfo"
          azureRegionsInfo: "azureRegionsInfo"
        - fullPath: "fullPath"
          groupType: "groupType"
          numOfHosts: 4
          userPermission: "userPermission"
          name: "name"
          numOfDirectSubGroups: 7
          description: "description"
          appliesTo: "appliesTo"
          numOfDirectDevices: 1
          id: 1
          awsRegionsInfo: "awsRegionsInfo"
          azureRegionsInfo: "azureRegionsInfo"
        numOfDirectDevices: 1
        id: 6
        enableNetflow: true
        alertStatusPriority: 7
        alertDisableStatus: "alertDisableStatus"
        azureTestResultCode: 1
        effectiveAlertEnabled: true
        clusterAlertStatus: "clusterAlertStatus"
        userPermission: "userPermission"
        groupStatus: "groupStatus"
        azureTestResult:
          noPermissionServices: {}
          detailLink: "detailLink"
        sdtStatus: "sdtStatus"
        parentId: 4
        awsTestResultCode: 5
        customProperties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        numOfHosts: 9
        name: "name"
        alertingDisabledOn:
          userPermission: "userPermission"
          displayName: "displayName"
          id: 1
          type: "type"
        azureRegionsInfo: "azureRegionsInfo"
  DevicePaginationResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/DevicePagination"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        total: 0
        searchId: "searchId"
        items:
        - alertStatus: "alertStatus"
          netflowCollectorGroupName: "netflowCollectorGroupName"
          azureState: 6
          relatedDeviceId: 1
          displayName: "displayName"
          link: "link"
          awsState: 5
          description: "description"
          disableAlerting: true
          netflowCollectorGroupId: 5
          createdOn: 2
          ancestorHasDisabledLogicModule: true
          systemProperties:
          - name: "name"
            value: "value"
          - name: "name"
            value: "value"
          hostStatus: "hostStatus"
          autoPropsUpdatedOn: 7
          scanConfigId: 9
          inheritedProperties:
          - name: "name"
            value: "value"
          - name: "name"
            value: "value"
          id: 3
          enableNetflow: true
          lastDataTime: 2
          alertStatusPriority: 4
          alertDisableStatus: "alertDisableStatus"
          hostGroupIds: "hostGroupIds"
          upTimeInSeconds: 7
          deviceType: 1
          currentCollectorId: 1
          netflowCollectorDescription: "netflowCollectorDescription"
          netflowCollectorId: 1
          userPermission: "userPermission"
          hasDisabledSubResource: true
          autoPropsAssignedOn: 6
          updatedOn: 7
          preferredCollectorGroupName: "preferredCollectorGroupName"
          sdtStatus: "sdtStatus"
          preferredCollectorGroupId: 1
          autoProperties:
          - name: "name"
            value: "value"
          - name: "name"
            value: "value"
          customProperties:
          - name: "name"
            value: "value"
          - name: "name"
            value: "value"
          toDeleteTimeInMs: 4
          collectorDescription: "collectorDescription"
          preferredCollectorId: 5
          lastRawdataTime: 9
          name: "name"
          alertingDisabledOn:
            userPermission: "userPermission"
            displayName: "displayName"
            id: 1
            type: "type"
          deletedTimeInMs: 9
        - alertStatus: "alertStatus"
          netflowCollectorGroupName: "netflowCollectorGroupName"
          azureState: 6
          relatedDeviceId: 1
          displayName: "displayName"
          link: "link"
          awsState: 5
          description: "description"
          disableAlerting: true
          netflowCollectorGroupId: 5
          createdOn: 2
          ancestorHasDisabledLogicModule: true
          systemProperties:
          - name: "name"
            value: "value"
          - name: "name"
            value: "value"
          hostStatus: "hostStatus"
          autoPropsUpdatedOn: 7
          scanConfigId: 9
          inheritedProperties:
          - name: "name"
            value: "value"
          - name: "name"
            value: "value"
          id: 3
          enableNetflow: true
          lastDataTime: 2
          alertStatusPriority: 4
          alertDisableStatus: "alertDisableStatus"
          hostGroupIds: "hostGroupIds"
          upTimeInSeconds: 7
          deviceType: 1
          currentCollectorId: 1
          netflowCollectorDescription: "netflowCollectorDescription"
          netflowCollectorId: 1
          userPermission: "userPermission"
          hasDisabledSubResource: true
          autoPropsAssignedOn: 6
          updatedOn: 7
          preferredCollectorGroupName: "preferredCollectorGroupName"
          sdtStatus: "sdtStatus"
          preferredCollectorGroupId: 1
          autoProperties:
          - name: "name"
            value: "value"
          - name: "name"
            value: "value"
          customProperties:
          - name: "name"
            value: "value"
          - name: "name"
            value: "value"
          toDeleteTimeInMs: 4
          collectorDescription: "collectorDescription"
          preferredCollectorId: 5
          lastRawdataTime: 9
          name: "name"
          alertingDisabledOn:
            userPermission: "userPermission"
            displayName: "displayName"
            id: 1
            type: "type"
          deletedTimeInMs: 9
      errmsg: "errmsg"
      status: 6
  MongoCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "collection"
      - "database"
      - "port"
      - "query"
      properties:
        database:
          type: "string"
        port:
          type: "string"
        query:
          type: "string"
        collection:
          type: "string"
    x-discriminator-value: "mongo"
  DeviceDatasourceInstanceAlertSettingResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/DeviceDataSourceInstanceAlertSetting"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        globalAlertExpr: "globalAlertExpr"
        alertClearInterval: 0
        disableAlerting: true
        alertExprNote: "alertExprNote"
        dataPointDescription: "dataPointDescription"
        dataSourceInstanceId: 6
        disableDpAlertHostGroups: "disableDpAlertHostGroups"
        dataPointName: "dataPointName"
        dataPointId: 1
        deviceGroupId: 5
        currentAlertId: 5
        parentDeviceGroupAlertExprList:
        - userPermission: "userPermission"
          groupId: 2
          alertEnabled: true
          groupFullPath: "groupFullPath"
          alertExpr: "alertExpr"
        - userPermission: "userPermission"
          groupId: 2
          alertEnabled: true
          groupFullPath: "groupFullPath"
          alertExpr: "alertExpr"
        alertingDisabledOn: "alertingDisabledOn"
        id: 7
        dataSourceInstanceAlias: "dataSourceInstanceAlias"
        deviceGroupFullPath: "deviceGroupFullPath"
        alertExpr: "alertExpr"
        alertTransitionInterval: 9
      errmsg: "errmsg"
      status: 3
  DashboardData:
    type: "object"
    properties:
      userPermission:
        type: "string"
        readOnly: true
      name:
        type: "string"
        readOnly: true
      sharable:
        type: "boolean"
        readOnly: true
      id:
        type: "integer"
        format: "int32"
        readOnly: true
    example:
      userPermission: "userPermission"
      name: "name"
      sharable: true
      id: 5
  DeviceGroupPaginationResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/DeviceGroupPagination"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        total: 0
        searchId: "searchId"
        items:
        - fullPath: "fullPath"
          alertStatus: "alertStatus"
          groupType: "groupType"
          numOfAWSDevices: 0
          description: "description"
          appliesTo: "appliesTo"
          disableAlerting: true
          autoVisualResult:
            autoDashboardResult:
              createdDashboardGroup:
                template: {}
                fullPath: "fullPath"
                userPermission: "userPermission"
                widgetTokens:
                - inheritList:
                  - fullpath: "fullpath"
                    value: "value"
                  - fullpath: "fullpath"
                    value: "value"
                  name: "name"
                  type: "type"
                  value: "value"
                - inheritList:
                  - fullpath: "fullpath"
                    value: "value"
                  - fullpath: "fullpath"
                    value: "value"
                  name: "name"
                  type: "type"
                  value: "value"
                name: "name"
                numOfDirectSubGroups: 0
                numOfDashboards: 6
                description: "description"
                id: 1
                dashboards:
                - userPermission: "userPermission"
                  name: "name"
                  sharable: true
                  id: 5
                - userPermission: "userPermission"
                  name: "name"
                  sharable: true
                  id: 5
                parentId: 5
                numOfDirectDashboards: 2
              createdDashboards:
              - owner: "owner"
                template: {}
                userPermission: "userPermission"
                groupId: 6
                fullName: "fullName"
                description: "description"
                sharable: true
                widgetsOrder: "widgetsOrder"
                groupName: "groupName"
                widgetTokens:
                - inheritList:
                  - fullpath: "fullpath"
                    value: "value"
                  - fullpath: "fullpath"
                    value: "value"
                  name: "name"
                  type: "type"
                  value: "value"
                - inheritList:
                  - fullpath: "fullpath"
                    value: "value"
                  - fullpath: "fullpath"
                    value: "value"
                  name: "name"
                  type: "type"
                  value: "value"
                name: "name"
                id: 1
                groupFullPath: "groupFullPath"
              - owner: "owner"
                template: {}
                userPermission: "userPermission"
                groupId: 6
                fullName: "fullName"
                description: "description"
                sharable: true
                widgetsOrder: "widgetsOrder"
                groupName: "groupName"
                widgetTokens:
                - inheritList:
                  - fullpath: "fullpath"
                    value: "value"
                  - fullpath: "fullpath"
                    value: "value"
                  name: "name"
                  type: "type"
                  value: "value"
                - inheritList:
                  - fullpath: "fullpath"
                    value: "value"
                  - fullpath: "fullpath"
                    value: "value"
                  name: "name"
                  type: "type"
                  value: "value"
                name: "name"
                id: 1
                groupFullPath: "groupFullPath"
              errMsg: "errMsg"
            autoReportResult:
              createdReports:
              - lastmodifyUserId: 6
                delivery: "delivery"
                userPermission: "userPermission"
                lastGenerateOn: 1
                reportLinkNum: 5
                groupId: 5
                format: "format"
                description: "description"
                lastGenerateSize: 2
                customReportTypeId: 7
                type: "type"
                lastGeneratePages: 9
                schedule: "schedule"
                recipients:
                - additionInfo: "additionInfo"
                  method: "method"
                  type: "type"
                  addr: "addr"
                - additionInfo: "additionInfo"
                  method: "method"
                  type: "type"
                  addr: "addr"
                customReportTypeName: "customReportTypeName"
                name: "name"
                enableViewAsOtherUser: true
                lastmodifyUserName: "lastmodifyUserName"
                id: 3
              - lastmodifyUserId: 6
                delivery: "delivery"
                userPermission: "userPermission"
                lastGenerateOn: 1
                reportLinkNum: 5
                groupId: 5
                format: "format"
                description: "description"
                lastGenerateSize: 2
                customReportTypeId: 7
                type: "type"
                lastGeneratePages: 9
                schedule: "schedule"
                recipients:
                - additionInfo: "additionInfo"
                  method: "method"
                  type: "type"
                  addr: "addr"
                - additionInfo: "additionInfo"
                  method: "method"
                  type: "type"
                  addr: "addr"
                customReportTypeName: "customReportTypeName"
                name: "name"
                enableViewAsOtherUser: true
                lastmodifyUserName: "lastmodifyUserName"
                id: 3
              errMsg: "errMsg"
              createdReportGroup:
                userPermission: "userPermission"
                name: "name"
                description: "description"
                id: 5
                reportsCount: 5
            errMsg: "errMsg"
          awsRegionsInfo: "awsRegionsInfo"
          createdOn: 2
          hasNetflowEnabledDevices: true
          numOfAzureDevices: 7
          clusterAlertStatusPriority: 9
          defaultCollectorDescription: "defaultCollectorDescription"
          defaultCollectorId: 3
          awsTestResult:
            noPermissionServices:
            - "noPermissionServices"
            - "noPermissionServices"
            detailLink: "detailLink"
            nonPermissionErrors:
            - "nonPermissionErrors"
            - "nonPermissionErrors"
          extra: "extra"
          numOfDirectSubGroups: 2
          subGroups:
          - fullPath: "fullPath"
            groupType: "groupType"
            numOfHosts: 4
            userPermission: "userPermission"
            name: "name"
            numOfDirectSubGroups: 7
            description: "description"
            appliesTo: "appliesTo"
            numOfDirectDevices: 1
            id: 1
            awsRegionsInfo: "awsRegionsInfo"
            azureRegionsInfo: "azureRegionsInfo"
          - fullPath: "fullPath"
            groupType: "groupType"
            numOfHosts: 4
            userPermission: "userPermission"
            name: "name"
            numOfDirectSubGroups: 7
            description: "description"
            appliesTo: "appliesTo"
            numOfDirectDevices: 1
            id: 1
            awsRegionsInfo: "awsRegionsInfo"
            azureRegionsInfo: "azureRegionsInfo"
          numOfDirectDevices: 1
          id: 6
          enableNetflow: true
          alertStatusPriority: 7
          alertDisableStatus: "alertDisableStatus"
          azureTestResultCode: 1
          effectiveAlertEnabled: true
          clusterAlertStatus: "clusterAlertStatus"
          userPermission: "userPermission"
          groupStatus: "groupStatus"
          azureTestResult:
            noPermissionServices: {}
            detailLink: "detailLink"
          sdtStatus: "sdtStatus"
          parentId: 4
          awsTestResultCode: 5
          customProperties:
          - name: "name"
            value: "value"
          - name: "name"
            value: "value"
          numOfHosts: 9
          name: "name"
          alertingDisabledOn:
            userPermission: "userPermission"
            displayName: "displayName"
            id: 1
            type: "type"
          azureRegionsInfo: "azureRegionsInfo"
        - fullPath: "fullPath"
          alertStatus: "alertStatus"
          groupType: "groupType"
          numOfAWSDevices: 0
          description: "description"
          appliesTo: "appliesTo"
          disableAlerting: true
          autoVisualResult:
            autoDashboardResult:
              createdDashboardGroup:
                template: {}
                fullPath: "fullPath"
                userPermission: "userPermission"
                widgetTokens:
                - inheritList:
                  - fullpath: "fullpath"
                    value: "value"
                  - fullpath: "fullpath"
                    value: "value"
                  name: "name"
                  type: "type"
                  value: "value"
                - inheritList:
                  - fullpath: "fullpath"
                    value: "value"
                  - fullpath: "fullpath"
                    value: "value"
                  name: "name"
                  type: "type"
                  value: "value"
                name: "name"
                numOfDirectSubGroups: 0
                numOfDashboards: 6
                description: "description"
                id: 1
                dashboards:
                - userPermission: "userPermission"
                  name: "name"
                  sharable: true
                  id: 5
                - userPermission: "userPermission"
                  name: "name"
                  sharable: true
                  id: 5
                parentId: 5
                numOfDirectDashboards: 2
              createdDashboards:
              - owner: "owner"
                template: {}
                userPermission: "userPermission"
                groupId: 6
                fullName: "fullName"
                description: "description"
                sharable: true
                widgetsOrder: "widgetsOrder"
                groupName: "groupName"
                widgetTokens:
                - inheritList:
                  - fullpath: "fullpath"
                    value: "value"
                  - fullpath: "fullpath"
                    value: "value"
                  name: "name"
                  type: "type"
                  value: "value"
                - inheritList:
                  - fullpath: "fullpath"
                    value: "value"
                  - fullpath: "fullpath"
                    value: "value"
                  name: "name"
                  type: "type"
                  value: "value"
                name: "name"
                id: 1
                groupFullPath: "groupFullPath"
              - owner: "owner"
                template: {}
                userPermission: "userPermission"
                groupId: 6
                fullName: "fullName"
                description: "description"
                sharable: true
                widgetsOrder: "widgetsOrder"
                groupName: "groupName"
                widgetTokens:
                - inheritList:
                  - fullpath: "fullpath"
                    value: "value"
                  - fullpath: "fullpath"
                    value: "value"
                  name: "name"
                  type: "type"
                  value: "value"
                - inheritList:
                  - fullpath: "fullpath"
                    value: "value"
                  - fullpath: "fullpath"
                    value: "value"
                  name: "name"
                  type: "type"
                  value: "value"
                name: "name"
                id: 1
                groupFullPath: "groupFullPath"
              errMsg: "errMsg"
            autoReportResult:
              createdReports:
              - lastmodifyUserId: 6
                delivery: "delivery"
                userPermission: "userPermission"
                lastGenerateOn: 1
                reportLinkNum: 5
                groupId: 5
                format: "format"
                description: "description"
                lastGenerateSize: 2
                customReportTypeId: 7
                type: "type"
                lastGeneratePages: 9
                schedule: "schedule"
                recipients:
                - additionInfo: "additionInfo"
                  method: "method"
                  type: "type"
                  addr: "addr"
                - additionInfo: "additionInfo"
                  method: "method"
                  type: "type"
                  addr: "addr"
                customReportTypeName: "customReportTypeName"
                name: "name"
                enableViewAsOtherUser: true
                lastmodifyUserName: "lastmodifyUserName"
                id: 3
              - lastmodifyUserId: 6
                delivery: "delivery"
                userPermission: "userPermission"
                lastGenerateOn: 1
                reportLinkNum: 5
                groupId: 5
                format: "format"
                description: "description"
                lastGenerateSize: 2
                customReportTypeId: 7
                type: "type"
                lastGeneratePages: 9
                schedule: "schedule"
                recipients:
                - additionInfo: "additionInfo"
                  method: "method"
                  type: "type"
                  addr: "addr"
                - additionInfo: "additionInfo"
                  method: "method"
                  type: "type"
                  addr: "addr"
                customReportTypeName: "customReportTypeName"
                name: "name"
                enableViewAsOtherUser: true
                lastmodifyUserName: "lastmodifyUserName"
                id: 3
              errMsg: "errMsg"
              createdReportGroup:
                userPermission: "userPermission"
                name: "name"
                description: "description"
                id: 5
                reportsCount: 5
            errMsg: "errMsg"
          awsRegionsInfo: "awsRegionsInfo"
          createdOn: 2
          hasNetflowEnabledDevices: true
          numOfAzureDevices: 7
          clusterAlertStatusPriority: 9
          defaultCollectorDescription: "defaultCollectorDescription"
          defaultCollectorId: 3
          awsTestResult:
            noPermissionServices:
            - "noPermissionServices"
            - "noPermissionServices"
            detailLink: "detailLink"
            nonPermissionErrors:
            - "nonPermissionErrors"
            - "nonPermissionErrors"
          extra: "extra"
          numOfDirectSubGroups: 2
          subGroups:
          - fullPath: "fullPath"
            groupType: "groupType"
            numOfHosts: 4
            userPermission: "userPermission"
            name: "name"
            numOfDirectSubGroups: 7
            description: "description"
            appliesTo: "appliesTo"
            numOfDirectDevices: 1
            id: 1
            awsRegionsInfo: "awsRegionsInfo"
            azureRegionsInfo: "azureRegionsInfo"
          - fullPath: "fullPath"
            groupType: "groupType"
            numOfHosts: 4
            userPermission: "userPermission"
            name: "name"
            numOfDirectSubGroups: 7
            description: "description"
            appliesTo: "appliesTo"
            numOfDirectDevices: 1
            id: 1
            awsRegionsInfo: "awsRegionsInfo"
            azureRegionsInfo: "azureRegionsInfo"
          numOfDirectDevices: 1
          id: 6
          enableNetflow: true
          alertStatusPriority: 7
          alertDisableStatus: "alertDisableStatus"
          azureTestResultCode: 1
          effectiveAlertEnabled: true
          clusterAlertStatus: "clusterAlertStatus"
          userPermission: "userPermission"
          groupStatus: "groupStatus"
          azureTestResult:
            noPermissionServices: {}
            detailLink: "detailLink"
          sdtStatus: "sdtStatus"
          parentId: 4
          awsTestResultCode: 5
          customProperties:
          - name: "name"
            value: "value"
          - name: "name"
            value: "value"
          numOfHosts: 9
          name: "name"
          alertingDisabledOn:
            userPermission: "userPermission"
            displayName: "displayName"
            id: 1
            type: "type"
          azureRegionsInfo: "azureRegionsInfo"
      errmsg: "errmsg"
      status: 6
  WebServiceStepV1:
    type: "object"
    properties:
      schema:
        type: "string"
      HTTPHeaders:
        type: "string"
      auth:
        $ref: "#/definitions/Authentication"
      matchType:
        type: "string"
      description:
        type: "string"
      label:
        type: "string"
      type:
        type: "string"
        readOnly: true
      timeout:
        type: "integer"
        format: "int32"
      url:
        type: "string"
      invertMatch:
        type: "boolean"
      path:
        type: "string"
      HTTPBody:
        type: "string"
      followRedirection:
        type: "boolean"
      HTTPMethod:
        type: "string"
      enable:
        type: "boolean"
      postDataEditType:
        type: "string"
      name:
        type: "string"
      requireAuth:
        type: "boolean"
      fullpageLoad:
        type: "boolean"
      HTTPVersion:
        type: "string"
      keyword:
        type: "string"
      statusCode:
        type: "string"
  WidgetResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/WidgetBaseVersion1"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data: {}
      errmsg: "errmsg"
      status: 0
  DeviceDataSourceInstanceConfigAlert:
    type: "object"
    properties:
      alertLevel:
        type: "integer"
        format: "int32"
      id:
        type: "string"
      alertId:
        type: "string"
      alertSummary:
        type: "string"
      timestamp:
        type: "integer"
        format: "int64"
    example:
      alertLevel: 2
      id: "id"
      alertId: "alertId"
      alertSummary: "alertSummary"
      timestamp: 7
  Collector:
    type: "object"
    properties:
      userChangeOn:
        type: "integer"
        format: "int64"
        readOnly: true
      confVersion:
        type: "string"
        readOnly: true
      numberOfServices:
        type: "integer"
        format: "int32"
        readOnly: true
      updatedOnLocal:
        type: "string"
        readOnly: true
      hostname:
        type: "string"
        readOnly: true
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      ea:
        type: "boolean"
        readOnly: true
      watchdogUpdatedOnLocal:
        type: "string"
        readOnly: true
      hasFailOverDevice:
        type: "boolean"
        readOnly: true
      collectorGroupName:
        type: "string"
        readOnly: true
      netscanVersion:
        type: "string"
        readOnly: true
      inSDT:
        type: "boolean"
        readOnly: true
      userVisibleServicesNum:
        type: "integer"
        format: "int32"
        readOnly: true
      updatedOn:
        type: "integer"
        format: "int64"
        readOnly: true
      automaticUpgradeInfo:
        $ref: "#/definitions/AutomaticUpgradeInfo"
      numberOfHosts:
        type: "integer"
        format: "int32"
        readOnly: true
      collectorConf:
        type: "string"
        readOnly: true
      sbproxyConf:
        type: "string"
        readOnly: true
      lastSentNotificationOnLocal:
        type: "string"
        readOnly: true
      customProperties:
        type: "array"
        items:
          $ref: "#/definitions/NameAndValue"
      predefinedConfig:
        readOnly: true
        $ref: "#/definitions/JSONObject"
      onetimeUpgradeInfo:
        $ref: "#/definitions/OnetimeUpgradeInfo"
      wrapperConf:
        type: "string"
        readOnly: true
      clearSent:
        type: "boolean"
        readOnly: true
      status:
        type: "integer"
        format: "int32"
        readOnly: true
      backupAgentId:
        type: "integer"
        format: "int32"
      specifiedCollectorDeviceGroupId:
        type: "integer"
        format: "int32"
      escalatingChainId:
        type: "integer"
        format: "int32"
      collectorSize:
        type: "string"
        readOnly: true
      ackedOnLocal:
        type: "string"
        readOnly: true
      watchdogConf:
        type: "string"
        readOnly: true
      description:
        type: "string"
      createdOn:
        type: "integer"
        format: "int64"
        readOnly: true
      platform:
        type: "string"
        readOnly: true
      isDown:
        type: "boolean"
        readOnly: true
      userVisibleHostsNum:
        type: "integer"
        format: "int32"
        readOnly: true
      canDowngrade:
        type: "boolean"
        readOnly: true
      ackComment:
        type: "string"
        readOnly: true
      nextUpgradeInfo:
        readOnly: true
        $ref: "#/definitions/NextUpgradeInfo"
      suppressAlertClear:
        type: "boolean"
      nextRecipient:
        type: "integer"
        format: "int32"
        readOnly: true
      ackedOn:
        type: "integer"
        format: "int64"
        readOnly: true
      userChangeOnLocal:
        type: "string"
        readOnly: true
      collectorDeviceId:
        type: "integer"
        format: "int32"
      ackedBy:
        type: "string"
        readOnly: true
      userPermission:
        type: "string"
        readOnly: true
      needAutoCreateCollectorDevice:
        type: "boolean"
      watchdogUpdatedOn:
        type: "integer"
        format: "int64"
        readOnly: true
      canDowngradeReason:
        type: "string"
        readOnly: true
      lastSentNotificationOn:
        type: "integer"
        format: "int64"
        readOnly: true
      acked:
        type: "boolean"
        readOnly: true
      onetimeDowngradeInfo:
        $ref: "#/definitions/DowngradeInfo"
      upTime:
        type: "integer"
        format: "int64"
        readOnly: true
      build:
        type: "string"
        readOnly: true
      previousVersion:
        type: "string"
        readOnly: true
      collectorGroupId:
        type: "integer"
        format: "int32"
      createdOnLocal:
        type: "string"
        readOnly: true
      enableFailBack:
        type: "boolean"
      resendIval:
        type: "integer"
        format: "int32"
      arch:
        type: "string"
        readOnly: true
      enableFailOverOnCollectorDevice:
        type: "boolean"
      serviceConf:
        type: "string"
        readOnly: true
    example:
      userChangeOn: 0
      confVersion: "confVersion"
      numberOfServices: 6
      updatedOnLocal: "updatedOnLocal"
      hostname: "hostname"
      id: 1
      ea: true
      watchdogUpdatedOnLocal: "watchdogUpdatedOnLocal"
      hasFailOverDevice: true
      collectorGroupName: "collectorGroupName"
      netscanVersion: "netscanVersion"
      inSDT: true
      userVisibleServicesNum: 5
      updatedOn: 5
      automaticUpgradeInfo:
        dayOfWeek: "dayOfWeek"
        hour: 5
        createdBy: "createdBy"
        level: "level"
        description: "description"
        occurrence: "occurrence"
        type: "type"
        version: "version"
        minute: 5
      numberOfHosts: 2
      collectorConf: "collectorConf"
      sbproxyConf: "sbproxyConf"
      lastSentNotificationOnLocal: "lastSentNotificationOnLocal"
      customProperties:
      - name: "name"
        value: "value"
      - name: "name"
        value: "value"
      predefinedConfig: {}
      onetimeUpgradeInfo:
        createdBy: "createdBy"
        level: "level"
        endEpoch: 7
        description: "description"
        type: "type"
        majorVersion: 9
        minorVersion: 3
        startEpoch: 2
      wrapperConf: "wrapperConf"
      clearSent: true
      status: 7
      backupAgentId: 9
      specifiedCollectorDeviceGroupId: 3
      escalatingChainId: 2
      collectorSize: "collectorSize"
      ackedOnLocal: "ackedOnLocal"
      watchdogConf: "watchdogConf"
      description: "description"
      createdOn: 4
      platform: "platform"
      isDown: true
      userVisibleHostsNum: 7
      canDowngrade: true
      ackComment: "ackComment"
      nextUpgradeInfo:
        upgradeTime: "upgradeTime"
        stable: true
        majorVersion: 7
        minorVersion: 1
        mandatory: true
        upgradeTimeEpoch: 4
      suppressAlertClear: true
      nextRecipient: 1
      ackedOn: 1
      userChangeOnLocal: "userChangeOnLocal"
      collectorDeviceId: 1
      ackedBy: "ackedBy"
      userPermission: "userPermission"
      needAutoCreateCollectorDevice: true
      watchdogUpdatedOn: 6
      canDowngradeReason: "canDowngradeReason"
      lastSentNotificationOn: 7
      acked: true
      onetimeDowngradeInfo:
        createdBy: "createdBy"
        level: "level"
        endEpoch: 9
        description: "description"
        type: "type"
        majorVersion: 6
        minorVersion: 3
        startEpoch: 6
      upTime: 1
      build: "build"
      previousVersion: "previousVersion"
      collectorGroupId: 4
      createdOnLocal: "createdOnLocal"
      enableFailBack: true
      resendIval: 5
      arch: "arch"
      enableFailOverOnCollectorDevice: true
      serviceConf: "serviceConf"
  AwsSesServiceLimitsCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "period"
      properties:
        period:
          type: "integer"
          format: "int32"
  AzureInsightsCollectorAttribute:
    allOf:
    - $ref: "#/definitions/CollectorAttribute"
    - type: "object"
      required:
      - "period"
      properties:
        period:
          type: "integer"
          format: "int32"
    x-discriminator-value: "azureinsights"
  AutoDiscoveryMethod:
    type: "object"
    required:
    - "name"
    discriminator: "name"
    properties:
      name:
        type: "string"
    example:
      name: "name"
  CustomGraphLine:
    type: "object"
    required:
    - "customGraphId"
    - "dataPointName"
    - "type"
    properties:
      customGraphId:
        type: "integer"
        format: "int32"
      dataPointName:
        type: "string"
      color:
        type: "string"
      legend:
        type: "string"
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      type:
        type: "integer"
        format: "int32"
  ForecastConfiguration:
    type: "object"
    properties:
      severity:
        type: "string"
      confidence:
        type: "integer"
        format: "int32"
      timeRange:
        type: "string"
      algorithm:
        type: "string"
  InterfBandwidthReport:
    allOf:
    - $ref: "#/definitions/ReportBase"
    - type: "object"
      properties:
        hostsValType:
          type: "string"
        dateRange:
          type: "string"
        hostsVal:
          type: "string"
        rowFormat:
          type: "integer"
          format: "int32"
    x-discriminator-value: "interfaces bandwidth"
  RolePagination:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      searchId:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/Role"
    example:
      total: 0
      searchId: "searchId"
      items:
      - enableRemoteSessionInCompanyLevel: true
        customHelpLabel: "customHelpLabel"
        customHelpURL: "customHelpURL"
        privileges:
        - objectName: "objectName"
          subOperation: "subOperation"
          operation: "operation"
          objectId: "objectId"
          objectType: "objectType"
        - objectName: "objectName"
          subOperation: "subOperation"
          operation: "operation"
          objectId: "objectId"
          objectType: "objectType"
        associatedUserCount: 0
        name: "name"
        description: "description"
        id: 6
        twoFARequired: true
        requireEULA: true
        acctRequireTwoFA: true
      - enableRemoteSessionInCompanyLevel: true
        customHelpLabel: "customHelpLabel"
        customHelpURL: "customHelpURL"
        privileges:
        - objectName: "objectName"
          subOperation: "subOperation"
          operation: "operation"
          objectId: "objectId"
          objectType: "objectType"
        - objectName: "objectName"
          subOperation: "subOperation"
          operation: "operation"
          objectId: "objectId"
          objectType: "objectType"
        associatedUserCount: 0
        name: "name"
        description: "description"
        id: 6
        twoFARequired: true
        requireEULA: true
        acctRequireTwoFA: true
  AlertRuleResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/AlertRule"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        datapoint: "datapoint"
        instance: "instance"
        devices:
        - "devices"
        - "devices"
        escalatingChainId: 0
        priority: 6
        suppressAlertAckSdt: true
        datasource: "datasource"
        suppressAlertClear: true
        name: "name"
        id: 1
        levelStr: "levelStr"
        deviceGroups:
        - "deviceGroups"
        - "deviceGroups"
        escalatingChain: "escalatingChain"
        escalationInterval: 5
      errmsg: "errmsg"
      status: 5
  BigNumberWidgetData:
    allOf:
    - $ref: "#/definitions/WidgetData"
    - type: "object"
      properties:
        data:
          type: "array"
          readOnly: true
          items:
            $ref: "#/definitions/BigNumberData"
        type:
          type: "string"
          readOnly: true
    x-discriminator-value: "bignumber"
  RestAutoDashboardResult:
    type: "object"
    properties:
      createdDashboardGroup:
        $ref: "#/definitions/DashboardGroup"
      createdDashboards:
        type: "array"
        items:
          $ref: "#/definitions/DashboardBase"
      errMsg:
        type: "string"
    example:
      createdDashboardGroup:
        template: {}
        fullPath: "fullPath"
        userPermission: "userPermission"
        widgetTokens:
        - inheritList:
          - fullpath: "fullpath"
            value: "value"
          - fullpath: "fullpath"
            value: "value"
          name: "name"
          type: "type"
          value: "value"
        - inheritList:
          - fullpath: "fullpath"
            value: "value"
          - fullpath: "fullpath"
            value: "value"
          name: "name"
          type: "type"
          value: "value"
        name: "name"
        numOfDirectSubGroups: 0
        numOfDashboards: 6
        description: "description"
        id: 1
        dashboards:
        - userPermission: "userPermission"
          name: "name"
          sharable: true
          id: 5
        - userPermission: "userPermission"
          name: "name"
          sharable: true
          id: 5
        parentId: 5
        numOfDirectDashboards: 2
      createdDashboards:
      - owner: "owner"
        template: {}
        userPermission: "userPermission"
        groupId: 6
        fullName: "fullName"
        description: "description"
        sharable: true
        widgetsOrder: "widgetsOrder"
        groupName: "groupName"
        widgetTokens:
        - inheritList:
          - fullpath: "fullpath"
            value: "value"
          - fullpath: "fullpath"
            value: "value"
          name: "name"
          type: "type"
          value: "value"
        - inheritList:
          - fullpath: "fullpath"
            value: "value"
          - fullpath: "fullpath"
            value: "value"
          name: "name"
          type: "type"
          value: "value"
        name: "name"
        id: 1
        groupFullPath: "groupFullPath"
      - owner: "owner"
        template: {}
        userPermission: "userPermission"
        groupId: 6
        fullName: "fullName"
        description: "description"
        sharable: true
        widgetsOrder: "widgetsOrder"
        groupName: "groupName"
        widgetTokens:
        - inheritList:
          - fullpath: "fullpath"
            value: "value"
          - fullpath: "fullpath"
            value: "value"
          name: "name"
          type: "type"
          value: "value"
        - inheritList:
          - fullpath: "fullpath"
            value: "value"
          - fullpath: "fullpath"
            value: "value"
          name: "name"
          type: "type"
          value: "value"
        name: "name"
        id: 1
        groupFullPath: "groupFullPath"
      errMsg: "errMsg"
  EC2AutoDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
      required:
      - "accessKeyId"
      - "secretAccessKey"
      properties:
        secretAccessKey:
          type: "string"
        accessKeyId:
          type: "string"
    x-discriminator-value: "ad_ec2"
  JDBCAutoDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
      required:
      - "ports"
      - "query"
      - "type"
      - "url"
      properties:
        query:
          type: "string"
        ports:
          type: "string"
        type:
          type: "string"
        separator:
          type: "string"
        url:
          type: "string"
        sid:
          type: "string"
    x-discriminator-value: "ad_jdbc"
  SiteMonitorCheckPointPaginationResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/SiteMonitorCheckPointPagination"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        total: 0
        searchId: "searchId"
        items:
        - geoInfo: "geoInfo"
          displayPrio: 6
          name: "name"
          isEnabledInRoot: true
          description: "description"
          id: 1
        - geoInfo: "geoInfo"
          displayPrio: 6
          name: "name"
          isEnabledInRoot: true
          description: "description"
          id: 1
      errmsg: "errmsg"
      status: 5
  OpsNoteDeviceScopeV1:
    allOf:
    - $ref: "#/definitions/OpsNoteScopeVersion1"
    - type: "object"
      required:
      - "type"
      properties:
        fullPath:
          type: "string"
        groupId:
          type: "integer"
          format: "int32"
        type:
          type: "string"
        deviceId:
          type: "integer"
          format: "int32"
        deviceName:
          type: "string"
  JSONArray:
    type: "object"
  BigNumberItem:
    type: "object"
    required:
    - "dataPointName"
    - "useCommaSeparators"
    properties:
      dataPointName:
        type: "string"
      useCommaSeparators:
        type: "boolean"
      bottomLabel:
        type: "string"
      rounding:
        type: "integer"
        format: "int32"
      position:
        type: "integer"
        format: "int32"
      rightLabel:
        type: "string"
      colorThresholds:
        type: "array"
        items:
          $ref: "#/definitions/ColorThreshold"
  DeviceSLAWidget:
    allOf:
    - $ref: "#/definitions/WidgetBaseVersion1"
    - type: "object"
      required:
      - "dashboardId"
      - "metrics"
      - "name"
      - "type"
      properties:
        rowSpan:
          type: "integer"
          format: "int32"
        lastUpdatedBy:
          type: "string"
          readOnly: true
        userPermission:
          type: "string"
          readOnly: true
        colSpan:
          type: "integer"
          format: "int32"
        description:
          type: "string"
        type:
          type: "string"
        daysInWeek:
          type: "string"
        displayType:
          type: "integer"
          format: "int32"
        columnIdx:
          type: "integer"
          format: "int32"
        dashboardId:
          type: "integer"
          format: "int32"
        topX:
          type: "integer"
          format: "int32"
        bottomLabel:
          type: "string"
        extra:
          type: "string"
        name:
          type: "string"
        lastUpdatedOn:
          type: "integer"
          format: "int64"
          readOnly: true
        periodInOneDay:
          type: "string"
        theme:
          type: "string"
        interval:
          type: "integer"
          format: "int32"
        id:
          type: "integer"
          format: "int32"
        metrics:
          type: "array"
          items:
            $ref: "#/definitions/SlaMetric"
        timescale:
          type: "string"
        unmonitoredTimeType:
          type: "integer"
          format: "int32"
        colorThresholds:
          type: "array"
          items:
            $ref: "#/definitions/ColorThreshold"
        order:
          type: "integer"
          format: "int32"
    x-discriminator-value: "devicesla"
  DeviceDataSourceInstanceAlertSetting:
    type: "object"
    properties:
      globalAlertExpr:
        type: "string"
        readOnly: true
      alertClearInterval:
        type: "integer"
        format: "int32"
        readOnly: true
      disableAlerting:
        type: "boolean"
      alertExprNote:
        type: "string"
      dataPointDescription:
        type: "string"
        readOnly: true
      dataSourceInstanceId:
        type: "integer"
        format: "int32"
        readOnly: true
      disableDpAlertHostGroups:
        type: "string"
        readOnly: true
      dataPointName:
        type: "string"
        readOnly: true
      dataPointId:
        type: "integer"
        format: "int32"
        readOnly: true
      deviceGroupId:
        type: "integer"
        format: "int32"
        readOnly: true
      currentAlertId:
        type: "integer"
        format: "int32"
        readOnly: true
      parentDeviceGroupAlertExprList:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/DeviceGroupAlertThresholdInfo"
      alertingDisabledOn:
        type: "string"
        readOnly: true
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      dataSourceInstanceAlias:
        type: "string"
        readOnly: true
      deviceGroupFullPath:
        type: "string"
        readOnly: true
      alertExpr:
        type: "string"
      alertTransitionInterval:
        type: "integer"
        format: "int32"
        readOnly: true
    example:
      globalAlertExpr: "globalAlertExpr"
      alertClearInterval: 0
      disableAlerting: true
      alertExprNote: "alertExprNote"
      dataPointDescription: "dataPointDescription"
      dataSourceInstanceId: 6
      disableDpAlertHostGroups: "disableDpAlertHostGroups"
      dataPointName: "dataPointName"
      dataPointId: 1
      deviceGroupId: 5
      currentAlertId: 5
      parentDeviceGroupAlertExprList:
      - userPermission: "userPermission"
        groupId: 2
        alertEnabled: true
        groupFullPath: "groupFullPath"
        alertExpr: "alertExpr"
      - userPermission: "userPermission"
        groupId: 2
        alertEnabled: true
        groupFullPath: "groupFullPath"
        alertExpr: "alertExpr"
      alertingDisabledOn: "alertingDisabledOn"
      id: 7
      dataSourceInstanceAlias: "dataSourceInstanceAlias"
      deviceGroupFullPath: "deviceGroupFullPath"
      alertExpr: "alertExpr"
      alertTransitionInterval: 9
  NetflowPort:
    allOf:
    - $ref: "#/definitions/NetflowDataBase"
    - type: "object"
      properties:
        percentUsage:
          type: "number"
          format: "double"
          readOnly: true
        port:
          type: "integer"
          format: "int32"
          readOnly: true
        usage:
          type: "number"
          format: "double"
          readOnly: true
        description:
          type: "string"
          readOnly: true
    x-discriminator-value: "port"
  LinkedWmiClass:
    type: "object"
    required:
    - "anchorClassWMIProperty"
    - "linkedWmiClass"
    properties:
      anchorClassWMIProperty:
        type: "string"
      linkedWmiClass:
        type: "string"
      match:
        $ref: "#/definitions/PropertyMatchRule"
      myLinkWMIProperty:
        type: "string"
      ILP:
        type: "array"
        items:
          $ref: "#/definitions/ILP"
  GroupNetFlowRecord:
    allOf:
    - $ref: "#/definitions/NetflowDataBase"
    - type: "object"
      properties:
        srcIP:
          type: "string"
          readOnly: true
        percentUsage:
          type: "number"
          format: "double"
          readOnly: true
        lastEpochInSec:
          type: "integer"
          format: "int64"
          readOnly: true
        ifOut:
          type: "integer"
          format: "int64"
          readOnly: true
        usage:
          type: "number"
          format: "double"
          readOnly: true
        dstDNS:
          type: "string"
          readOnly: true
        srcPort:
          type: "integer"
          format: "int32"
          readOnly: true
        deviceDisplayName:
          type: "string"
        firstEpochInSec:
          type: "integer"
          format: "int64"
          readOnly: true
        protocol:
          type: "string"
          readOnly: true
        dstPort:
          type: "integer"
          format: "int32"
          readOnly: true
        ifIn:
          type: "integer"
          format: "int64"
          readOnly: true
        sourceMBytes:
          type: "number"
          format: "double"
          readOnly: true
        srcDNS:
          type: "string"
          readOnly: true
        destinationMBytes:
          type: "number"
          format: "double"
          readOnly: true
        dstIP:
          type: "string"
          readOnly: true
    x-discriminator-value: "groupflowrecord"
  NormalGraphWidget:
    allOf:
    - $ref: "#/definitions/WidgetBaseVersion1"
    - type: "object"
      required:
      - "dashboardId"
      - "dsiId"
      - "graphId"
      - "name"
      - "type"
      properties:
        rowSpan:
          type: "integer"
          format: "int32"
        lastUpdatedBy:
          type: "string"
          readOnly: true
        hostName:
          type: "string"
          readOnly: true
        hId:
          type: "integer"
          format: "int32"
        dsiId:
          type: "integer"
          format: "int32"
        userPermission:
          type: "string"
          readOnly: true
        dsName:
          type: "string"
          readOnly: true
        colSpan:
          type: "integer"
          format: "int32"
        description:
          type: "string"
        type:
          type: "string"
        graphName:
          type: "string"
          readOnly: true
        columnIdx:
          type: "integer"
          format: "int32"
        dashboardId:
          type: "integer"
          format: "int32"
        extra:
          type: "string"
        name:
          type: "string"
        lastUpdatedOn:
          type: "integer"
          format: "int64"
          readOnly: true
        theme:
          type: "string"
        interval:
          type: "integer"
          format: "int32"
        id:
          type: "integer"
          format: "int32"
        timescale:
          type: "string"
        graphId:
          type: "integer"
          format: "int32"
        dsiName:
          type: "string"
          readOnly: true
        order:
          type: "integer"
          format: "int32"
    x-discriminator-value: "ngraph"
  RestDynamicColumn:
    type: "object"
    properties:
      name:
        type: "string"
      isHidden:
        type: "boolean"
  Response:
    type: "object"
    properties:
      data:
        type: "object"
        properties: {}
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data: "{}"
      errmsg: "errmsg"
      status: 0
  DeviceDatasourceInstanceConfigPagination:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      searchId:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/DeviceDataSourceInstanceConfig"
  ServiceGraphWidget:
    allOf:
    - $ref: "#/definitions/WidgetBaseVersion1"
    - type: "object"
      required:
      - "dashboardId"
      - "name"
      - "serviceCheckpointId"
      - "type"
      properties:
        rowSpan:
          type: "integer"
          format: "int32"
        lastUpdatedBy:
          type: "string"
          readOnly: true
        userPermission:
          type: "string"
          readOnly: true
        geoInfo:
          type: "string"
          readOnly: true
        colSpan:
          type: "integer"
          format: "int32"
        description:
          type: "string"
        type:
          type: "string"
        serviceName:
          type: "string"
          readOnly: true
        graph:
          type: "string"
        columnIdx:
          type: "integer"
          format: "int32"
        dashboardId:
          type: "integer"
          format: "int32"
        extra:
          type: "string"
        name:
          type: "string"
        lastUpdatedOn:
          type: "integer"
          format: "int64"
          readOnly: true
        theme:
          type: "string"
        interval:
          type: "integer"
          format: "int32"
        serviceCheckpointId:
          type: "integer"
          format: "int32"
        id:
          type: "integer"
          format: "int32"
        timescale:
          type: "string"
        order:
          type: "integer"
          format: "int32"
    x-discriminator-value: "sgraph"
  HtmlWidget:
    allOf:
    - $ref: "#/definitions/WidgetBaseVersion1"
    - type: "object"
      required:
      - "dashboardId"
      - "name"
      - "resources"
      - "type"
      properties:
        rowSpan:
          type: "integer"
          format: "int32"
        lastUpdatedBy:
          type: "string"
          readOnly: true
        userPermission:
          type: "string"
          readOnly: true
        colSpan:
          type: "integer"
          format: "int32"
        description:
          type: "string"
        resources:
          type: "array"
          uniqueItems: true
          items:
            $ref: "#/definitions/WebResource"
        type:
          type: "string"
        columnIdx:
          type: "integer"
          format: "int32"
        dashboardId:
          type: "integer"
          format: "int32"
        extra:
          type: "string"
        name:
          type: "string"
        isCustom:
          type: "boolean"
        lastUpdatedOn:
          type: "integer"
          format: "int64"
          readOnly: true
        theme:
          type: "string"
        interval:
          type: "integer"
          format: "int32"
        id:
          type: "integer"
          format: "int32"
        timescale:
          type: "string"
        order:
          type: "integer"
          format: "int32"
    x-discriminator-value: "html"
  NetflowBandwidth:
    allOf:
    - $ref: "#/definitions/NetflowDataBase"
    - type: "object"
      properties:
        receive:
          type: "number"
          format: "double"
        usage:
          type: "number"
          format: "double"
        send:
          type: "number"
          format: "double"
        deviceDisplayName:
          type: "string"
    x-discriminator-value: "bandwidth"
  Privilege:
    type: "object"
    required:
    - "objectId"
    - "objectType"
    - "operation"
    properties:
      objectName:
        type: "string"
        readOnly: true
      subOperation:
        type: "string"
        readOnly: true
      operation:
        type: "string"
      objectId:
        type: "string"
      objectType:
        type: "string"
    example:
      objectName: "objectName"
      subOperation: "subOperation"
      operation: "operation"
      objectId: "objectId"
      objectType: "objectType"
  XENAutoDiscoveryMethod:
    allOf:
    - $ref: "#/definitions/AutoDiscoveryMethod"
    - type: "object"
      required:
      - "entity"
      properties:
        entity:
          type: "string"
    x-discriminator-value: "ad_xen"
  DashboardGroupResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/DashboardGroup"
      errmsg:
        type: "string"
      status:
        type: "integer"
        format: "int32"
    example:
      data:
        template: {}
        fullPath: "fullPath"
        userPermission: "userPermission"
        widgetTokens:
        - inheritList:
          - fullpath: "fullpath"
            value: "value"
          - fullpath: "fullpath"
            value: "value"
          name: "name"
          type: "type"
          value: "value"
        - inheritList:
          - fullpath: "fullpath"
            value: "value"
          - fullpath: "fullpath"
            value: "value"
          name: "name"
          type: "type"
          value: "value"
        name: "name"
        numOfDirectSubGroups: 0
        numOfDashboards: 6
        description: "description"
        id: 1
        dashboards:
        - userPermission: "userPermission"
          name: "name"
          sharable: true
          id: 5
        - userPermission: "userPermission"
          name: "name"
          sharable: true
          id: 5
        parentId: 5
        numOfDirectDashboards: 2
      errmsg: "errmsg"
      status: 0
  PieChartItem:
    type: "object"
    required:
    - "dataPointName"
    - "legend"
    properties:
      dataPointName:
        type: "string"
      color:
        type: "string"
      legend:
        type: "string"
