// Code generated by go-swagger; DO NOT EDIT.

package lm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/logicmonitor/lm-sdk-go/models"
)

// NewUpdateSDTByIDParams creates a new UpdateSDTByIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateSDTByIDParams() *UpdateSDTByIDParams {
	return &UpdateSDTByIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateSDTByIDParamsWithTimeout creates a new UpdateSDTByIDParams object
// with the ability to set a timeout on a request.
func NewUpdateSDTByIDParamsWithTimeout(timeout time.Duration) *UpdateSDTByIDParams {
	return &UpdateSDTByIDParams{
		timeout: timeout,
	}
}

// NewUpdateSDTByIDParamsWithContext creates a new UpdateSDTByIDParams object
// with the ability to set a context for a request.
func NewUpdateSDTByIDParamsWithContext(ctx context.Context) *UpdateSDTByIDParams {
	return &UpdateSDTByIDParams{
		Context: ctx,
	}
}

// NewUpdateSDTByIDParamsWithHTTPClient creates a new UpdateSDTByIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateSDTByIDParamsWithHTTPClient(client *http.Client) *UpdateSDTByIDParams {
	return &UpdateSDTByIDParams{
		HTTPClient: client,
	}
}

/* UpdateSDTByIDParams contains all the parameters to send to the API endpoint
   for the update SDT by Id operation.

   Typically these are written to a http.Request.
*/
type UpdateSDTByIDParams struct {

	// UserAgent.
	//
	// Default: "Logicmonitor/SDK: Argus Dist-95bb3f4-dirty"
	UserAgent *string

	// Body.
	Body models.SDT

	// ID.
	ID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update SDT by Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateSDTByIDParams) WithDefaults() *UpdateSDTByIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update SDT by Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateSDTByIDParams) SetDefaults() {
	var (
		userAgentDefault = string("Logicmonitor/SDK: Argus Dist-95bb3f4-dirty")
	)

	val := UpdateSDTByIDParams{
		UserAgent: &userAgentDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the update SDT by Id params
func (o *UpdateSDTByIDParams) WithTimeout(timeout time.Duration) *UpdateSDTByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update SDT by Id params
func (o *UpdateSDTByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update SDT by Id params
func (o *UpdateSDTByIDParams) WithContext(ctx context.Context) *UpdateSDTByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update SDT by Id params
func (o *UpdateSDTByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update SDT by Id params
func (o *UpdateSDTByIDParams) WithHTTPClient(client *http.Client) *UpdateSDTByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update SDT by Id params
func (o *UpdateSDTByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithUserAgent adds the userAgent to the update SDT by Id params
func (o *UpdateSDTByIDParams) WithUserAgent(userAgent *string) *UpdateSDTByIDParams {
	o.SetUserAgent(userAgent)
	return o
}

// SetUserAgent adds the userAgent to the update SDT by Id params
func (o *UpdateSDTByIDParams) SetUserAgent(userAgent *string) {
	o.UserAgent = userAgent
}

// WithBody adds the body to the update SDT by Id params
func (o *UpdateSDTByIDParams) WithBody(body models.SDT) *UpdateSDTByIDParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update SDT by Id params
func (o *UpdateSDTByIDParams) SetBody(body models.SDT) {
	o.Body = body
}

// WithID adds the id to the update SDT by Id params
func (o *UpdateSDTByIDParams) WithID(id string) *UpdateSDTByIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the update SDT by Id params
func (o *UpdateSDTByIDParams) SetID(id string) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateSDTByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.UserAgent != nil {

		// header param User-Agent
		if err := r.SetHeaderParam("User-Agent", *o.UserAgent); err != nil {
			return err
		}
	}
	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
