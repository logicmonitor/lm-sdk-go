// Code generated by go-swagger; DO NOT EDIT.

package lm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/logicmonitor/lm-sdk-go/models"
)

// GetDeviceInstanceListReader is a Reader for the getDeviceInstanceList structure.
type GetDeviceInstanceListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeviceInstanceListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDeviceInstanceListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetDeviceInstanceListDefault(response.Code())
		if result.Code() == 429 {
			errResp := &models.ErrorResponse{
				ErrorCode: 429,
				ErrorDetail: map[string]interface{}{
					"x-rate-limit-limit":     response.GetHeader("x-rate-limit-limit"),
					"x-rate-limit-remaining": response.GetHeader("x-rate-limit-remaining"),
					"x-rate-limit-window":    response.GetHeader("x-rate-limit-window"),
				},
				ErrorMessage: "Customized response from argus sdk",
			}
			result.Payload = errResp
			return nil, result
		}
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetDeviceInstanceListOK creates a GetDeviceInstanceListOK with default headers values
func NewGetDeviceInstanceListOK() *GetDeviceInstanceListOK {
	return &GetDeviceInstanceListOK{}
}

/*GetDeviceInstanceListOK handles this case with default header values.

successful operation
*/
type GetDeviceInstanceListOK struct {
	Payload *models.DeviceDatasourceInstancePaginationResponse
}

func (o *GetDeviceInstanceListOK) Error() string {
	return fmt.Sprintf("[GET /device/devices/{deviceId}/instances][%d] getDeviceInstanceListOK  %+v", 200, o.Payload)
}

func (o *GetDeviceInstanceListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeviceDatasourceInstancePaginationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceInstanceListDefault creates a GetDeviceInstanceListDefault with default headers values
func NewGetDeviceInstanceListDefault(code int) *GetDeviceInstanceListDefault {
	return &GetDeviceInstanceListDefault{
		_statusCode: code,
	}
}

/*GetDeviceInstanceListDefault handles this case with default header values.

Error
*/
type GetDeviceInstanceListDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the get device instance list default response
func (o *GetDeviceInstanceListDefault) Code() int {
	return o._statusCode
}

func (o *GetDeviceInstanceListDefault) Error() string {
	return fmt.Sprintf("[GET /device/devices/{deviceId}/instances][%d] getDeviceInstanceList default  %+v", o._statusCode, o.Payload)
}

func (o *GetDeviceInstanceListDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
